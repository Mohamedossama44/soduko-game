Start Mode 2


after make cell (2,2) = 4


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (2, 2) is reduced to 4.


Apply Binary constraint to the Initial Board


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (6, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [1, 2, 3, 5, 6, 7, 8, 9]


Trying value 1 for cell (0, 0), current depth :0


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {1, 2, 3, 5, 6, 7, 8, 9}.


The domain of cell (0, 0) is reduced to 1.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 5), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 0), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,0).


Go deep in the search tree parent cell (0,0) with value 1 ,current depth:0


MRV cell is (0, 1)


Attempting to fill cell (0, 1) with domain values: [2, 3, 5, 6, 7, 8, 9]


Trying value 2 for cell (0, 1), current depth :1


Applying uniaray constraint.


Orginal domain of cell (0, 1) before reduction {2, 3, 5, 6, 7, 8, 9}.


The domain of cell (0, 1) is reduced to 2.


Applying Binary constraint.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 0), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 7), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 1), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 0), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 6), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,1).


Go deep in the search tree parent cell (0,1) with value 2 ,current depth:1


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [3, 5, 6, 7, 8, 9]


Trying value 3 for cell (0, 2), current depth :2


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {3, 5, 6, 7, 8, 9}.


The domain of cell (0, 2) is reduced to 3.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 5), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 0), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 2), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 1), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 3 ,current depth:2


MRV cell is (1, 0)


Attempting to fill cell (1, 0) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (1, 0), current depth :3


Applying uniaray constraint.


Orginal domain of cell (1, 0) before reduction {5, 6, 7, 8, 9}.


The domain of cell (1, 0) is reduced to 5.


Applying Binary constraint.


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 1), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,0).


Go deep in the search tree parent cell (1,0) with value 5 ,current depth:3


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [6, 7, 8, 9]


Trying value 6 for cell (1, 1), current depth :4


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {8, 9, 6, 7}.


The domain of cell (1, 1) is reduced to 6.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {8, 9, 7}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {8, 9, 7}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {8, 9, 7}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 6 ,current depth:4


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [7, 8, 9]


Trying value 7 for cell (1, 2), current depth :5


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {8, 9, 7}.


The domain of cell (1, 2) is reduced to 7.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {8, 9}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {8, 9}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,2).


Go deep in the search tree parent cell (1,2) with value 7 ,current depth:5


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [8, 9]


Trying value 8 for cell (2, 0), current depth :6


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {8, 9}.


The domain of cell (2, 0) is reduced to 8.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {8, 9}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {9}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7}.


End of Binary Constraints, Checks done for cell: (2,0).


After make inferences we see that the domain of cell (2, 1) is {9}


Adding to board in cell :(2, 1),value :9


Go deep in the search tree parent cell (2,0) with value 8 ,current depth:6


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [4, 5, 6, 7, 8, 9]


Trying value 4 for cell (0, 3), current depth :7


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {4, 5, 6, 7, 8, 9}.


The domain of cell (0, 3) is reduced to 4.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 8), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 8, 9}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 7), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 8, 9}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 8, 9}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 6), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,3).


Go deep in the search tree parent cell (0,3) with value 4 ,current depth:7


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (0, 4), current depth :8


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {5, 6, 7, 8, 9}.


The domain of cell (0, 4) is reduced to 5.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 5), Now the domain is {6, 7, 8, 9}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {6, 7, 8, 9}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 6, 7}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 8, 9}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {6, 7, 8, 9}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 6, 7}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 8, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 8, 9}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {6, 7, 8, 9}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,4).


Go deep in the search tree parent cell (0,4) with value 5 ,current depth:8


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [6, 7, 8, 9]


Trying value 6 for cell (0, 5), current depth :9


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {8, 9, 6, 7}.


The domain of cell (0, 5) is reduced to 6.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {8, 9, 7}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 7}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 8, 9}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {8, 9, 7}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 7}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 8, 9}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 8, 9}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 6), Now the domain is {8, 9, 7}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 7}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 6 ,current depth:9


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [7, 8, 9]


Trying value 7 for cell (0, 6), current depth :10


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {8, 9, 7}.


The domain of cell (0, 6) is reduced to 7.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 8, 9}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {8, 9}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 6), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {8, 9}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 8, 9}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 8, 9}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 7 ,current depth:10


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [8, 9]


Trying value 8 for cell (0, 7), current depth :11


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {8, 9}.


The domain of cell (0, 7) is reduced to 8.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 9}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {8, 9}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {9}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 9}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 9}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 9}.


Revised: The value 9 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 9}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 9}.


Revised: The value 9 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {9}


Adding to board in cell :(0, 8),value :9


Go deep in the search tree parent cell (0,7) with value 8 ,current depth:11


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [1, 2, 3, 4]


Trying value 1 for cell (1, 6), current depth :12


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {1, 2, 3, 4}.


The domain of cell (1, 6) is reduced to 1.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 8, 9}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {2, 3, 5, 6}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {2, 3, 5, 6}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {2, 3, 8, 9}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {2, 3, 4}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 4), Now the domain is {2, 3, 8, 9}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4}.


Revised: The value 1 is removed from the domain of node (1, 7), Now the domain is {2, 3, 4}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6}.


Revised: The value 1 is removed from the domain of node (2, 6), Now the domain is {2, 3, 5, 6}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 1 ,current depth:12


MRV cell is (1, 7)


Attempting to fill cell (1, 7) with domain values: [2, 3, 4]


Trying value 2 for cell (1, 7), current depth :13


Applying uniaray constraint.


Orginal domain of cell (1, 7) before reduction {2, 3, 4}.


The domain of cell (1, 7) is reduced to 2.


Applying Binary constraint.


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 3, 4, 5, 6, 7, 9}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {1, 3, 4, 5, 6, 7, 9}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2, 3}.


Revised: The value 2 is removed from the domain of node (1, 3), Now the domain is {8, 9, 3}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {2, 3, 5, 6}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {3, 5, 6}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {1, 3, 4, 5, 6, 7, 9}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {2, 3, 5, 6}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {3, 5, 6}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {8, 9, 2, 3}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {8, 9, 3}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {2, 3, 4}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {3, 4}.


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 5, 6, 7, 9}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 3, 4, 5, 6, 7, 9}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 3, 4, 5, 6, 7, 9}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 2, 3}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {8, 9, 3}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {2, 3, 5, 6}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {3, 5, 6}.


End of Binary Constraints, Checks done for cell: (1,7).


Go deep in the search tree parent cell (1,7) with value 2 ,current depth:13


MRV cell is (1, 8)


Attempting to fill cell (1, 8) with domain values: [3, 4]


Trying value 3 for cell (1, 8), current depth :14


Applying uniaray constraint.


Orginal domain of cell (1, 8) before reduction {3, 4}.


The domain of cell (1, 8) is reduced to 3.


Applying Binary constraint.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 3}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {8, 9}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {5, 6}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (1, 8) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {5, 6}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {8, 9, 3}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {8, 9}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 3}.


Revised: The value 3 is removed from the domain of node (1, 4), Now the domain is {8, 9}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 8) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {5, 6}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,8).


Go deep in the search tree parent cell (1,8) with value 3 ,current depth:14


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [8, 9]


Trying value 8 for cell (1, 3), current depth :15


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {8, 9}.


The domain of cell (1, 3) is reduced to 8.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 7}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 3), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 7}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {8, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {9}.


Domain of (1, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(1, 5) for AC- check


Add to the Queue (1, 0),(1, 5) for AC- check


Add to the Queue (1, 6),(1, 5) for AC- check


Add to the Queue (2, 5),(1, 5) for AC- check


Add to the Queue (6, 5),(1, 5) for AC- check


Add to the Queue (4, 5),(1, 5) for AC- check


Add to the Queue (8, 5),(1, 5) for AC- check


Add to the Queue (2, 4),(1, 5) for AC- check


Add to the Queue (1, 2),(1, 5) for AC- check


Add to the Queue (0, 4),(1, 5) for AC- check


Add to the Queue (1, 8),(1, 5) for AC- check


Add to the Queue (3, 5),(1, 5) for AC- check


Add to the Queue (5, 5),(1, 5) for AC- check


Add to the Queue (1, 1),(1, 5) for AC- check


Add to the Queue (0, 3),(1, 5) for AC- check


Add to the Queue (1, 4),(1, 5) for AC- check


Add to the Queue (2, 3),(1, 5) for AC- check


Add to the Queue (1, 7),(1, 5) for AC- check


Add to the Queue (7, 5),(1, 5) for AC- check


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 3), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {8, 9}.


Revised: The value 8 is removed from the domain of node (1, 4), Now the domain is {9}.


Domain of (1, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(1, 4) for AC- check


Add to the Queue (5, 4),(1, 4) for AC- check


Add to the Queue (0, 5),(1, 4) for AC- check


Add to the Queue (1, 0),(1, 4) for AC- check


Add to the Queue (1, 6),(1, 4) for AC- check


Add to the Queue (2, 5),(1, 4) for AC- check


Add to the Queue (7, 4),(1, 4) for AC- check


Add to the Queue (2, 4),(1, 4) for AC- check


Add to the Queue (1, 2),(1, 4) for AC- check


Add to the Queue (0, 4),(1, 4) for AC- check


Add to the Queue (1, 5),(1, 4) for AC- check


Add to the Queue (1, 8),(1, 4) for AC- check


Add to the Queue (6, 4),(1, 4) for AC- check


Add to the Queue (4, 4),(1, 4) for AC- check


Add to the Queue (8, 4),(1, 4) for AC- check


Add to the Queue (1, 1),(1, 4) for AC- check


Add to the Queue (0, 3),(1, 4) for AC- check


Add to the Queue (2, 3),(1, 4) for AC- check


Add to the Queue (1, 7),(1, 4) for AC- check


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 7}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 3), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 7}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 7}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Revised: The value 9 is removed from the domain of node (1, 4), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (1,3).


Undo operation ,current depth : 15.


Remove the assigment from the board ,(1,3)=0.


No inferences made from cell (1,3) to remove it.


Trying value 9 for cell (1, 3), current depth :15


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {8, 9}.


The domain of cell (1, 3) is reduced to 9.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 7}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 7}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {8, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {8}.


Domain of (1, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(1, 5) for AC- check


Add to the Queue (1, 0),(1, 5) for AC- check


Add to the Queue (1, 6),(1, 5) for AC- check


Add to the Queue (2, 5),(1, 5) for AC- check


Add to the Queue (6, 5),(1, 5) for AC- check


Add to the Queue (4, 5),(1, 5) for AC- check


Add to the Queue (8, 5),(1, 5) for AC- check


Add to the Queue (2, 4),(1, 5) for AC- check


Add to the Queue (1, 2),(1, 5) for AC- check


Add to the Queue (0, 4),(1, 5) for AC- check


Add to the Queue (1, 8),(1, 5) for AC- check


Add to the Queue (3, 5),(1, 5) for AC- check


Add to the Queue (5, 5),(1, 5) for AC- check


Add to the Queue (1, 1),(1, 5) for AC- check


Add to the Queue (0, 3),(1, 5) for AC- check


Add to the Queue (1, 4),(1, 5) for AC- check


Add to the Queue (2, 3),(1, 5) for AC- check


Add to the Queue (1, 7),(1, 5) for AC- check


Add to the Queue (7, 5),(1, 5) for AC- check


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {8, 9}.


Revised: The value 9 is removed from the domain of node (1, 4), Now the domain is {8}.


Domain of (1, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(1, 4) for AC- check


Add to the Queue (5, 4),(1, 4) for AC- check


Add to the Queue (0, 5),(1, 4) for AC- check


Add to the Queue (1, 0),(1, 4) for AC- check


Add to the Queue (1, 6),(1, 4) for AC- check


Add to the Queue (2, 5),(1, 4) for AC- check


Add to the Queue (7, 4),(1, 4) for AC- check


Add to the Queue (2, 4),(1, 4) for AC- check


Add to the Queue (1, 2),(1, 4) for AC- check


Add to the Queue (0, 4),(1, 4) for AC- check


Add to the Queue (1, 5),(1, 4) for AC- check


Add to the Queue (1, 8),(1, 4) for AC- check


Add to the Queue (6, 4),(1, 4) for AC- check


Add to the Queue (4, 4),(1, 4) for AC- check


Add to the Queue (8, 4),(1, 4) for AC- check


Add to the Queue (1, 1),(1, 4) for AC- check


Add to the Queue (0, 3),(1, 4) for AC- check


Add to the Queue (2, 3),(1, 4) for AC- check


Add to the Queue (1, 7),(1, 4) for AC- check


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 7}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 7}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 4, 5, 7, 9}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 5), Now the domain is {1, 2, 3, 4, 5, 7, 9}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 4, 5, 7, 9}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 7}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 4, 5, 7, 9}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 4, 5, 7, 9}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Revised: The value 8 is removed from the domain of node (1, 4), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (1,3).


Undo operation ,current depth : 15.


Remove the assigment from the board ,(1,3)=0.


No inferences made from cell (1,3) to remove it.


Backtracking... No valid value found for cell (1, 3) , current depth: 15.


Undo operation ,current depth : 14.


Remove the assigment from the board ,(1,8)=0.


Inference items :dict_items([])


Remove the inferences from the board


Trying value 4 for cell (1, 8), current depth :14


Applying uniaray constraint.


Orginal domain of cell (1, 8) before reduction {3, 4}.


The domain of cell (1, 8) is reduced to 4.


Applying Binary constraint.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 3}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (1, 8) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {8, 9, 3}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 3}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 8) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,8).


Go deep in the search tree parent cell (1,8) with value 4 ,current depth:14


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [3, 8, 9]


Trying value 3 for cell (1, 3), current depth :15


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {8, 9, 3}.


The domain of cell (1, 3) is reduced to 3.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 3), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 7}.


Revised: The value 3 is removed from the domain of node (2, 5), Now the domain is {1, 2, 7}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 3), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 3), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 7}.


Revised: The value 3 is removed from the domain of node (2, 4), Now the domain is {1, 2, 7}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {8, 9, 3}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {8, 9}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 3}.


Revised: The value 3 is removed from the domain of node (1, 4), Now the domain is {8, 9}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 7}.


Revised: The value 3 is removed from the domain of node (2, 3), Now the domain is {1, 2, 7}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,3).


Go deep in the search tree parent cell (1,3) with value 3 ,current depth:15


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [8, 9]


Trying value 8 for cell (1, 4), current depth :16


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {8, 9}.


The domain of cell (1, 4) is reduced to 8.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 7}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 7}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {8, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {9}.


Domain of (1, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(1, 5) for AC- check


Add to the Queue (1, 0),(1, 5) for AC- check


Add to the Queue (1, 6),(1, 5) for AC- check


Add to the Queue (2, 5),(1, 5) for AC- check


Add to the Queue (1, 3),(1, 5) for AC- check


Add to the Queue (6, 5),(1, 5) for AC- check


Add to the Queue (4, 5),(1, 5) for AC- check


Add to the Queue (8, 5),(1, 5) for AC- check


Add to the Queue (2, 4),(1, 5) for AC- check


Add to the Queue (1, 2),(1, 5) for AC- check


Add to the Queue (0, 4),(1, 5) for AC- check


Add to the Queue (1, 8),(1, 5) for AC- check


Add to the Queue (3, 5),(1, 5) for AC- check


Add to the Queue (5, 5),(1, 5) for AC- check


Add to the Queue (1, 1),(1, 5) for AC- check


Add to the Queue (0, 3),(1, 5) for AC- check


Add to the Queue (2, 3),(1, 5) for AC- check


Add to the Queue (1, 7),(1, 5) for AC- check


Add to the Queue (7, 5),(1, 5) for AC- check


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 7}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 7}.


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 7}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 7}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,4).


After make inferences we see that the domain of cell (1, 5) is {9}


Adding to board in cell :(1, 5),value :9


Go deep in the search tree parent cell (1,4) with value 8 ,current depth:16


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [1, 2, 7]


Trying value 1 for cell (2, 3), current depth :17


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {1, 2, 7}.


The domain of cell (2, 3) is reduced to 1.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 7}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {2, 7}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 7}.


Revised: The value 1 is removed from the domain of node (2, 4), Now the domain is {2, 7}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,3).


Go deep in the search tree parent cell (2,3) with value 1 ,current depth:17


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [2, 7]


Trying value 2 for cell (2, 4), current depth :18


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {2, 7}.


The domain of cell (2, 4) is reduced to 2.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {2, 7}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {7}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (1, 5),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 4), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 4, 5, 8}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 5), Now the domain is {1, 2, 3, 4, 5, 8}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 4, 5, 8}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (2, 5) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 4, 5, 8}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 4, 5, 8}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 4, 5, 8}.


End of Binary Constraints, Checks done for cell: (2,4).


After make inferences we see that the domain of cell (2, 5) is {7}


Adding to board in cell :(2, 5),value :7


Go deep in the search tree parent cell (2,4) with value 2 ,current depth:18


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [3, 5, 6]


Trying value 3 for cell (2, 6), current depth :19


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {3, 5, 6}.


The domain of cell (2, 6) is reduced to 3.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {2, 4, 5, 6, 8, 9}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {2, 4, 5, 6, 8, 9}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {5, 6}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 6), Now the domain is {2, 4, 5, 6, 8, 9}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {2, 4, 5, 6, 8, 9}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {5, 6}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {2, 4, 5, 6, 8, 9}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {2, 4, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,6).


Go deep in the search tree parent cell (2,6) with value 3 ,current depth:19


MRV cell is (2, 7)


Attempting to fill cell (2, 7) with domain values: [5, 6]


Trying value 5 for cell (2, 7), current depth :20


Applying uniaray constraint.


Orginal domain of cell (2, 7) before reduction {5, 6}.


The domain of cell (2, 7) is reduced to 5.


Applying Binary constraint.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {5, 6}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {6}.


Domain of (2, 8) is one value ,we need to add AC constraint.


Add to the Queue (2, 2),(2, 8) for AC- check


Add to the Queue (1, 6),(2, 8) for AC- check


Add to the Queue (0, 8),(2, 8) for AC- check


Add to the Queue (2, 5),(2, 8) for AC- check


Add to the Queue (6, 8),(2, 8) for AC- check


Add to the Queue (4, 8),(2, 8) for AC- check


Add to the Queue (8, 8),(2, 8) for AC- check


Add to the Queue (2, 4),(2, 8) for AC- check


Add to the Queue (0, 7),(2, 8) for AC- check


Add to the Queue (2, 1),(2, 8) for AC- check


Add to the Queue (1, 8),(2, 8) for AC- check


Add to the Queue (3, 8),(2, 8) for AC- check


Add to the Queue (5, 8),(2, 8) for AC- check


Add to the Queue (2, 0),(2, 8) for AC- check


Add to the Queue (0, 6),(2, 8) for AC- check


Add to the Queue (2, 3),(2, 8) for AC- check


Add to the Queue (1, 7),(2, 8) for AC- check


Add to the Queue (2, 6),(2, 8) for AC- check


Add to the Queue (7, 8),(2, 8) for AC- check


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (3, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


End of Binary Constraints, Checks done for cell: (2,7).


After make inferences we see that the domain of cell (2, 8) is {6}


Adding to board in cell :(2, 8),value :6


Go deep in the search tree parent cell (2,7) with value 5 ,current depth:20


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [2, 3, 4, 6, 7, 9]


Trying value 2 for cell (3, 0), current depth :21


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {2, 3, 4, 6, 7, 9}.


The domain of cell (3, 0) is reduced to 2.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (4, 0), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {1, 3, 4, 6, 7, 9}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {1, 3, 4, 6, 7, 9}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 7, 8}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {1, 5, 6, 8, 9}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 3), Now the domain is {5, 6, 7, 8, 9}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {2, 4, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {4, 5, 6, 8, 9}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 5, 6, 8, 9}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 4, 5, 7, 8}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 8}.


Revised: The value 2 is removed from the domain of node (3, 5), Now the domain is {1, 3, 4, 5, 8}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {1, 5, 6, 8, 9}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 8), Now the domain is {1, 3, 5, 7, 8}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {3, 4, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (3,0).


Go deep in the search tree parent cell (3,0) with value 2 ,current depth:21


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [1, 5, 6, 8, 9]


Trying value 1 for cell (3, 2), current depth :22


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {1, 5, 6, 8, 9}.


The domain of cell (3, 2) is reduced to 1.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {3, 4, 6, 7, 9}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {1, 3, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {3, 4, 5, 7, 8}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {1, 3, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {3, 4, 5, 7, 8}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 2), Now the domain is {2, 5, 6, 8, 9}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {5, 6, 8, 9}.


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {5, 6, 7, 8, 9}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 6, 7, 9}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {4, 5, 6, 8, 9}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {2, 5, 6, 8, 9}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {3, 4, 5, 7, 8}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {1, 3, 4, 5, 8}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {3, 4, 5, 8}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {5, 6, 8, 9}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {1, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {3, 5, 7, 8}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {2, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,2).


Go deep in the search tree parent cell (3,2) with value 1 ,current depth:22


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [3, 4, 5, 8]


Trying value 3 for cell (3, 5), current depth :23


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {8, 3, 4, 5}.


The domain of cell (3, 5) is reduced to 3.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (3, 4), Now the domain is {4, 6, 7, 9}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {2, 5, 6, 7, 8, 9}.


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {3, 4, 5, 7, 8}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {4, 5, 7, 8}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {4, 6, 7, 9}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {1, 4, 6, 7, 9}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 8}.


Revised: The value 3 is removed from the domain of node (6, 5), Now the domain is {1, 2, 4, 5, 8}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 3, 4, 5, 8}.


Revised: The value 3 is removed from the domain of node (4, 5), Now the domain is {1, 2, 4, 5, 8}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {5, 6, 7, 8, 9}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {4, 5, 6, 8, 9}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {2, 5, 6, 7, 8, 9}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 8}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {1, 2, 4, 5, 8}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (4, 4), Now the domain is {1, 4, 6, 7, 9}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {8, 5, 7}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 8}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {1, 2, 4, 5, 8}.


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 8}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {1, 2, 4, 5, 8}.


End of Binary Constraints, Checks done for cell: (3,5).


Go deep in the search tree parent cell (3,5) with value 3 ,current depth:23


MRV cell is (3, 8)


Attempting to fill cell (3, 8) with domain values: [5, 7, 8]


Trying value 5 for cell (3, 8), current depth :24


Applying uniaray constraint.


Orginal domain of cell (3, 8) before reduction {8, 5, 7}.


The domain of cell (3, 8) is reduced to 5.


Applying Binary constraint.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {9, 4, 6, 7}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {8, 4, 5, 7}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {8, 4, 7}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {9, 4, 6, 7}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {2, 4, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {2, 4, 6, 8, 9}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 6, 7, 9}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 7, 8}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 3), Now the domain is {6, 7, 8, 9}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {2, 4, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 6), Now the domain is {2, 4, 6, 8, 9}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 7, 8}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {4, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {4, 6, 8, 9}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 7, 8}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 4, 6, 7, 9}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 7, 8}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,8).


Go deep in the search tree parent cell (3,8) with value 5 ,current depth:24


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [4, 7, 8]


Trying value 4 for cell (3, 1), current depth :25


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {8, 4, 7}.


The domain of cell (3, 1) is reduced to 4.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {3, 4, 6, 7, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {3, 6, 7, 9}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {9, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {9, 6, 7}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {9, 6, 7}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {3, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {3, 5, 7, 8}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (7, 1), Now the domain is {1, 3, 5, 7, 8}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {8, 9, 5, 6}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 6, 7}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 6, 7, 9}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {3, 6, 7, 9}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {8, 9, 4, 6}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {8, 9, 6}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {1, 3, 5, 7, 8}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {3, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {3, 5, 7, 8}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 6}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 3, 5, 7, 8}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 4 ,current depth:25


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [6, 7, 9]


Trying value 6 for cell (3, 4), current depth :26


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {9, 6, 7}.


The domain of cell (3, 4) is reduced to 6.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {9, 7}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (5, 4), Now the domain is {1, 4, 7, 9}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 7, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 4, 5, 8}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {8, 9, 7}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {8, 9, 6}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {8, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 3), Now the domain is {2, 5, 7, 8, 9}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (6, 4), Now the domain is {1, 3, 4, 7, 9}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {1, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {1, 4, 7, 9}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 4, 5, 8}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 7, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 6 ,current depth:26


MRV cell is (3, 6)


Attempting to fill cell (3, 6) with domain values: [8, 9]


Trying value 8 for cell (3, 6), current depth :27


Applying uniaray constraint.


Orginal domain of cell (3, 6) before reduction {8, 9}.


The domain of cell (3, 6) is reduced to 8.


Applying Binary constraint.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {9, 7}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {2, 4, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 6), Now the domain is {2, 4, 6, 9}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 6, 7, 9}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 4, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {2, 4, 5, 6, 9}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 7}.


Revised: The value 8 is removed from the domain of node (3, 3), Now the domain is {9, 7}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {2, 4, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 6), Now the domain is {2, 4, 6, 9}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 7, 8}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 7}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {2, 4, 5, 6, 9}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 4, 6, 7, 9}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 7, 8}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 7}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {2, 4, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {2, 4, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (3,6).


Go deep in the search tree parent cell (3,6) with value 8 ,current depth:27


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [7, 9]


Trying value 7 for cell (3, 3), current depth :28


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {9, 7}.


The domain of cell (3, 3) is reduced to 7.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {2, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {2, 5, 8, 9}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {9, 7}.


Revised: The value 7 is removed from the domain of node (3, 7), Now the domain is {9}.


Domain of (3, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 7) for AC- check


Add to the Queue (3, 1),(3, 7) for AC- check


Add to the Queue (4, 6),(3, 7) for AC- check


Add to the Queue (5, 7),(3, 7) for AC- check


Add to the Queue (7, 7),(3, 7) for AC- check


Add to the Queue (3, 0),(3, 7) for AC- check


Add to the Queue (5, 6),(3, 7) for AC- check


Add to the Queue (4, 8),(3, 7) for AC- check


Add to the Queue (3, 6),(3, 7) for AC- check


Add to the Queue (0, 7),(3, 7) for AC- check


Add to the Queue (2, 7),(3, 7) for AC- check


Add to the Queue (6, 7),(3, 7) for AC- check


Add to the Queue (3, 2),(3, 7) for AC- check


Add to the Queue (4, 7),(3, 7) for AC- check


Add to the Queue (3, 5),(3, 7) for AC- check


Add to the Queue (3, 8),(3, 7) for AC- check


Add to the Queue (5, 8),(3, 7) for AC- check


Add to the Queue (8, 7),(3, 7) for AC- check


Add to the Queue (1, 7),(3, 7) for AC- check


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 4, 9, 7}.


Revised: The value 7 is removed from the domain of node (5, 4), Now the domain is {1, 4, 9}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {2, 5, 6, 8, 9}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 4, 5, 8}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {2, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 3), Now the domain is {2, 5, 8, 9}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {2, 5, 6, 8, 9}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 4, 9, 7}.


Revised: The value 7 is removed from the domain of node (4, 4), Now the domain is {1, 4, 9}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 4, 5, 8}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {2, 5, 6, 8, 9}.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {9, 2, 4, 6}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {2, 4, 6}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {1, 3, 4, 6, 7}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {1, 3, 4, 6, 7}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {9, 2, 4, 6}.


Revised: The value 9 is removed from the domain of node (5, 6), Now the domain is {2, 4, 6}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 7}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 6, 7}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 3, 4, 6, 7}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 7}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1, 3, 4, 6, 7}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


End of Binary Constraints, Checks done for cell: (3,3).


After make inferences we see that the domain of cell (3, 7) is {9}


Adding to board in cell :(3, 7),value :9


Go deep in the search tree parent cell (3,3) with value 7 ,current depth:28


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [1, 4, 9]


Trying value 1 for cell (4, 4), current depth :29


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {1, 4, 9}.


The domain of cell (4, 4) is reduced to 1.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {9, 3, 6, 7}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 5}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 4, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {4, 9}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {2, 4, 6}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 7, 9}.


Revised: The value 1 is removed from the domain of node (7, 4), Now the domain is {3, 4, 7, 9}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {8, 9, 5, 6}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {1, 2, 4, 5, 8}.


Revised: The value 1 is removed from the domain of node (4, 5), Now the domain is {2, 4, 5, 8}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 7}.


Revised: The value 1 is removed from the domain of node (4, 8), Now the domain is {2, 3, 7}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {8, 9, 2, 5}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 4, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 4), Now the domain is {3, 4, 7, 9}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {8, 3, 5, 7}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 4, 6, 7}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {3, 4, 6, 7}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 4, 5, 8}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 4, 5, 8}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 7, 9}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {3, 4, 7, 9}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 1 ,current depth:29


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [4, 9]


Trying value 4 for cell (5, 4), current depth :30


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {9, 4}.


The domain of cell (5, 4) is reduced to 4.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 5}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 5, 7}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {1, 3, 6, 7}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {9, 3, 4, 7}.


Revised: The value 4 is removed from the domain of node (7, 4), Now the domain is {9, 3, 7}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {8, 2, 4, 5}.


Revised: The value 4 is removed from the domain of node (4, 5), Now the domain is {8, 2, 5}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {9, 3, 6, 7}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {2, 4, 6}.


Revised: The value 4 is removed from the domain of node (5, 6), Now the domain is {2, 6}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {8, 9, 2, 5}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {9, 3, 4, 7}.


Revised: The value 4 is removed from the domain of node (6, 4), Now the domain is {9, 3, 7}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 6}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {8, 2, 4, 5}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {8, 2, 5}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {9, 3, 4, 7}.


Revised: The value 4 is removed from the domain of node (8, 4), Now the domain is {9, 3, 7}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 7}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 4 ,current depth:30


MRV cell is (5, 6)


Attempting to fill cell (5, 6) with domain values: [2, 6]


Trying value 2 for cell (5, 6), current depth :31


Applying uniaray constraint.


Orginal domain of cell (5, 6) before reduction {2, 6}.


The domain of cell (5, 6) is reduced to 2.


Applying Binary constraint.


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {2, 4, 6}.


Revised: The value 2 is removed from the domain of node (4, 6), Now the domain is {4, 6}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 5, 7}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 6, 7}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 4, 5, 6, 9}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {4, 5, 6, 9}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {9, 3, 6, 7}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {2, 3, 7}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {3, 7}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {8, 9, 2, 5}.


Revised: The value 2 is removed from the domain of node (5, 3), Now the domain is {8, 9, 5}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5, 6, 9}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {4, 5, 6, 9}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {3, 4, 6, 7}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 6}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (5, 5), Now the domain is {8, 5}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {1, 3, 7}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {2, 4, 5, 6, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {4, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (5,6).


Go deep in the search tree parent cell (5,6) with value 2 ,current depth:31


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [6, 4]


Trying value 6 for cell (4, 6), current depth :32


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {4, 6}.


The domain of cell (4, 6) is reduced to 6.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {9, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 0), Now the domain is {9, 3, 7}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 5}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {1, 3, 7}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 4, 5, 6}.


Revised: The value 6 is removed from the domain of node (8, 6), Now the domain is {9, 4, 5}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {8, 9, 5, 6}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {8, 9, 5}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {8, 2, 5}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {3, 7}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {9, 4, 5, 6}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {9, 4, 5}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {8, 3, 5, 7}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {3, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {3, 4, 7}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {1, 3, 7}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {9, 4, 5}.


End of Binary Constraints, Checks done for cell: (4,6).


Go deep in the search tree parent cell (4,6) with value 6 ,current depth:32


MRV cell is (4, 8)


Attempting to fill cell (4, 8) with domain values: [3, 7]


Trying value 3 for cell (4, 8), current depth :33


Applying uniaray constraint.


Orginal domain of cell (4, 8) before reduction {3, 7}.


The domain of cell (4, 8) is reduced to 3.


Applying Binary constraint.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {9, 3, 7}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {9, 7}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 5}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (4, 8) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 7}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {1, 7}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 2, 7, 8}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {8, 9, 5}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {8, 2, 5}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 7, 8}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 7, 8}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {8, 5, 7}.


Processing (4, 8) <---- (4, 7) ,Domain of node (4, 7) is {3, 4, 7}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {4, 7}.


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 3, 7}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {1, 7}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {1, 2, 7, 8}.


End of Binary Constraints, Checks done for cell: (4,8).


Go deep in the search tree parent cell (4,8) with value 3 ,current depth:33


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [7, 9]


Trying value 7 for cell (4, 0), current depth :34


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {9, 7}.


The domain of cell (4, 0) is reduced to 7.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 5}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {8, 3, 5}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {3, 4, 6, 9}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {8, 9, 5}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {8, 2, 5}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (5, 0), Now the domain is {9, 3, 6}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {3, 4, 6, 9}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 5, 7}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {8, 5}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {4, 7}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {4}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (4, 8),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 6}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {3, 4, 6, 9}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 5}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 7}.


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 3, 6, 7}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {8, 9, 5}.


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {8, 2, 5}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (4, 7) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {1, 3, 6, 7}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {8, 5}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {1, 7}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 7}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


End of Binary Constraints, Checks done for cell: (4,0).


After make inferences we see that the domain of cell (4, 7) is {4}


Adding to board in cell :(4, 7),value :4


Go deep in the search tree parent cell (4,0) with value 7 ,current depth:34


MRV cell is (4, 1)


Attempting to fill cell (4, 1) with domain values: [5, 8]


Trying value 5 for cell (4, 1), current depth :35


Applying uniaray constraint.


Orginal domain of cell (4, 1) before reduction {8, 5}.


The domain of cell (4, 1) is reduced to 5.


Applying Binary constraint.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 5}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {8, 9, 2}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 5}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {8, 3}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 1), Now the domain is {1, 3, 7, 8}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (4, 2), Now the domain is {8, 9}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {8, 2, 5}.


Revised: The value 5 is removed from the domain of node (4, 5), Now the domain is {8, 2}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 3, 6}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {1, 3, 7, 8}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 6}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {8, 9, 6}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {1, 3, 7, 8}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


End of Binary Constraints, Checks done for cell: (4,1).


Go deep in the search tree parent cell (4,1) with value 5 ,current depth:35


MRV cell is (4, 2)


Attempting to fill cell (4, 2) with domain values: [8, 9]


Trying value 8 for cell (4, 2), current depth :36


Applying uniaray constraint.


Orginal domain of cell (4, 2) before reduction {8, 9}.


The domain of cell (4, 2) is reduced to 8.


Applying Binary constraint.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {9, 2}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Revised: The value 8 is removed from the domain of node (5, 1), Now the domain is {3}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {2, 5, 6, 9}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {8, 2}.


Revised: The value 8 is removed from the domain of node (4, 5), Now the domain is {2}.


Domain of (4, 5) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 5) for AC- check


Add to the Queue (3, 4),(4, 5) for AC- check


Add to the Queue (4, 3),(4, 5) for AC- check


Add to the Queue (5, 4),(4, 5) for AC- check


Add to the Queue (4, 6),(4, 5) for AC- check


Add to the Queue (0, 5),(4, 5) for AC- check


Add to the Queue (2, 5),(4, 5) for AC- check


Add to the Queue (6, 5),(4, 5) for AC- check


Add to the Queue (3, 3),(4, 5) for AC- check


Add to the Queue (4, 8),(4, 5) for AC- check


Add to the Queue (5, 3),(4, 5) for AC- check


Add to the Queue (8, 5),(4, 5) for AC- check


Add to the Queue (1, 5),(4, 5) for AC- check


Add to the Queue (4, 1),(4, 5) for AC- check


Add to the Queue (4, 7),(4, 5) for AC- check


Add to the Queue (3, 5),(4, 5) for AC- check


Add to the Queue (4, 4),(4, 5) for AC- check


Add to the Queue (5, 5),(4, 5) for AC- check


Add to the Queue (7, 5),(4, 5) for AC- check


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {9, 3, 6}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {2, 5, 6, 9}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 6}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {9, 6}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {2, 5, 6, 9}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {1, 7}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 3, 7}.


Revised: The value 3 is removed from the domain of node (7, 1), Now the domain is {8, 1, 7}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 3, 6}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {9, 6}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {8, 9, 5}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 1, 3, 7}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {8, 1, 7}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {9, 6}.


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {1, 7}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {8, 1, 3, 7}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {8, 1, 7}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {9, 2}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {9}.


Domain of (4, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 3) for AC- check


Add to the Queue (3, 4),(4, 3) for AC- check


Add to the Queue (5, 4),(4, 3) for AC- check


Add to the Queue (4, 6),(4, 3) for AC- check


Add to the Queue (8, 3),(4, 3) for AC- check


Add to the Queue (1, 3),(4, 3) for AC- check


Add to the Queue (4, 2),(4, 3) for AC- check


Add to the Queue (3, 3),(4, 3) for AC- check


Add to the Queue (4, 8),(4, 3) for AC- check


Add to the Queue (5, 3),(4, 3) for AC- check


Add to the Queue (7, 3),(4, 3) for AC- check


Add to the Queue (4, 1),(4, 3) for AC- check


Add to the Queue (4, 7),(4, 3) for AC- check


Add to the Queue (3, 5),(4, 3) for AC- check


Add to the Queue (4, 4),(4, 3) for AC- check


Add to the Queue (5, 5),(4, 3) for AC- check


Add to the Queue (0, 3),(4, 3) for AC- check


Add to the Queue (2, 3),(4, 3) for AC- check


Add to the Queue (6, 3),(4, 3) for AC- check


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 4, 5, 8}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 4, 5, 8}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {8, 9, 5}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 4, 5, 8}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 4, 5, 8}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 4, 5, 8}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 4, 5, 8}.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {2, 5, 6, 8}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (5, 3), Now the domain is {8, 5}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {2, 5, 6, 8}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (4, 3) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {2, 5, 6, 8}.


End of Binary Constraints, Checks done for cell: (4,2).


After make inferences we see that the domain of cell (4, 3) is {9}


After make inferences we see that the domain of cell (4, 5) is {2}


After make inferences we see that the domain of cell (5, 1) is {3}


Adding to board in cell :(4, 3),value :9


Adding to board in cell :(4, 5),value :2


Adding to board in cell :(5, 1),value :3


Go deep in the search tree parent cell (4,2) with value 8 ,current depth:36


MRV cell is (5, 0)


Attempting to fill cell (5, 0) with domain values: [6, 9]


Trying value 6 for cell (5, 0), current depth :37


Applying uniaray constraint.


Orginal domain of cell (5, 0) before reduction {9, 6}.


The domain of cell (5, 0) is reduced to 6.


Applying Binary constraint.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {1, 7}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 4, 6}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {9, 3, 4}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {8, 5}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 3, 4, 6}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {9, 3, 4}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {9, 6}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {9}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 1),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {1, 7}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 6}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {9, 3, 4}.


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 2) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {1, 7}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {9, 2, 5, 6}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {2, 5, 6}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {8, 5}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {9, 2, 5, 6}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {2, 5, 6}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {1, 7}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {9, 2, 5, 6}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {2, 5, 6}.


End of Binary Constraints, Checks done for cell: (5,0).


After make inferences we see that the domain of cell (5, 2) is {9}


Adding to board in cell :(5, 2),value :9


Go deep in the search tree parent cell (5,0) with value 6 ,current depth:37


MRV cell is (5, 3)


Attempting to fill cell (5, 3) with domain values: [5, 8]


Trying value 5 for cell (5, 3), current depth :38


Applying uniaray constraint.


Orginal domain of cell (5, 3) before reduction {8, 5}.


The domain of cell (5, 3) is reduced to 5.


Applying Binary constraint.


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 7}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 2, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 3), Now the domain is {8, 2, 6}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {2}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 2, 5, 6}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {8, 2, 6}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Revised: The value 5 is removed from the domain of node (5, 5), Now the domain is {8}.


Domain of (5, 5) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 5) for AC- check


Add to the Queue (4, 3),(5, 5) for AC- check


Add to the Queue (5, 4),(5, 5) for AC- check


Add to the Queue (5, 1),(5, 5) for AC- check


Add to the Queue (5, 7),(5, 5) for AC- check


Add to the Queue (0, 5),(5, 5) for AC- check


Add to the Queue (2, 5),(5, 5) for AC- check


Add to the Queue (6, 5),(5, 5) for AC- check


Add to the Queue (4, 5),(5, 5) for AC- check


Add to the Queue (3, 3),(5, 5) for AC- check


Add to the Queue (5, 0),(5, 5) for AC- check


Add to the Queue (5, 6),(5, 5) for AC- check


Add to the Queue (8, 5),(5, 5) for AC- check


Add to the Queue (1, 5),(5, 5) for AC- check


Add to the Queue (3, 5),(5, 5) for AC- check


Add to the Queue (5, 2),(5, 5) for AC- check


Add to the Queue (4, 4),(5, 5) for AC- check


Add to the Queue (5, 8),(5, 5) for AC- check


Add to the Queue (7, 5),(5, 5) for AC- check


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 7}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 2, 5, 6}.


Revised: The value 5 is removed from the domain of node (6, 3), Now the domain is {8, 2, 6}.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {9}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {1, 7}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 1, 4, 5}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {1, 4, 5}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {2}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 1, 4, 5}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {1, 4, 5}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (5, 5) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {1, 7}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {8, 1, 4, 5}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {1, 4, 5}.


End of Binary Constraints, Checks done for cell: (5,3).


After make inferences we see that the domain of cell (5, 5) is {8}


Adding to board in cell :(5, 5),value :8


Go deep in the search tree parent cell (5,3) with value 5 ,current depth:38


MRV cell is (5, 7)


Attempting to fill cell (5, 7) with domain values: [1, 7]


Trying value 1 for cell (5, 7), current depth :39


Applying uniaray constraint.


Orginal domain of cell (5, 7) before reduction {1, 7}.


The domain of cell (5, 7) is reduced to 1.


Applying Binary constraint.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {3, 6, 7}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {5}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {3, 6, 7}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {1, 7}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {7}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 7), Now the domain is {3, 6, 7}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {8, 1, 2, 7}.


Revised: The value 7 is removed from the domain of node (6, 8), Now the domain is {8, 1, 2}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {5}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 2, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {8, 1, 2}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2, 7}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {8, 1, 2}.


End of Binary Constraints, Checks done for cell: (5,7).


After make inferences we see that the domain of cell (5, 8) is {7}


Adding to board in cell :(5, 8),value :7


Go deep in the search tree parent cell (5,7) with value 1 ,current depth:39


MRV cell is (6, 0)


Attempting to fill cell (6, 0) with domain values: [3, 4, 9]


Trying value 3 for cell (6, 0), current depth :40


Applying uniaray constraint.


Orginal domain of cell (6, 0) before reduction {9, 3, 4}.


The domain of cell (6, 0) is reduced to 3.


Applying Binary constraint.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 4}.


Revised: The value 3 is removed from the domain of node (8, 0), Now the domain is {9, 4}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {2, 5, 6}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 7}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {1, 4, 5}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {8, 1, 2}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {2, 5, 6}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {8, 1, 7}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 3, 4}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {9, 4}.


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {9, 3, 7}.


Revised: The value 3 is removed from the domain of node (6, 4), Now the domain is {9, 7}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {3, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 7), Now the domain is {6, 7}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {8, 1, 7}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {2, 5, 6}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {8, 2, 6}.


End of Binary Constraints, Checks done for cell: (6,0).


Go deep in the search tree parent cell (6,0) with value 3 ,current depth:40


MRV cell is (6, 4)


Attempting to fill cell (6, 4) with domain values: [7, 9]


Trying value 7 for cell (6, 4), current depth :41


Applying uniaray constraint.


Orginal domain of cell (6, 4) before reduction {9, 7}.


The domain of cell (6, 4) is reduced to 7.


Applying Binary constraint.


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {8, 2, 6}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {9, 3, 7}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {9, 3}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {2, 5, 6}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 4, 5}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {8, 1, 2}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 4, 5}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {8, 1, 7}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {8, 1}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {8, 2, 6}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {6}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (6, 2),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {9, 3, 7}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {9, 3}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 4, 5}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {8, 2, 6}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {1}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {9, 4, 5}.


Processing (6, 7) <---- (6, 2) ,Domain of node (6, 2) is {2, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {2, 5}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {3, 7}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {1, 4, 5}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {8, 1, 2}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 2}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {8, 1}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {9, 4, 5}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {3, 7}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {8, 2}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2}.


End of Binary Constraints, Checks done for cell: (6,4).


After make inferences we see that the domain of cell (6, 7) is {6}


Adding to board in cell :(6, 7),value :6


Go deep in the search tree parent cell (6,4) with value 7 ,current depth:41


MRV cell is (6, 1)


Attempting to fill cell (6, 1) with domain values: [1, 8]


Trying value 1 for cell (6, 1), current depth :42


Applying uniaray constraint.


Orginal domain of cell (6, 1) before reduction {8, 1}.


The domain of cell (6, 1) is reduced to 1.


Applying Binary constraint.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {9, 4}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {2, 5}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 7}.


Revised: The value 1 is removed from the domain of node (7, 1), Now the domain is {8, 7}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (6, 5), Now the domain is {4, 5}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {8, 1, 2}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {8, 2}.


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {2, 5, 6}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {8, 1, 7}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {8, 7}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {2, 5, 6}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {8, 2}.


End of Binary Constraints, Checks done for cell: (6,1).


Go deep in the search tree parent cell (6,1) with value 1 ,current depth:42


MRV cell is (6, 2)


Attempting to fill cell (6, 2) with domain values: [2, 5]


Trying value 2 for cell (6, 2), current depth :43


Applying uniaray constraint.


Orginal domain of cell (6, 2) before reduction {2, 5}.


The domain of cell (6, 2) is reduced to 2.


Applying Binary constraint.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {9, 4}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {4, 5}.


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {8, 2}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {8}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (6, 1),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {2, 5, 6}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {5, 6}.


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {8, 7}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 5, 6}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {5, 6}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {8, 2}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {8}.


Domain of (6, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(6, 3) for AC- check


Add to the Queue (8, 3),(6, 3) for AC- check


Add to the Queue (1, 3),(6, 3) for AC- check


Add to the Queue (7, 4),(6, 3) for AC- check


Add to the Queue (6, 5),(6, 3) for AC- check


Add to the Queue (6, 8),(6, 3) for AC- check


Add to the Queue (3, 3),(6, 3) for AC- check


Add to the Queue (5, 3),(6, 3) for AC- check


Add to the Queue (8, 5),(6, 3) for AC- check


Add to the Queue (6, 1),(6, 3) for AC- check


Add to the Queue (6, 4),(6, 3) for AC- check


Add to the Queue (7, 3),(6, 3) for AC- check


Add to the Queue (6, 7),(6, 3) for AC- check


Add to the Queue (8, 4),(6, 3) for AC- check


Add to the Queue (0, 3),(6, 3) for AC- check


Add to the Queue (2, 3),(6, 3) for AC- check


Add to the Queue (6, 0),(6, 3) for AC- check


Add to the Queue (6, 6),(6, 3) for AC- check


Add to the Queue (7, 5),(6, 3) for AC- check


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {9, 4, 5}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {4, 5}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2}.


Processing (6, 8) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {9, 4, 5}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {7}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {3, 7}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Revised: The value 8 is removed from the domain of node (6, 3), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (6,2).


Undo operation ,current depth : 43.


Remove the assigment from the board ,(6,2)=0.


No inferences made from cell (6,2) to remove it.


Trying value 5 for cell (6, 2), current depth :43


Applying uniaray constraint.


Orginal domain of cell (6, 2) before reduction {2, 5}.


The domain of cell (6, 2) is reduced to 5.


Applying Binary constraint.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {9, 4}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {4, 5}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {4}.


Domain of (6, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(6, 5) for AC- check


Add to the Queue (0, 5),(6, 5) for AC- check


Add to the Queue (2, 5),(6, 5) for AC- check


Add to the Queue (7, 4),(6, 5) for AC- check


Add to the Queue (6, 8),(6, 5) for AC- check


Add to the Queue (4, 5),(6, 5) for AC- check


Add to the Queue (8, 5),(6, 5) for AC- check


Add to the Queue (1, 5),(6, 5) for AC- check


Add to the Queue (6, 1),(6, 5) for AC- check


Add to the Queue (6, 4),(6, 5) for AC- check


Add to the Queue (7, 3),(6, 5) for AC- check


Add to the Queue (6, 7),(6, 5) for AC- check


Add to the Queue (3, 5),(6, 5) for AC- check


Add to the Queue (5, 5),(6, 5) for AC- check


Add to the Queue (8, 4),(6, 5) for AC- check


Add to the Queue (6, 0),(6, 5) for AC- check


Add to the Queue (6, 6),(6, 5) for AC- check


Add to the Queue (7, 5),(6, 5) for AC- check


Add to the Queue (6, 3),(6, 5) for AC- check


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {8, 2}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {2, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {2, 6}.


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {8, 7}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 5, 6}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {2, 6}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5}.


Revised: The value 5 is removed from the domain of node (6, 6), Now the domain is {9, 4}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {8, 2}.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {8, 2, 6}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {9, 3}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {8, 2}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {2}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 4, 5}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 5}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {8, 2, 6}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {9, 3}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {9}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (7, 6),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 4, 5}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 5}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {8, 2}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 4, 5}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {4, 5}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {8, 2}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 2}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 6) <---- (7, 6) ,Domain of node (7, 6) is {9, 4, 5}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {4, 5}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {3, 7}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {8, 2}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2}.


End of Binary Constraints, Checks done for cell: (6,2).


After make inferences we see that the domain of cell (6, 5) is {4}


After make inferences we see that the domain of cell (6, 6) is {9}


Adding to board in cell :(6, 5),value :4


Adding to board in cell :(6, 6),value :9


Go deep in the search tree parent cell (6,2) with value 5 ,current depth:43


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [2, 8]


Trying value 2 for cell (6, 3), current depth :44


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {8, 2}.


The domain of cell (6, 3) is reduced to 2.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {9}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {8, 6}.


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {9, 3}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {8, 2}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {8}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (6, 1),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {5}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 5}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {8, 6}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {9, 3}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 5}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {4, 5}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2}.


Processing (6, 8) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {4, 5}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {7}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {3, 7}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {1, 2}.


End of Binary Constraints, Checks done for cell: (6,3).


After make inferences we see that the domain of cell (6, 8) is {8}


Adding to board in cell :(6, 8),value :8


Go deep in the search tree parent cell (6,3) with value 2 ,current depth:44


MRV cell is (7, 0)


Attempting to fill cell (7, 0) with domain values: [4, 9]


Trying value 4 for cell (7, 0), current depth :45


Applying uniaray constraint.


Orginal domain of cell (7, 0) before reduction {9, 4}.


The domain of cell (7, 0) is reduced to 4.


Applying Binary constraint.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 4}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {9}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(8, 0) for AC- check


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (5, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {9, 3}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (7, 0) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {4, 5}.


Revised: The value 4 is removed from the domain of node (7, 6), Now the domain is {5}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (8, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {8, 7}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {2, 6}.


Processing (7, 0) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {1, 5}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (8, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {4, 5}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (8, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {1, 5}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {9, 3}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {3}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (7, 4),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (0, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {8, 7}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {3, 7}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {2, 6}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (7, 6) <---- (8, 6) ,Domain of node (8, 6) is {4, 5}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {4}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(8, 6) for AC- check


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {9, 3}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {8}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {3, 7}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {2, 6}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {1, 5}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1}.


Domain of (7, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(7, 5) for AC- check


Add to the Queue (0, 5),(7, 5) for AC- check


Add to the Queue (2, 5),(7, 5) for AC- check


Add to the Queue (7, 4),(7, 5) for AC- check


Add to the Queue (7, 1),(7, 5) for AC- check


Add to the Queue (7, 7),(7, 5) for AC- check


Add to the Queue (6, 5),(7, 5) for AC- check


Add to the Queue (4, 5),(7, 5) for AC- check


Add to the Queue (8, 5),(7, 5) for AC- check


Add to the Queue (1, 5),(7, 5) for AC- check


Add to the Queue (7, 0),(7, 5) for AC- check


Add to the Queue (6, 4),(7, 5) for AC- check


Add to the Queue (7, 3),(7, 5) for AC- check


Add to the Queue (3, 5),(7, 5) for AC- check


Add to the Queue (5, 5),(7, 5) for AC- check


Add to the Queue (8, 4),(7, 5) for AC- check


Add to the Queue (7, 2),(7, 5) for AC- check


Add to the Queue (6, 3),(7, 5) for AC- check


Add to the Queue (7, 8),(7, 5) for AC- check


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (8, 4) <---- (7, 4) ,Domain of node (7, 4) is {9, 3}.


Revised: The value 3 is removed from the domain of node (7, 4), Now the domain is {9}.


Domain of (7, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(7, 4) for AC- check


Add to the Queue (5, 4),(7, 4) for AC- check


Add to the Queue (8, 3),(7, 4) for AC- check


Add to the Queue (7, 1),(7, 4) for AC- check


Add to the Queue (7, 7),(7, 4) for AC- check


Add to the Queue (6, 5),(7, 4) for AC- check


Add to the Queue (8, 5),(7, 4) for AC- check


Add to the Queue (2, 4),(7, 4) for AC- check


Add to the Queue (0, 4),(7, 4) for AC- check


Add to the Queue (7, 0),(7, 4) for AC- check


Add to the Queue (6, 4),(7, 4) for AC- check


Add to the Queue (7, 3),(7, 4) for AC- check


Add to the Queue (7, 6),(7, 4) for AC- check


Add to the Queue (4, 4),(7, 4) for AC- check


Add to the Queue (1, 4),(7, 4) for AC- check


Add to the Queue (7, 2),(7, 4) for AC- check


Add to the Queue (7, 5),(7, 4) for AC- check


Add to the Queue (6, 3),(7, 4) for AC- check


Add to the Queue (7, 8),(7, 4) for AC- check


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 5}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (8, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {8, 7}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {3, 7}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {7}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 1),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {2}.


Processing (8, 6) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {8}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {2}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {1, 5}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {8, 7}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {7}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {2}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 5}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {5}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {2, 6}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {2}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {2}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {4}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {5}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {1}.


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {2, 6}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {2}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {1}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {3, 7}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {3}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {8}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {5}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (8, 7) <---- (8, 1) ,Domain of node (8, 1) is {8, 7}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {8}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {6}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {7}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {2}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {9}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {3}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {8}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {7}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {2}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {8}.


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {7}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {7}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {2, 6}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {6}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (4, 2),(7, 2) for AC- check


Add to the Queue (8, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {1}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {8}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {4}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {6}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {6}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (7, 3),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 7}.


Revised: The value 8 is removed from the domain of node (7, 1), Now the domain is {7}.


Domain of (7, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(7, 1) for AC- check


Add to the Queue (5, 1),(7, 1) for AC- check


Add to the Queue (8, 0),(7, 1) for AC- check


Add to the Queue (7, 4),(7, 1) for AC- check


Add to the Queue (6, 2),(7, 1) for AC- check


Add to the Queue (7, 7),(7, 1) for AC- check


Add to the Queue (8, 2),(7, 1) for AC- check


Add to the Queue (0, 1),(7, 1) for AC- check


Add to the Queue (2, 1),(7, 1) for AC- check


Add to the Queue (6, 1),(7, 1) for AC- check


Add to the Queue (7, 0),(7, 1) for AC- check


Add to the Queue (7, 3),(7, 1) for AC- check


Add to the Queue (7, 6),(7, 1) for AC- check


Add to the Queue (4, 1),(7, 1) for AC- check


Add to the Queue (1, 1),(7, 1) for AC- check


Add to the Queue (7, 2),(7, 1) for AC- check


Add to the Queue (6, 0),(7, 1) for AC- check


Add to the Queue (7, 5),(7, 1) for AC- check


Add to the Queue (7, 8),(7, 1) for AC- check


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {5}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {6}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {6}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {8}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {3}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {5}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {4}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {8}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {7}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {7}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 2) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {2, 6}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {2}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (6, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {8, 6}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {8}.


Domain of (7, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(7, 3) for AC- check


Add to the Queue (8, 3),(7, 3) for AC- check


Add to the Queue (1, 3),(7, 3) for AC- check


Add to the Queue (7, 4),(7, 3) for AC- check


Add to the Queue (7, 1),(7, 3) for AC- check


Add to the Queue (7, 7),(7, 3) for AC- check


Add to the Queue (6, 5),(7, 3) for AC- check


Add to the Queue (3, 3),(7, 3) for AC- check


Add to the Queue (5, 3),(7, 3) for AC- check


Add to the Queue (8, 5),(7, 3) for AC- check


Add to the Queue (7, 0),(7, 3) for AC- check


Add to the Queue (6, 4),(7, 3) for AC- check


Add to the Queue (7, 6),(7, 3) for AC- check


Add to the Queue (8, 4),(7, 3) for AC- check


Add to the Queue (0, 3),(7, 3) for AC- check


Add to the Queue (2, 3),(7, 3) for AC- check


Add to the Queue (7, 5),(7, 3) for AC- check


Add to the Queue (6, 3),(7, 3) for AC- check


Add to the Queue (7, 8),(7, 3) for AC- check


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {8}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {9}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {5}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {5}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (8, 3) <---- (7, 3) ,Domain of node (7, 3) is {8}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {7}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {2}.


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {8}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {5}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {6}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {6}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {4}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (6, 2) ,Domain of node (6, 2) is {5}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {5}.


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {8}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {7}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {3}.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {9}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {6}.


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {3}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {9}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {4}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {5}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {5}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {7}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {5}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {3}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {2}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {2}.


End of Binary Constraints, Checks done for cell: (7,0).


After make inferences we see that the domain of cell (7, 1) is {7}


After make inferences we see that the domain of cell (7, 2) is {6}


After make inferences we see that the domain of cell (7, 3) is {8}


After make inferences we see that the domain of cell (7, 4) is {9}


After make inferences we see that the domain of cell (7, 5) is {1}


After make inferences we see that the domain of cell (7, 6) is {5}


After make inferences we see that the domain of cell (7, 7) is {3}


After make inferences we see that the domain of cell (7, 8) is {2}


After make inferences we see that the domain of cell (8, 0) is {9}


After make inferences we see that the domain of cell (8, 1) is {8}


After make inferences we see that the domain of cell (8, 2) is {2}


After make inferences we see that the domain of cell (8, 3) is {6}


After make inferences we see that the domain of cell (8, 4) is {3}


After make inferences we see that the domain of cell (8, 5) is {5}


After make inferences we see that the domain of cell (8, 6) is {4}


After make inferences we see that the domain of cell (8, 7) is {7}


After make inferences we see that the domain of cell (8, 8) is {1}


Adding to board in cell :(7, 1),value :7


Adding to board in cell :(7, 2),value :6


Adding to board in cell :(7, 3),value :8


Adding to board in cell :(7, 4),value :9


Adding to board in cell :(7, 5),value :1


Adding to board in cell :(7, 6),value :5


Adding to board in cell :(7, 7),value :3


Adding to board in cell :(7, 8),value :2


Adding to board in cell :(8, 0),value :9


Adding to board in cell :(8, 1),value :8


Adding to board in cell :(8, 2),value :2


Adding to board in cell :(8, 3),value :6


Adding to board in cell :(8, 4),value :3


Adding to board in cell :(8, 5),value :5


Adding to board in cell :(8, 6),value :4


Adding to board in cell :(8, 7),value :7


Adding to board in cell :(8, 8),value :1


Go deep in the search tree parent cell (7,0) with value 4 ,current depth:45


MRV cell is None


End of applying Backtracking.


after make cell (4,5) = 4


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (2, 2) is reduced to 4.


The domain of cell (4, 5) is reduced to 4.


Apply Binary constraint to the Initial Board


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 4): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 4): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 3): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 4): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (5, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (6, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 3): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [1, 2, 3, 5, 6, 7, 8, 9]


Trying value 1 for cell (0, 0), current depth :0


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {1, 2, 3, 5, 6, 7, 8, 9}.


The domain of cell (0, 0) is reduced to 1.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 0), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,0).


Go deep in the search tree parent cell (0,0) with value 1 ,current depth:0


MRV cell is (0, 1)


Attempting to fill cell (0, 1) with domain values: [2, 3, 5, 6, 7, 8, 9]


Trying value 2 for cell (0, 1), current depth :1


Applying uniaray constraint.


Orginal domain of cell (0, 1) before reduction {2, 3, 5, 6, 7, 8, 9}.


The domain of cell (0, 1) is reduced to 2.


Applying Binary constraint.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 0), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 7), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 1), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 0), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 6), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,1).


Go deep in the search tree parent cell (0,1) with value 2 ,current depth:1


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [3, 5, 6, 7, 8, 9]


Trying value 3 for cell (0, 2), current depth :2


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {3, 5, 6, 7, 8, 9}.


The domain of cell (0, 2) is reduced to 3.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 5), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 0), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 2), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 1), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {5, 6, 7, 8, 9}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 3 ,current depth:2


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (0, 5), current depth :3


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {5, 6, 7, 8, 9}.


The domain of cell (0, 5) is reduced to 5.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {4, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {4, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 4), Now the domain is {4, 6, 7, 8, 9}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {4, 6, 7, 8, 9}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {4, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 5 ,current depth:3


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [6, 7, 8, 9, 4]


Trying value 6 for cell (0, 3), current depth :4


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {4, 6, 7, 8, 9}.


The domain of cell (0, 3) is reduced to 6.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {4, 7, 8, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 3), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {4, 7, 8, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {4, 7, 8, 9}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 6), Now the domain is {4, 7, 8, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,3).


Go deep in the search tree parent cell (0,3) with value 6 ,current depth:4


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [7, 8, 9, 4]


Trying value 7 for cell (0, 4), current depth :5


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {8, 9, 4, 7}.


The domain of cell (0, 4) is reduced to 7.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {8, 9, 4}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 8, 9}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {8, 9, 4}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 8, 9}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 8, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 8, 9}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 6), Now the domain is {8, 9, 4}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,4).


Go deep in the search tree parent cell (0,4) with value 7 ,current depth:5


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [8, 9, 4]


Trying value 8 for cell (0, 6), current depth :6


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {8, 9, 4}.


The domain of cell (0, 6) is reduced to 8.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {9, 4}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (0, 7), Now the domain is {9, 4}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 8 ,current depth:6


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [9, 4]


Trying value 9 for cell (0, 7), current depth :7


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {9, 4}.


The domain of cell (0, 7) is reduced to 9.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {9, 4}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {4}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7}.


Revised: The value 4 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {4}


Adding to board in cell :(0, 8),value :4


Go deep in the search tree parent cell (0,7) with value 9 ,current depth:7


MRV cell is (1, 0)


Attempting to fill cell (1, 0) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (1, 0), current depth :8


Applying uniaray constraint.


Orginal domain of cell (1, 0) before reduction {5, 6, 7, 8, 9}.


The domain of cell (1, 0) is reduced to 5.


Applying Binary constraint.


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 6, 7}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 8, 9}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 8, 9}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 7}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 1), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {6, 7, 8, 9}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 8, 9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 6, 7}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,0).


Go deep in the search tree parent cell (1,0) with value 5 ,current depth:8


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [6, 7, 8, 9]


Trying value 6 for cell (1, 1), current depth :9


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {8, 9, 6, 7}.


The domain of cell (1, 1) is reduced to 6.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 7}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 8, 9}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {8, 9, 7}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {8, 9, 7}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 8, 9}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 7}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 1), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {8, 9, 7}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 8, 9}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 7}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 6 ,current depth:9


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [7, 8, 9]


Trying value 7 for cell (1, 2), current depth :10


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {8, 9, 7}.


The domain of cell (1, 2) is reduced to 7.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {8, 9}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 8, 9}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {8, 9}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 8, 9}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,2).


Go deep in the search tree parent cell (1,2) with value 7 ,current depth:10


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [8, 9]


Trying value 8 for cell (2, 0), current depth :11


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {8, 9}.


The domain of cell (2, 0) is reduced to 8.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {2, 3, 6, 7, 9}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 9}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 9}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {8, 9}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {9}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 9}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 9}.


Revised: The value 9 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 3, 5, 7, 8}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 9}.


Revised: The value 9 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7}.


End of Binary Constraints, Checks done for cell: (2,0).


After make inferences we see that the domain of cell (2, 1) is {9}


Adding to board in cell :(2, 1),value :9


Go deep in the search tree parent cell (2,0) with value 8 ,current depth:11


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [1, 2, 3]


Trying value 1 for cell (1, 6), current depth :12


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {1, 2, 3}.


The domain of cell (1, 6) is reduced to 1.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {2, 3, 5, 6, 7, 9}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 8, 9}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {2, 3, 5, 6, 7}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {2, 3, 5, 6, 7}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {2, 3, 8, 9}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {2, 3}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 4), Now the domain is {2, 3, 4, 8, 9}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3}.


Revised: The value 1 is removed from the domain of node (1, 7), Now the domain is {2, 3}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (2, 6), Now the domain is {2, 3, 5, 6, 7}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 1 ,current depth:12


MRV cell is (1, 7)


Attempting to fill cell (1, 7) with domain values: [2, 3]


Trying value 2 for cell (1, 7), current depth :13


Applying uniaray constraint.


Orginal domain of cell (1, 7) before reduction {2, 3}.


The domain of cell (1, 7) is reduced to 2.


Applying Binary constraint.


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 3, 4, 5, 6, 7, 8}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {1, 3, 4, 5, 6, 7, 8}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 3), Now the domain is {3, 4, 8, 9}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {2, 3, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {3, 5, 6, 7}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {1, 3, 4, 5, 6, 7, 8}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {2, 3, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {3, 5, 6, 7}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {8, 9, 2, 3}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {8, 9, 3}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {2, 3}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {3}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (1, 2),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 5, 6, 7, 8}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 3, 5, 6, 7, 8}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 3, 4, 5, 6, 7, 8}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {2, 3, 4, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {3, 4, 8, 9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {2, 3, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {3, 5, 6, 7}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {3, 4, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {4, 8, 9}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {5, 6, 7}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (1, 8) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {5, 6, 7}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {8, 9, 3}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {8, 9}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {3, 4, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 4), Now the domain is {4, 8, 9}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {5, 6, 7}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,7).


After make inferences we see that the domain of cell (1, 8) is {3}


Adding to board in cell :(1, 8),value :3


Go deep in the search tree parent cell (1,7) with value 2 ,current depth:13


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [8, 9]


Trying value 8 for cell (1, 5), current depth :14


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {8, 9}.


The domain of cell (1, 5) is reduced to 8.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3}.


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (1, 3), Now the domain is {9, 4}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (1, 4), Now the domain is {9, 4}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (1,5).


Go deep in the search tree parent cell (1,5) with value 8 ,current depth:14


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [9, 4]


Trying value 9 for cell (1, 3), current depth :15


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {9, 4}.


The domain of cell (1, 3) is reduced to 9.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 3), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {9, 4}.


Revised: The value 9 is removed from the domain of node (1, 4), Now the domain is {4}.


Domain of (1, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(1, 4) for AC- check


Add to the Queue (5, 4),(1, 4) for AC- check


Add to the Queue (0, 5),(1, 4) for AC- check


Add to the Queue (1, 0),(1, 4) for AC- check


Add to the Queue (1, 6),(1, 4) for AC- check


Add to the Queue (2, 5),(1, 4) for AC- check


Add to the Queue (7, 4),(1, 4) for AC- check


Add to the Queue (2, 4),(1, 4) for AC- check


Add to the Queue (1, 2),(1, 4) for AC- check


Add to the Queue (0, 4),(1, 4) for AC- check


Add to the Queue (1, 5),(1, 4) for AC- check


Add to the Queue (1, 8),(1, 4) for AC- check


Add to the Queue (6, 4),(1, 4) for AC- check


Add to the Queue (4, 4),(1, 4) for AC- check


Add to the Queue (8, 4),(1, 4) for AC- check


Add to the Queue (1, 1),(1, 4) for AC- check


Add to the Queue (0, 3),(1, 4) for AC- check


Add to the Queue (2, 3),(1, 4) for AC- check


Add to the Queue (1, 7),(1, 4) for AC- check


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {2}.


End of Binary Constraints, Checks done for cell: (1,3).


After make inferences we see that the domain of cell (1, 4) is {4}


Adding to board in cell :(1, 4),value :4


Go deep in the search tree parent cell (1,3) with value 9 ,current depth:15


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [1, 2, 3]


Trying value 1 for cell (2, 3), current depth :16


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {1, 2, 3}.


The domain of cell (2, 3) is reduced to 1.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7, 8}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 7, 8}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {2, 3}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {5, 6, 7}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 7, 8}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1, 2, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (5, 3), Now the domain is {2, 3, 5, 7, 8}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3}.


Revised: The value 1 is removed from the domain of node (2, 4), Now the domain is {2, 3}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {5, 6, 7}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 7, 8}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {5, 6, 7}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 7, 8}.


End of Binary Constraints, Checks done for cell: (2,3).


Go deep in the search tree parent cell (2,3) with value 1 ,current depth:16


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [2, 3]


Trying value 2 for cell (2, 4), current depth :17


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {2, 3}.


The domain of cell (2, 4) is reduced to 2.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {2, 3}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {3}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (1, 5),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {5, 6, 7}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {5, 6, 7}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 4), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {5, 6, 7}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {5, 6, 7}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (6, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {5, 6, 7}.


Processing (2, 5) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (3, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {5, 6, 7}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {1, 2, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


After make inferences we see that the domain of cell (2, 5) is {3}


Adding to board in cell :(2, 5),value :3


Go deep in the search tree parent cell (2,4) with value 2 ,current depth:17


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [5, 6, 7]


Trying value 5 for cell (2, 6), current depth :18


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {5, 6, 7}.


The domain of cell (2, 6) is reduced to 5.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {2, 3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {2, 3, 6, 7, 9}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {6, 7}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 7), Now the domain is {6, 7}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 6), Now the domain is {2, 3, 4, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (2,6).


Go deep in the search tree parent cell (2,6) with value 5 ,current depth:18


MRV cell is (2, 7)


Attempting to fill cell (2, 7) with domain values: [6, 7]


Trying value 6 for cell (2, 7), current depth :19


Applying uniaray constraint.


Orginal domain of cell (2, 7) before reduction {6, 7}.


The domain of cell (2, 7) is reduced to 6.


Applying Binary constraint.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {6, 7}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {7}.


Domain of (2, 8) is one value ,we need to add AC constraint.


Add to the Queue (2, 2),(2, 8) for AC- check


Add to the Queue (1, 6),(2, 8) for AC- check


Add to the Queue (0, 8),(2, 8) for AC- check


Add to the Queue (2, 5),(2, 8) for AC- check


Add to the Queue (6, 8),(2, 8) for AC- check


Add to the Queue (4, 8),(2, 8) for AC- check


Add to the Queue (8, 8),(2, 8) for AC- check


Add to the Queue (2, 4),(2, 8) for AC- check


Add to the Queue (0, 7),(2, 8) for AC- check


Add to the Queue (2, 1),(2, 8) for AC- check


Add to the Queue (1, 8),(2, 8) for AC- check


Add to the Queue (3, 8),(2, 8) for AC- check


Add to the Queue (5, 8),(2, 8) for AC- check


Add to the Queue (2, 0),(2, 8) for AC- check


Add to the Queue (0, 6),(2, 8) for AC- check


Add to the Queue (2, 3),(2, 8) for AC- check


Add to the Queue (1, 7),(2, 8) for AC- check


Add to the Queue (2, 6),(2, 8) for AC- check


Add to the Queue (7, 8),(2, 8) for AC- check


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {1, 3, 5, 7, 8}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,7).


After make inferences we see that the domain of cell (2, 8) is {7}


Adding to board in cell :(2, 8),value :7


Go deep in the search tree parent cell (2,7) with value 6 ,current depth:19


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [2, 3, 5, 7, 8]


Trying value 2 for cell (3, 3), current depth :20


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {2, 3, 5, 7, 8}.


The domain of cell (3, 3) is reduced to 2.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 3, 5, 6, 8, 9}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {3, 5, 7, 8}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 3, 4, 5, 7, 8}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 3, 5, 6, 8, 9}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 7, 8}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (3, 0), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {3, 4, 6, 7, 9}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (5, 3), Now the domain is {3, 5, 7, 8}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 7, 8}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 5, 6, 8, 9}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (3, 5), Now the domain is {1, 6, 7, 9}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 3, 5, 6, 8, 9}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 8), Now the domain is {1, 5, 6, 8, 9}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 5), Now the domain is {1, 6, 7, 9}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 2 ,current depth:20


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [1, 6, 7, 9]


Trying value 1 for cell (3, 5), current depth :21


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {1, 9, 6, 7}.


The domain of cell (3, 5) is reduced to 1.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {3, 5, 6, 8, 9}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {8, 3, 5, 7}.


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {3, 4, 5, 7, 8}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {1, 3, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {3, 4, 5, 7, 8}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {3, 5, 6, 8, 9}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 5), Now the domain is {2, 6, 7, 9}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {3, 4, 6, 7, 9}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {3, 4, 6, 7, 9}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {8, 3, 5, 7}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {2, 6, 7, 9}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 2), Now the domain is {5, 6, 8, 9}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 8, 9}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {1, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {5, 6, 8, 9}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 9, 6, 7}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {9, 6, 7}.


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {2, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (3,5).


Go deep in the search tree parent cell (3,5) with value 1 ,current depth:21


MRV cell is (5, 5)


Attempting to fill cell (5, 5) with domain values: [6, 7, 9]


Trying value 6 for cell (5, 5), current depth :22


Applying uniaray constraint.


Orginal domain of cell (5, 5) before reduction {9, 6, 7}.


The domain of cell (5, 5) is reduced to 6.


Applying Binary constraint.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {3, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 4), Now the domain is {3, 5, 8, 9}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {8, 3, 5, 7}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {3, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 4), Now the domain is {3, 5, 8, 9}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 7, 8}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 5, 7, 8}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {9, 2, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {9, 2, 7}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 7, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 7, 9}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {8, 3, 5, 7}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {9, 2, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {9, 2, 7}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (5, 5) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {1, 2, 5, 8, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {3, 5, 8, 9}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {1, 2, 5, 8, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {9, 2, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 5), Now the domain is {9, 2, 7}.


End of Binary Constraints, Checks done for cell: (5,5).


Go deep in the search tree parent cell (5,5) with value 6 ,current depth:22


MRV cell is (6, 5)


Attempting to fill cell (6, 5) with domain values: [7, 9, 2]


Trying value 7 for cell (6, 5), current depth :23


Applying uniaray constraint.


Orginal domain of cell (6, 5) before reduction {9, 2, 7}.


The domain of cell (6, 5) is reduced to 7.


Applying Binary constraint.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 8}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 5, 6, 8, 9}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 5, 6, 8, 9}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 5, 6, 8, 9}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {9, 2, 7}.


Revised: The value 7 is removed from the domain of node (8, 5), Now the domain is {9, 2}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 8}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 5, 6, 8, 9}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 8}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 5, 8}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 5, 6, 8, 9}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 6, 9}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {2, 3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {2, 3, 4, 6, 9}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {9, 2, 7}.


Revised: The value 7 is removed from the domain of node (7, 5), Now the domain is {9, 2}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 8}.


End of Binary Constraints, Checks done for cell: (6,5).


Go deep in the search tree parent cell (6,5) with value 7 ,current depth:23


MRV cell is (7, 5)


Attempting to fill cell (7, 5) with domain values: [9, 2]


Trying value 9 for cell (7, 5), current depth :24


Applying uniaray constraint.


Orginal domain of cell (7, 5) before reduction {9, 2}.


The domain of cell (7, 5) is reduced to 9.


Applying Binary constraint.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {8, 3, 4, 5}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {1, 3, 5, 6, 8}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 7, 8}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 4, 5, 7, 8}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {9, 2}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {2}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 4), Now the domain is {1, 3, 5, 6, 8}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {8, 3, 4, 5}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 6, 7}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {1, 3, 5, 6, 8}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 8}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {8, 3, 4, 5}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {1, 2, 5, 6, 8}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {3, 4, 6, 7, 9}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {8, 3, 4, 5}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {3, 4, 6, 7, 9}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 5, 6, 8}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {1, 5, 6, 8, 9}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1, 5, 6, 8, 9}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {8}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 5, 6, 8}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {8, 3, 4, 5}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 5, 6, 8}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 7, 8}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 4, 5, 7, 8}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {8, 3, 4, 5}.


End of Binary Constraints, Checks done for cell: (7,5).


After make inferences we see that the domain of cell (8, 5) is {2}


Adding to board in cell :(8, 5),value :2


Go deep in the search tree parent cell (7,5) with value 9 ,current depth:24


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [5, 8, 9, 6]


Trying value 5 for cell (3, 2), current depth :25


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {8, 9, 5, 6}.


The domain of cell (3, 2) is reduced to 5.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 6, 7, 9}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {8, 9, 3, 5}.


Revised: The value 5 is removed from the domain of node (3, 4), Now the domain is {8, 9, 3}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {3, 4, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {3, 4, 7, 8}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {3, 4, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {3, 4, 7, 8}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 7, 8}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1, 2, 6, 8, 9}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 2), Now the domain is {1, 2, 6, 8, 9}.


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {3, 4, 6, 7, 9}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 7, 9}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {3, 4, 6, 7, 9}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {1, 6, 8, 9}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {1, 3, 7, 8}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 5, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {1, 2, 8, 9}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {8, 9, 5, 6}.


Revised: The value 5 is removed from the domain of node (3, 8), Now the domain is {8, 9, 6}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 8}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {1, 2, 6, 8}.


End of Binary Constraints, Checks done for cell: (3,2).


Go deep in the search tree parent cell (3,2) with value 5 ,current depth:25


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [3, 8, 9]


Trying value 3 for cell (3, 4), current depth :26


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {8, 9, 3}.


The domain of cell (3, 4) is reduced to 3.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (4, 3), Now the domain is {8, 5, 7}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {8, 3, 4, 7}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {8, 4, 7}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {8, 3, 4, 7}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {8, 4, 7}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {8, 9, 5}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 5, 6, 8}.


Revised: The value 3 is removed from the domain of node (7, 4), Now the domain is {1, 5, 6, 8}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (3, 0), Now the domain is {4, 6, 7, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {4, 6, 7, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (5, 3), Now the domain is {8, 5, 7}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 5, 6, 8}.


Revised: The value 3 is removed from the domain of node (6, 4), Now the domain is {1, 5, 6, 8}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (4, 4), Now the domain is {8, 9, 5}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {8, 9, 6}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 5, 6, 8}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {1, 5, 6, 8}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 3 ,current depth:26


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [8, 7, 4]


Trying value 8 for cell (3, 1), current depth :27


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {8, 4, 7}.


The domain of cell (3, 1) is reduced to 8.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 6, 7, 9}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {8, 4, 7}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {4, 7}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 7, 8}.


Revised: The value 8 is removed from the domain of node (5, 1), Now the domain is {1, 3, 4, 7}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 8 is removed from the domain of node (7, 1), Now the domain is {1, 3, 4, 5, 7}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {1, 2, 6, 9}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {9, 4, 6, 7}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 7, 9}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 6, 7}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 8}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 3, 7}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {1, 3, 7}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 1, 2, 9}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {1, 2, 9}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {8, 9, 6}.


Revised: The value 8 is removed from the domain of node (3, 8), Now the domain is {9, 6}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {1, 3, 4, 5, 7}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 8 ,current depth:27


MRV cell is (3, 7)


Attempting to fill cell (3, 7) with domain values: [7, 4]


Trying value 7 for cell (3, 7), current depth :28


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {4, 7}.


The domain of cell (3, 7) is reduced to 7.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {2, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {2, 3, 6, 9}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {1, 3, 4, 5, 8}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {1, 3, 4, 5, 8}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {9, 4, 6, 7}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {9, 4, 6}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 7, 9}.


Revised: The value 7 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 9}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8, 9}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 6, 7}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {9, 4, 6}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {6}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 5, 8}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {1, 3, 5, 8}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {9, 6}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 5, 8, 9}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {1, 3, 4, 5, 8}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


End of Binary Constraints, Checks done for cell: (3,7).


Go deep in the search tree parent cell (3,7) with value 7 ,current depth:28


MRV cell is (3, 8)


Attempting to fill cell (3, 8) with domain values: [9, 6]


Trying value 9 for cell (3, 8), current depth :29


Applying uniaray constraint.


Orginal domain of cell (3, 8) before reduction {9, 6}.


The domain of cell (3, 8) is reduced to 9.


Applying Binary constraint.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {9, 2, 3, 6}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {2, 3, 6}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 5, 8}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {7}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {1, 2, 5, 6, 8}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {9, 4, 6}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {4, 6}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {9, 2, 3, 4}.


Revised: The value 9 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 8}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 6}.


Revised: The value 9 is removed from the domain of node (3, 6), Now the domain is {4, 6}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 5, 6, 8}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 3, 5}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 5, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {1, 2, 5, 8}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 5, 6, 8}.


End of Binary Constraints, Checks done for cell: (3,8).


Go deep in the search tree parent cell (3,8) with value 9 ,current depth:29


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [4, 6]


Trying value 4 for cell (3, 0), current depth :30


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {4, 6}.


The domain of cell (3, 0) is reduced to 4.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 6, 7, 9}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 4, 7}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {1, 3, 7}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {3, 4, 6, 7, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {3, 6, 7, 9}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 6, 9}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 7, 9}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {2, 3, 7, 9}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {4, 6}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {6}.


Domain of (3, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 6) for AC- check


Add to the Queue (3, 1),(3, 6) for AC- check


Add to the Queue (3, 7),(3, 6) for AC- check


Add to the Queue (4, 6),(3, 6) for AC- check


Add to the Queue (5, 7),(3, 6) for AC- check


Add to the Queue (8, 6),(3, 6) for AC- check


Add to the Queue (1, 6),(3, 6) for AC- check


Add to the Queue (3, 3),(3, 6) for AC- check


Add to the Queue (5, 6),(3, 6) for AC- check


Add to the Queue (4, 8),(3, 6) for AC- check


Add to the Queue (7, 6),(3, 6) for AC- check


Add to the Queue (3, 2),(3, 6) for AC- check


Add to the Queue (4, 7),(3, 6) for AC- check


Add to the Queue (3, 5),(3, 6) for AC- check


Add to the Queue (3, 8),(3, 6) for AC- check


Add to the Queue (5, 8),(3, 6) for AC- check


Add to the Queue (0, 6),(3, 6) for AC- check


Add to the Queue (2, 6),(3, 6) for AC- check


Add to the Queue (6, 6),(3, 6) for AC- check


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {2, 3, 6, 7}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 7}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 9}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 6, 9}.


Revised: The value 4 is removed from the domain of node (6, 0), Now the domain is {2, 3, 6, 9}.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {2, 3, 6}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {2, 3}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 5, 8}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (8, 6), Now the domain is {3, 4, 7, 9}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 8}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 7}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 3, 5}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {8, 1, 2, 5}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {2, 3, 4, 6, 9}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {2, 3, 4, 9}.


End of Binary Constraints, Checks done for cell: (3,0).


After make inferences we see that the domain of cell (3, 6) is {6}


Adding to board in cell :(3, 6),value :6


Go deep in the search tree parent cell (3,0) with value 4 ,current depth:30


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [3, 2]


Trying value 3 for cell (4, 6), current depth :31


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {2, 3}.


The domain of cell (4, 6) is reduced to 3.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {2, 6, 7, 9}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {8, 5, 7}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {1, 3, 4, 5, 8}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {1, 4, 5, 8}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 3, 4, 7}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {9, 4, 7}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 6, 9}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4}.


Revised: The value 3 is removed from the domain of node (5, 6), Now the domain is {2, 4}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 5}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 7}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {2, 4, 7}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 7}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 7}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 3, 5}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {8, 1, 5}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 5}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {8, 1, 2, 5}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 2, 3, 4}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {9, 2, 4}.


End of Binary Constraints, Checks done for cell: (4,6).


Go deep in the search tree parent cell (4,6) with value 3 ,current depth:31


MRV cell is (4, 1)


Attempting to fill cell (4, 1) with domain values: [1, 7]


Trying value 1 for cell (4, 1), current depth :32


Applying uniaray constraint.


Orginal domain of cell (4, 1) before reduction {1, 7}.


The domain of cell (4, 1) is reduced to 1.


Applying Binary constraint.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 6, 7}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {8, 5, 7}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {1, 3, 7}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {3, 7}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 3, 4, 5, 7}.


Revised: The value 1 is removed from the domain of node (7, 1), Now the domain is {3, 4, 5, 7}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 6, 9}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {2, 6, 9}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 3, 7}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 5}.


Revised: The value 1 is removed from the domain of node (4, 8), Now the domain is {8, 2, 5}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {3, 4, 5}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 5}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {8, 5}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 9}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 5}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 4, 5, 7}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {3, 4, 5, 7}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


End of Binary Constraints, Checks done for cell: (4,1).


Go deep in the search tree parent cell (4,1) with value 1 ,current depth:32


MRV cell is (4, 7)


Attempting to fill cell (4, 7) with domain values: [5, 8]


Trying value 5 for cell (4, 7), current depth :33


Applying uniaray constraint.


Orginal domain of cell (4, 7) before reduction {8, 5}.


The domain of cell (4, 7) is reduced to 5.


Applying Binary constraint.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 6, 7}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {8, 5, 7}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {8, 7}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 1, 4, 5}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {8, 1, 4}.


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 3, 4, 5, 8}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 3, 4, 8}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {9, 2, 6}.


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {2, 4}.


Processing (4, 7) <---- (4, 8) ,Domain of node (4, 8) is {8, 2, 5}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {8, 2}.


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {6}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 5, 8}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 8}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (4, 4), Now the domain is {8, 9}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {8, 1, 2, 5}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {8, 1, 2}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 4, 5, 8}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 3, 4, 8}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


End of Binary Constraints, Checks done for cell: (4,7).


Go deep in the search tree parent cell (4,7) with value 5 ,current depth:33


MRV cell is (4, 3)


Attempting to fill cell (4, 3) with domain values: [8, 7]


Trying value 8 for cell (4, 3), current depth :34


Applying uniaray constraint.


Orginal domain of cell (4, 3) before reduction {8, 7}.


The domain of cell (4, 3) is reduced to 8.


Applying Binary constraint.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 6, 7}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {8, 9, 5}.


Revised: The value 8 is removed from the domain of node (5, 4), Now the domain is {9, 5}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 3, 4, 5}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {9, 2, 6}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {8, 2}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {2}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {8, 5, 7}.


Revised: The value 8 is removed from the domain of node (5, 3), Now the domain is {5, 7}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 3, 4, 5}.


Revised: The value 8 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (4, 3) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {8, 9}.


Revised: The value 8 is removed from the domain of node (4, 4), Now the domain is {9}.


Domain of (4, 4) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 4) for AC- check


Add to the Queue (3, 4),(4, 4) for AC- check


Add to the Queue (5, 4),(4, 4) for AC- check


Add to the Queue (4, 6),(4, 4) for AC- check


Add to the Queue (7, 4),(4, 4) for AC- check


Add to the Queue (4, 2),(4, 4) for AC- check


Add to the Queue (4, 5),(4, 4) for AC- check


Add to the Queue (3, 3),(4, 4) for AC- check


Add to the Queue (4, 8),(4, 4) for AC- check


Add to the Queue (5, 3),(4, 4) for AC- check


Add to the Queue (2, 4),(4, 4) for AC- check


Add to the Queue (0, 4),(4, 4) for AC- check


Add to the Queue (6, 4),(4, 4) for AC- check


Add to the Queue (4, 1),(4, 4) for AC- check


Add to the Queue (4, 7),(4, 4) for AC- check


Add to the Queue (3, 5),(4, 4) for AC- check


Add to the Queue (5, 5),(4, 4) for AC- check


Add to the Queue (8, 4),(4, 4) for AC- check


Add to the Queue (1, 4),(4, 4) for AC- check


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 3, 4, 5}.


Revised: The value 8 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (4, 0), Now the domain is {9, 6, 7}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 8) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {8, 1, 4}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {7}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 5, 6, 8}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 5, 6, 8}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {9, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {9, 6}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {2, 4}.


Revised: The value 2 is removed from the domain of node (5, 6), Now the domain is {4}.


Domain of (5, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 6) for AC- check


Add to the Queue (5, 4),(5, 6) for AC- check


Add to the Queue (4, 6),(5, 6) for AC- check


Add to the Queue (5, 1),(5, 6) for AC- check


Add to the Queue (5, 7),(5, 6) for AC- check


Add to the Queue (8, 6),(5, 6) for AC- check


Add to the Queue (1, 6),(5, 6) for AC- check


Add to the Queue (5, 0),(5, 6) for AC- check


Add to the Queue (3, 6),(5, 6) for AC- check


Add to the Queue (5, 3),(5, 6) for AC- check


Add to the Queue (7, 6),(5, 6) for AC- check


Add to the Queue (4, 7),(5, 6) for AC- check


Add to the Queue (5, 2),(5, 6) for AC- check


Add to the Queue (3, 8),(5, 6) for AC- check


Add to the Queue (5, 5),(5, 6) for AC- check


Add to the Queue (5, 8),(5, 6) for AC- check


Add to the Queue (0, 6),(5, 6) for AC- check


Add to the Queue (2, 6),(5, 6) for AC- check


Add to the Queue (6, 6),(5, 6) for AC- check


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 5, 6}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (4, 8) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {8, 1, 2}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {8, 1}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 5, 6, 8}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {1, 5, 6, 8}.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {9, 6, 7}.


Revised: The value 9 is removed from the domain of node (4, 0), Now the domain is {6, 7}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {9, 5}.


Revised: The value 9 is removed from the domain of node (5, 4), Now the domain is {5}.


Domain of (5, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 4) for AC- check


Add to the Queue (4, 3),(5, 4) for AC- check


Add to the Queue (5, 1),(5, 4) for AC- check


Add to the Queue (5, 7),(5, 4) for AC- check


Add to the Queue (7, 4),(5, 4) for AC- check


Add to the Queue (4, 5),(5, 4) for AC- check


Add to the Queue (3, 3),(5, 4) for AC- check


Add to the Queue (5, 0),(5, 4) for AC- check


Add to the Queue (5, 6),(5, 4) for AC- check


Add to the Queue (5, 3),(5, 4) for AC- check


Add to the Queue (2, 4),(5, 4) for AC- check


Add to the Queue (0, 4),(5, 4) for AC- check


Add to the Queue (6, 4),(5, 4) for AC- check


Add to the Queue (3, 5),(5, 4) for AC- check


Add to the Queue (5, 2),(5, 4) for AC- check


Add to the Queue (5, 5),(5, 4) for AC- check


Add to the Queue (8, 4),(5, 4) for AC- check


Add to the Queue (5, 8),(5, 4) for AC- check


Add to the Queue (1, 4),(5, 4) for AC- check


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {8, 1, 5, 6}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {9, 6}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {6}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (4, 7),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {5, 7}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {8, 1, 5, 6}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {8, 1, 5, 6}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {3, 7}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 1, 4}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {8, 1}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 4, 7}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {9, 7}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 3, 7}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {5, 7}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 7}.


Revised: The value 4 is removed from the domain of node (7, 6), Now the domain is {2, 7}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {9, 2}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {8, 1}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 2, 4}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {9, 2}.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {3, 7}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {8, 1}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {8, 1, 5, 6}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {8, 1, 6}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 3, 7}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {5, 7}.


Revised: The value 5 is removed from the domain of node (5, 3), Now the domain is {7}.


Domain of (5, 3) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 3) for AC- check


Add to the Queue (4, 3),(5, 3) for AC- check


Add to the Queue (5, 1),(5, 3) for AC- check


Add to the Queue (5, 7),(5, 3) for AC- check


Add to the Queue (8, 3),(5, 3) for AC- check


Add to the Queue (1, 3),(5, 3) for AC- check


Add to the Queue (4, 5),(5, 3) for AC- check


Add to the Queue (3, 3),(5, 3) for AC- check


Add to the Queue (5, 0),(5, 3) for AC- check


Add to the Queue (5, 6),(5, 3) for AC- check


Add to the Queue (7, 3),(5, 3) for AC- check


Add to the Queue (3, 5),(5, 3) for AC- check


Add to the Queue (5, 2),(5, 3) for AC- check


Add to the Queue (4, 4),(5, 3) for AC- check


Add to the Queue (5, 5),(5, 3) for AC- check


Add to the Queue (5, 8),(5, 3) for AC- check


Add to the Queue (0, 3),(5, 3) for AC- check


Add to the Queue (2, 3),(5, 3) for AC- check


Add to the Queue (6, 3),(5, 3) for AC- check


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {8, 1, 5, 6}.


Revised: The value 5 is removed from the domain of node (6, 4), Now the domain is {8, 1, 6}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {9, 2}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {8, 1, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {8, 1, 6}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {8, 1}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {6, 7}.


Revised: The value 6 is removed from the domain of node (4, 0), Now the domain is {7}.


Domain of (4, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 0) for AC- check


Add to the Queue (3, 1),(4, 0) for AC- check


Add to the Queue (4, 6),(4, 0) for AC- check


Add to the Queue (5, 1),(4, 0) for AC- check


Add to the Queue (8, 0),(4, 0) for AC- check


Add to the Queue (1, 0),(4, 0) for AC- check


Add to the Queue (3, 0),(4, 0) for AC- check


Add to the Queue (4, 5),(4, 0) for AC- check


Add to the Queue (5, 0),(4, 0) for AC- check


Add to the Queue (4, 8),(4, 0) for AC- check


Add to the Queue (7, 0),(4, 0) for AC- check


Add to the Queue (3, 2),(4, 0) for AC- check


Add to the Queue (4, 1),(4, 0) for AC- check


Add to the Queue (4, 7),(4, 0) for AC- check


Add to the Queue (5, 2),(4, 0) for AC- check


Add to the Queue (4, 4),(4, 0) for AC- check


Add to the Queue (0, 0),(4, 0) for AC- check


Add to the Queue (2, 0),(4, 0) for AC- check


Add to the Queue (6, 0),(4, 0) for AC- check


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {3, 7}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {1, 2, 8, 9}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 3, 7}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {8, 1, 6, 9}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {8, 1, 9}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {9, 2}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2, 6}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {8, 1, 2}.


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {3, 7}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {3}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {8, 1}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (5, 0), Now the domain is {9, 2, 3}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {9, 2}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {8, 1}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5}.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {9, 3, 6}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 3}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {2, 3, 6}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {9, 2}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 2, 3, 6}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {8, 1}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {3, 4, 5, 7}.


Revised: The value 3 is removed from the domain of node (7, 1), Now the domain is {4, 5, 7}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {6}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 3}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {9, 2}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 5}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {4, 5}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {9, 2}.


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {8, 1}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {3, 4, 5, 7}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {4, 5, 7}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


End of Binary Constraints, Checks done for cell: (4,3).


After make inferences we see that the domain of cell (4, 0) is {7}


After make inferences we see that the domain of cell (4, 2) is {6}


After make inferences we see that the domain of cell (4, 4) is {9}


After make inferences we see that the domain of cell (4, 8) is {2}


After make inferences we see that the domain of cell (5, 1) is {3}


After make inferences we see that the domain of cell (5, 3) is {7}


After make inferences we see that the domain of cell (5, 4) is {5}


After make inferences we see that the domain of cell (5, 6) is {4}


Adding to board in cell :(4, 0),value :7


Adding to board in cell :(4, 2),value :6


Adding to board in cell :(4, 4),value :9


Adding to board in cell :(4, 8),value :2


Adding to board in cell :(5, 1),value :3


Adding to board in cell :(5, 3),value :7


Adding to board in cell :(5, 4),value :5


Adding to board in cell :(5, 6),value :4


Go deep in the search tree parent cell (4,3) with value 8 ,current depth:34


MRV cell is (5, 0)


Attempting to fill cell (5, 0) with domain values: [2, 9]


Trying value 2 for cell (5, 0), current depth :35


Applying uniaray constraint.


Orginal domain of cell (5, 0) before reduction {9, 2}.


The domain of cell (5, 0) is reduced to 2.


Applying Binary constraint.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {8, 1}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 6}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {6}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {7}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 6}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {3, 6}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {9, 2}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {9}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 1),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {8, 1}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 2, 3, 6}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {9, 3, 6}.


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 2) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {8, 1}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 2, 9}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {8, 1, 2}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {6}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {7}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {8, 1, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {8, 1}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {8, 1}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2}.


End of Binary Constraints, Checks done for cell: (5,0).


After make inferences we see that the domain of cell (5, 2) is {9}


Adding to board in cell :(5, 2),value :9


Go deep in the search tree parent cell (5,0) with value 2 ,current depth:35


MRV cell is (5, 7)


Attempting to fill cell (5, 7) with domain values: [1, 8]


Trying value 1 for cell (5, 7), current depth :36


Applying uniaray constraint.


Orginal domain of cell (5, 7) before reduction {8, 1}.


The domain of cell (5, 7) is reduced to 1.


Applying Binary constraint.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1, 3, 4}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {8, 3, 4}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {2}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {7}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {6}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 1, 3, 4}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {8, 3, 4}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {8, 1}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {8}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {8, 1, 3, 4}.


Revised: The value 1 is removed from the domain of node (8, 7), Now the domain is {8, 3, 4}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {7}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {8, 1, 5, 6}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {1, 5, 6}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {2}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {7}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 5, 6}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 5, 6}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {6}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 5, 6}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {1, 5, 6}.


End of Binary Constraints, Checks done for cell: (5,7).


After make inferences we see that the domain of cell (5, 8) is {8}


Adding to board in cell :(5, 8),value :8


Go deep in the search tree parent cell (5,7) with value 1 ,current depth:36


MRV cell is (6, 1)


Attempting to fill cell (6, 1) with domain values: [4, 5]


Trying value 4 for cell (6, 1), current depth :37


Applying uniaray constraint.


Orginal domain of cell (6, 1) before reduction {4, 5}.


The domain of cell (6, 1) is reduced to 4.


Applying Binary constraint.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 6}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 2}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {4, 5, 7}.


Revised: The value 4 is removed from the domain of node (7, 1), Now the domain is {5, 7}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {1, 5, 6}.


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {3, 6}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {8, 1, 6}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 4}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {8, 3}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {4, 5, 7}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {5, 7}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 6}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {9, 2}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {3, 5}.


End of Binary Constraints, Checks done for cell: (6,1).


Go deep in the search tree parent cell (6,1) with value 4 ,current depth:37


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [3, 5]


Trying value 3 for cell (6, 3), current depth :38


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {3, 5}.


The domain of cell (6, 3) is reduced to 3.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {4, 5}.


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {8, 1, 6}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 2}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 5, 6}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {7}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {8, 1, 6}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {4, 5}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {8, 3}.


Revised: The value 3 is removed from the domain of node (6, 7), Now the domain is {8}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (6, 2),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {8, 1, 6}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 6}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {9, 6}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {9, 2}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {1}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {9, 7}.


Processing (6, 7) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {1, 2}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 4}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {3, 4}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {1, 5, 6}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 5, 6}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {6}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {8, 1, 6}.


Revised: The value 8 is removed from the domain of node (6, 4), Now the domain is {1, 6}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {2, 7}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {8, 3, 4}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {3, 4}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {9, 6}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {9, 2}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {1, 5, 6}.


End of Binary Constraints, Checks done for cell: (6,3).


After make inferences we see that the domain of cell (6, 7) is {8}


Adding to board in cell :(6, 7),value :8


Go deep in the search tree parent cell (6,3) with value 3 ,current depth:38


MRV cell is (6, 0)


Attempting to fill cell (6, 0) with domain values: [6, 9]


Trying value 6 for cell (6, 0), current depth :39


Applying uniaray constraint.


Orginal domain of cell (6, 0) before reduction {9, 6}.


The domain of cell (6, 0) is reduced to 6.


Applying Binary constraint.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 6}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {9, 3}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 2}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {5, 7}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {1, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {1, 5}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {2}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {3, 6}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {3}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (7, 7),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {1, 6}.


Revised: The value 6 is removed from the domain of node (6, 4), Now the domain is {1}.


Domain of (6, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(6, 4) for AC- check


Add to the Queue (5, 4),(6, 4) for AC- check


Add to the Queue (8, 3),(6, 4) for AC- check


Add to the Queue (7, 4),(6, 4) for AC- check


Add to the Queue (6, 2),(6, 4) for AC- check


Add to the Queue (6, 5),(6, 4) for AC- check


Add to the Queue (6, 8),(6, 4) for AC- check


Add to the Queue (8, 5),(6, 4) for AC- check


Add to the Queue (2, 4),(6, 4) for AC- check


Add to the Queue (0, 4),(6, 4) for AC- check


Add to the Queue (6, 1),(6, 4) for AC- check


Add to the Queue (7, 3),(6, 4) for AC- check


Add to the Queue (6, 7),(6, 4) for AC- check


Add to the Queue (4, 4),(6, 4) for AC- check


Add to the Queue (8, 4),(6, 4) for AC- check


Add to the Queue (1, 4),(6, 4) for AC- check


Add to the Queue (6, 6),(6, 4) for AC- check


Add to the Queue (7, 5),(6, 4) for AC- check


Add to the Queue (6, 3),(6, 4) for AC- check


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {5, 7}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {9, 2}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3}.


Revised: The value 3 is removed from the domain of node (8, 0), Now the domain is {9}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(8, 0) for AC- check


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (5, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {8, 1, 6}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 2}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {5, 7}.


Processing (7, 0) <---- (7, 7) ,Domain of node (7, 7) is {3, 4}.


Revised: The value 3 is removed from the domain of node (7, 7), Now the domain is {4}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {2}.


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {4, 5}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {2, 7}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {5, 7}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {1, 5, 6}.


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {4, 5}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {8, 1, 6}.


Revised: The value 1 is removed from the domain of node (7, 4), Now the domain is {8, 6}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2}.


Revised: The value 1 is removed from the domain of node (6, 2), Now the domain is {2}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (6, 8),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 7),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (7, 2),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 6),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 5}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {5}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (6, 1),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {4, 5}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {8, 1, 6}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {8, 6}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {9, 2}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (8, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {4, 5}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {9, 7}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {7}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {2}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {5, 7}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (8, 0) <---- (5, 0) ,Domain of node (5, 0) is {2}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {1, 5, 6}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {8, 6}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {5, 7}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {3, 4}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {1}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {8, 6}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {5, 7}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 5, 6}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {6}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {4, 5}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {5}.


Domain of (7, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(7, 3) for AC- check


Add to the Queue (8, 3),(7, 3) for AC- check


Add to the Queue (1, 3),(7, 3) for AC- check


Add to the Queue (7, 4),(7, 3) for AC- check


Add to the Queue (7, 1),(7, 3) for AC- check


Add to the Queue (6, 5),(7, 3) for AC- check


Add to the Queue (3, 3),(7, 3) for AC- check


Add to the Queue (5, 3),(7, 3) for AC- check


Add to the Queue (8, 5),(7, 3) for AC- check


Add to the Queue (7, 0),(7, 3) for AC- check


Add to the Queue (6, 4),(7, 3) for AC- check


Add to the Queue (7, 6),(7, 3) for AC- check


Add to the Queue (8, 4),(7, 3) for AC- check


Add to the Queue (0, 3),(7, 3) for AC- check


Add to the Queue (2, 3),(7, 3) for AC- check


Add to the Queue (7, 2),(7, 3) for AC- check


Add to the Queue (7, 5),(7, 3) for AC- check


Add to the Queue (6, 3),(7, 3) for AC- check


Add to the Queue (7, 8),(7, 3) for AC- check


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {2, 7}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {3, 4}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {3}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (8, 1),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {9, 2}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {1, 5, 6}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {5, 7}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {6}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {5, 7}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 2}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {8, 1}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {9, 2}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {9}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (7, 6),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {7}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {2}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 6}.


Processing (6, 8) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {2, 7}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 5, 6}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 6}.


Processing (8, 6) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {4, 5}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 7}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {2}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {8, 6}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {5, 7}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {5}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 6}.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {4, 5}.


Revised: The value 5 is removed from the domain of node (8, 3), Now the domain is {4}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {8, 6}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {5, 7}.


Revised: The value 5 is removed from the domain of node (7, 1), Now the domain is {7}.


Domain of (7, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(7, 1) for AC- check


Add to the Queue (5, 1),(7, 1) for AC- check


Add to the Queue (8, 0),(7, 1) for AC- check


Add to the Queue (7, 4),(7, 1) for AC- check


Add to the Queue (6, 2),(7, 1) for AC- check


Add to the Queue (7, 7),(7, 1) for AC- check


Add to the Queue (8, 2),(7, 1) for AC- check


Add to the Queue (0, 1),(7, 1) for AC- check


Add to the Queue (2, 1),(7, 1) for AC- check


Add to the Queue (6, 1),(7, 1) for AC- check


Add to the Queue (7, 0),(7, 1) for AC- check


Add to the Queue (7, 6),(7, 1) for AC- check


Add to the Queue (4, 1),(7, 1) for AC- check


Add to the Queue (8, 1),(7, 1) for AC- check


Add to the Queue (1, 1),(7, 1) for AC- check


Add to the Queue (7, 2),(7, 1) for AC- check


Add to the Queue (6, 0),(7, 1) for AC- check


Add to the Queue (7, 5),(7, 1) for AC- check


Add to the Queue (7, 8),(7, 1) for AC- check


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {7}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {8, 6}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {8, 1}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {1, 6}.


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {1}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {6}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {5}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {8, 6}.


Processing (8, 7) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {1, 6}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (6, 6) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 6}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {3}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {8, 6}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {5}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {8}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {5}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {8, 1}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 6}.


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {2}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {8, 6}.


Processing (8, 1) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 1}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {8, 6}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {7}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {8, 6}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {1}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {3}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {8, 6}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {2}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 1}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {1, 6}.


End of Binary Constraints, Checks done for cell: (6,0).


After make inferences we see that the domain of cell (6, 2) is {2}


After make inferences we see that the domain of cell (6, 4) is {1}


After make inferences we see that the domain of cell (6, 6) is {9}


After make inferences we see that the domain of cell (6, 8) is {5}


After make inferences we see that the domain of cell (7, 0) is {3}


After make inferences we see that the domain of cell (7, 1) is {7}


After make inferences we see that the domain of cell (7, 3) is {5}


After make inferences we see that the domain of cell (7, 6) is {2}


After make inferences we see that the domain of cell (7, 7) is {4}


After make inferences we see that the domain of cell (8, 0) is {9}


After make inferences we see that the domain of cell (8, 1) is {5}


After make inferences we see that the domain of cell (8, 3) is {4}


After make inferences we see that the domain of cell (8, 6) is {7}


After make inferences we see that the domain of cell (8, 7) is {3}


Adding to board in cell :(6, 2),value :2


Adding to board in cell :(6, 4),value :1


Adding to board in cell :(6, 6),value :9


Adding to board in cell :(6, 8),value :5


Adding to board in cell :(7, 0),value :3


Adding to board in cell :(7, 1),value :7


Adding to board in cell :(7, 3),value :5


Adding to board in cell :(7, 6),value :2


Adding to board in cell :(7, 7),value :4


Adding to board in cell :(8, 0),value :9


Adding to board in cell :(8, 1),value :5


Adding to board in cell :(8, 3),value :4


Adding to board in cell :(8, 6),value :7


Adding to board in cell :(8, 7),value :3


Go deep in the search tree parent cell (6,0) with value 6 ,current depth:39


MRV cell is (7, 2)


Attempting to fill cell (7, 2) with domain values: [1, 8]


Trying value 1 for cell (7, 2), current depth :40


Applying uniaray constraint.


Orginal domain of cell (7, 2) before reduction {8, 1}.


The domain of cell (7, 2) is reduced to 1.


Applying Binary constraint.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {8, 6}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {2}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 2) <---- (4, 2) ,Domain of node (4, 2) is {6}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {8, 1}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {8}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (6, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {5}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {1, 6}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {6}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (6, 2) ,Domain of node (6, 2) is {2}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {6}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {8, 6}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {6}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (7, 4),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (0, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {6}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {7}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {8, 6}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {8}.


Domain of (7, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(7, 4) for AC- check


Add to the Queue (5, 4),(7, 4) for AC- check


Add to the Queue (8, 3),(7, 4) for AC- check


Add to the Queue (7, 1),(7, 4) for AC- check


Add to the Queue (7, 7),(7, 4) for AC- check


Add to the Queue (6, 5),(7, 4) for AC- check


Add to the Queue (8, 5),(7, 4) for AC- check


Add to the Queue (2, 4),(7, 4) for AC- check


Add to the Queue (0, 4),(7, 4) for AC- check


Add to the Queue (7, 0),(7, 4) for AC- check


Add to the Queue (6, 4),(7, 4) for AC- check


Add to the Queue (7, 3),(7, 4) for AC- check


Add to the Queue (7, 6),(7, 4) for AC- check


Add to the Queue (4, 4),(7, 4) for AC- check


Add to the Queue (8, 4),(7, 4) for AC- check


Add to the Queue (1, 4),(7, 4) for AC- check


Add to the Queue (7, 2),(7, 4) for AC- check


Add to the Queue (7, 5),(7, 4) for AC- check


Add to the Queue (6, 3),(7, 4) for AC- check


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {1}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {5}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (8, 4) <---- (7, 4) ,Domain of node (7, 4) is {8}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (8, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {5}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {7}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {7}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {2}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {7}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {5}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {3}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {9}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {7}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {7}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {8}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {2}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {9}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


End of Binary Constraints, Checks done for cell: (7,2).


After make inferences we see that the domain of cell (7, 4) is {8}


After make inferences we see that the domain of cell (7, 8) is {6}


After make inferences we see that the domain of cell (8, 2) is {8}


After make inferences we see that the domain of cell (8, 4) is {6}


After make inferences we see that the domain of cell (8, 8) is {1}


Adding to board in cell :(7, 4),value :8


Adding to board in cell :(7, 8),value :6


Adding to board in cell :(8, 2),value :8


Adding to board in cell :(8, 4),value :6


Adding to board in cell :(8, 8),value :1


Go deep in the search tree parent cell (7,2) with value 1 ,current depth:40


MRV cell is None


End of applying Backtracking.


after make cell (5,3) = 1


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (2, 2) is reduced to 4.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


Apply Binary constraint to the Initial Board


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (1, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {2, 3, 5, 6, 7, 8, 9}, (3, 4): {2, 3, 5, 6, 7, 8, 9}, (3, 5): {2, 3, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {2, 3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 0): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 1): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 2): {2, 3, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {2, 3, 5, 6, 7, 8, 9}, (5, 5): {2, 3, 5, 6, 7, 8, 9}, (5, 6): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 7): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 8): {2, 3, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (6, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (6, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (6, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (7, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [2, 3, 5, 6, 7, 8, 9]


Trying value 2 for cell (2, 3), current depth :0


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {2, 3, 5, 6, 7, 8, 9}.


The domain of cell (2, 3) is reduced to 2.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 0), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,3).


Go deep in the search tree parent cell (2,3) with value 2 ,current depth:0


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [3, 5, 6, 7, 8, 9]


Trying value 3 for cell (3, 3), current depth :1


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {3, 5, 6, 7, 8, 9}.


The domain of cell (3, 3) is reduced to 3.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 3), Now the domain is {5, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 0), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {4, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 3 ,current depth:1


MRV cell is (4, 3)


Attempting to fill cell (4, 3) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (4, 3), current depth :2


Applying uniaray constraint.


Orginal domain of cell (4, 3) before reduction {5, 6, 7, 8, 9}.


The domain of cell (4, 3) is reduced to 5.


Applying Binary constraint.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 4), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 4), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 3), Now the domain is {4, 6, 7, 8, 9}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {4, 6, 7, 8, 9}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {4, 6, 7, 8, 9}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 3) <---- (3, 5) ,Domain of node (3, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 4), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 5), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {4, 6, 7, 8, 9}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 3), Now the domain is {4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (4,3).


Go deep in the search tree parent cell (4,3) with value 5 ,current depth:2


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [6, 7, 8, 9, 4]


Trying value 6 for cell (0, 3), current depth :3


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {4, 6, 7, 8, 9}.


The domain of cell (0, 3) is reduced to 6.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {4, 7, 8, 9}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 5), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 3), Now the domain is {4, 7, 8, 9}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 5), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {4, 7, 8, 9}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 6), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,3).


Go deep in the search tree parent cell (0,3) with value 6 ,current depth:3


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [7, 8, 9, 4]


Trying value 7 for cell (1, 3), current depth :4


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {8, 9, 4, 7}.


The domain of cell (1, 3) is reduced to 7.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {8, 9, 4}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 5), Now the domain is {1, 3, 5, 8, 9}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {1, 3, 5, 8, 9}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 8, 9}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 3, 5, 8, 9}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {8, 9, 4}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 5, 6, 8, 9}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {8, 9, 4}.


End of Binary Constraints, Checks done for cell: (1,3).


Go deep in the search tree parent cell (1,3) with value 7 ,current depth:4


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [8, 9, 4]


Trying value 8 for cell (6, 3), current depth :5


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {8, 9, 4}.


The domain of cell (6, 3) is reduced to 8.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {9, 4}.


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (7, 3), Now the domain is {9, 4}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 0), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (6,3).


Go deep in the search tree parent cell (6,3) with value 8 ,current depth:5


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [9, 4]


Trying value 9 for cell (7, 3), current depth :6


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {9, 4}.


The domain of cell (7, 3) is reduced to 9.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 4}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {4}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 4, 5, 6, 7}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 0), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 4, 5, 6, 7}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 4, 5, 6, 7}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7}.


Revised: The value 4 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 4, 5, 6, 7}.


Revised: The value 4 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7}.


Revised: The value 4 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {8}.


End of Binary Constraints, Checks done for cell: (7,3).


After make inferences we see that the domain of cell (8, 3) is {4}


Adding to board in cell :(8, 3),value :4


Go deep in the search tree parent cell (7,3) with value 9 ,current depth:6


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [1, 3, 5, 8, 9]


Trying value 1 for cell (0, 5), current depth :7


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {1, 3, 5, 8, 9}.


The domain of cell (0, 5) is reduced to 1.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {3, 5, 8, 9}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (6, 5), Now the domain is {2, 3, 5, 6, 7}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {2, 3, 5, 6, 7}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 4), Now the domain is {3, 5, 8, 9}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {3, 4, 5, 8, 9}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {3, 5, 8, 9}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {2, 6, 7, 8, 9}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {2, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 0), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 4), Now the domain is {3, 4, 5, 8, 9}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {2, 3, 5, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 1 ,current depth:7


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [3, 5, 8, 9]


Trying value 3 for cell (1, 5), current depth :8


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {8, 9, 3, 5}.


The domain of cell (1, 5) is reduced to 3.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 0), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (2, 5), Now the domain is {8, 9, 5}.


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {2, 3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 5), Now the domain is {2, 5, 6, 7}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {2, 3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {2, 5, 6, 7}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (2, 4), Now the domain is {8, 9, 5}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {3, 4, 5, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {4, 5, 8, 9}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 8), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {2, 6, 7, 8, 9}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {2, 6, 7, 8, 9}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 1), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {3, 4, 5, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 4), Now the domain is {4, 5, 8, 9}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 7), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {2, 3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {2, 5, 6, 7}.


End of Binary Constraints, Checks done for cell: (1,5).


Go deep in the search tree parent cell (1,5) with value 3 ,current depth:8


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [5, 8, 9]


Trying value 5 for cell (2, 4), current depth :9


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {8, 9, 5}.


The domain of cell (2, 4) is reduced to 5.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 6, 7, 8, 9}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 6, 7, 8, 9}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {8, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 2, 3, 6, 7}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {8, 9, 4, 5}.


Revised: The value 5 is removed from the domain of node (0, 4), Now the domain is {8, 9, 4}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 7), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (6, 4), Now the domain is {1, 2, 3, 6, 7}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 6, 7, 8, 9}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {1, 2, 3, 6, 7}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 4, 5}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {8, 9, 4}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 6), Now the domain is {1, 3, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 5 ,current depth:9


MRV cell is (2, 5)


Attempting to fill cell (2, 5) with domain values: [8, 9]


Trying value 8 for cell (2, 5), current depth :10


Applying uniaray constraint.


Orginal domain of cell (2, 5) before reduction {8, 9}.


The domain of cell (2, 5) is reduced to 8.


Applying Binary constraint.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 8), Now the domain is {1, 3, 6, 7, 9}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {2, 5, 6, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {2, 5, 6, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (0, 4), Now the domain is {9, 4}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {1, 3, 6, 7, 9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 7), Now the domain is {1, 3, 6, 7, 9}.


Processing (2, 5) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {2, 6, 7, 9}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {2, 6, 7, 9}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {1, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 0), Now the domain is {1, 3, 6, 7, 9}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (1, 4), Now the domain is {9, 4}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {1, 3, 6, 7, 9}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {2, 5, 6, 7}.


End of Binary Constraints, Checks done for cell: (2,5).


Go deep in the search tree parent cell (2,5) with value 8 ,current depth:10


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [9, 4]


Trying value 9 for cell (0, 4), current depth :11


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {9, 4}.


The domain of cell (0, 4) is reduced to 9.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 4), Now the domain is {2, 6, 7, 8}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 4), Now the domain is {2, 6, 7, 8}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {2, 3, 5, 7, 8}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {2, 3, 4, 5, 7, 8}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 6, 7}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {2, 3, 5, 7, 8}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {2, 3, 4, 5, 7, 8}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 6, 7}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 4), Now the domain is {2, 6, 7, 8}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 6, 7}.


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {2, 3, 5, 7, 8}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {9, 4}.


Revised: The value 9 is removed from the domain of node (1, 4), Now the domain is {4}.


Domain of (1, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(1, 4) for AC- check


Add to the Queue (5, 4),(1, 4) for AC- check


Add to the Queue (0, 5),(1, 4) for AC- check


Add to the Queue (1, 0),(1, 4) for AC- check


Add to the Queue (1, 6),(1, 4) for AC- check


Add to the Queue (2, 5),(1, 4) for AC- check


Add to the Queue (1, 3),(1, 4) for AC- check


Add to the Queue (7, 4),(1, 4) for AC- check


Add to the Queue (2, 4),(1, 4) for AC- check


Add to the Queue (1, 2),(1, 4) for AC- check


Add to the Queue (1, 5),(1, 4) for AC- check


Add to the Queue (1, 8),(1, 4) for AC- check


Add to the Queue (6, 4),(1, 4) for AC- check


Add to the Queue (4, 4),(1, 4) for AC- check


Add to the Queue (8, 4),(1, 4) for AC- check


Add to the Queue (1, 1),(1, 4) for AC- check


Add to the Queue (0, 3),(1, 4) for AC- check


Add to the Queue (2, 3),(1, 4) for AC- check


Add to the Queue (1, 7),(1, 4) for AC- check


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {2, 3, 4, 5, 7, 8}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 6, 7, 8}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 6, 7, 8}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 6, 7}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 6, 7}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 6, 7, 8}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 6, 7}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 5, 6, 8, 9}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 7), Now the domain is {1, 2, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,4).


After make inferences we see that the domain of cell (1, 4) is {4}


Adding to board in cell :(1, 4),value :4


Go deep in the search tree parent cell (0,4) with value 9 ,current depth:11


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [2, 6, 7, 8]


Trying value 2 for cell (3, 4), current depth :12


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {8, 2, 6, 7}.


The domain of cell (3, 4) is reduced to 2.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {8, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {8, 6, 7}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 6, 7}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 6, 7}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 0), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 2, 3, 6, 7}.


Revised: The value 2 is removed from the domain of node (6, 4), Now the domain is {1, 3, 6, 7}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (3, 5), Now the domain is {9, 6, 7}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {8, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {8, 6, 7}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 8), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (5, 5), Now the domain is {9, 6, 7}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 6, 7}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 2 ,current depth:12


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [6, 7, 9]


Trying value 6 for cell (3, 5), current depth :13


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {9, 6, 7}.


The domain of cell (3, 5) is reduced to 6.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {1, 4, 5, 7, 8, 9}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {1, 4, 5, 7, 8, 9}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {8, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 4), Now the domain is {8, 7}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {2, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {2, 5, 7}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {1, 4, 5, 7, 8, 9}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {1, 4, 5, 7, 8, 9}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {2, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {2, 5, 7}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 2), Now the domain is {1, 5, 7, 8, 9}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {8, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {8, 7}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 8), Now the domain is {1, 4, 5, 7, 8, 9}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {9, 7}.


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {2, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 5), Now the domain is {2, 5, 7}.


End of Binary Constraints, Checks done for cell: (3,5).


Go deep in the search tree parent cell (3,5) with value 6 ,current depth:13


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [7, 8]


Trying value 7 for cell (4, 4), current depth :14


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {8, 7}.


The domain of cell (4, 4) is reduced to 7.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {8, 7}.


Revised: The value 7 is removed from the domain of node (5, 4), Now the domain is {8}.


Domain of (5, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 4) for AC- check


Add to the Queue (4, 3),(5, 4) for AC- check


Add to the Queue (5, 1),(5, 4) for AC- check


Add to the Queue (5, 7),(5, 4) for AC- check


Add to the Queue (7, 4),(5, 4) for AC- check


Add to the Queue (4, 5),(5, 4) for AC- check


Add to the Queue (3, 3),(5, 4) for AC- check


Add to the Queue (5, 0),(5, 4) for AC- check


Add to the Queue (5, 6),(5, 4) for AC- check


Add to the Queue (5, 3),(5, 4) for AC- check


Add to the Queue (2, 4),(5, 4) for AC- check


Add to the Queue (0, 4),(5, 4) for AC- check


Add to the Queue (6, 4),(5, 4) for AC- check


Add to the Queue (3, 5),(5, 4) for AC- check


Add to the Queue (5, 2),(5, 4) for AC- check


Add to the Queue (5, 5),(5, 4) for AC- check


Add to the Queue (8, 4),(5, 4) for AC- check


Add to the Queue (5, 8),(5, 4) for AC- check


Add to the Queue (1, 4),(5, 4) for AC- check


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 3, 6}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 4), Now the domain is {1, 3, 6}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {9, 7}.


Revised: The value 7 is removed from the domain of node (5, 5), Now the domain is {9}.


Domain of (5, 5) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 5) for AC- check


Add to the Queue (4, 3),(5, 5) for AC- check


Add to the Queue (5, 4),(5, 5) for AC- check


Add to the Queue (5, 1),(5, 5) for AC- check


Add to the Queue (5, 7),(5, 5) for AC- check


Add to the Queue (0, 5),(5, 5) for AC- check


Add to the Queue (2, 5),(5, 5) for AC- check


Add to the Queue (6, 5),(5, 5) for AC- check


Add to the Queue (4, 5),(5, 5) for AC- check


Add to the Queue (3, 3),(5, 5) for AC- check


Add to the Queue (5, 0),(5, 5) for AC- check


Add to the Queue (5, 6),(5, 5) for AC- check


Add to the Queue (5, 3),(5, 5) for AC- check


Add to the Queue (8, 5),(5, 5) for AC- check


Add to the Queue (1, 5),(5, 5) for AC- check


Add to the Queue (3, 5),(5, 5) for AC- check


Add to the Queue (5, 2),(5, 5) for AC- check


Add to the Queue (5, 8),(5, 5) for AC- check


Add to the Queue (7, 5),(5, 5) for AC- check


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 3, 6}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 6}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {1, 3, 6}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 9}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 6}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {2, 3, 4, 5, 6, 7}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {2, 5, 7}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 6, 7}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {2, 5, 7}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (5, 5) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {2, 5, 7}.


End of Binary Constraints, Checks done for cell: (4,4).


After make inferences we see that the domain of cell (5, 4) is {8}


After make inferences we see that the domain of cell (5, 5) is {9}


Adding to board in cell :(5, 4),value :8


Adding to board in cell :(5, 5),value :9


Go deep in the search tree parent cell (4,4) with value 7 ,current depth:14


MRV cell is (6, 4)


Attempting to fill cell (6, 4) with domain values: [1, 3, 6]


Trying value 1 for cell (6, 4), current depth :15


Applying uniaray constraint.


Orginal domain of cell (6, 4) before reduction {1, 3, 6}.


The domain of cell (6, 4) is reduced to 1.


Applying Binary constraint.


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 6}.


Revised: The value 1 is removed from the domain of node (7, 4), Now the domain is {3, 6}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 2), Now the domain is {2, 3, 5, 6, 7, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {2, 5, 7}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {2, 5, 7}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 6}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {3, 6}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {2, 5, 7}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {8}.


End of Binary Constraints, Checks done for cell: (6,4).


Go deep in the search tree parent cell (6,4) with value 1 ,current depth:15


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [3, 6]


Trying value 3 for cell (7, 4), current depth :16


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {3, 6}.


The domain of cell (7, 4) is reduced to 3.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 7), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {2, 5, 7}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {2, 5, 7}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {3, 6}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {6}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (0, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {2, 5, 7}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {2, 5, 7}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {2, 5, 7}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (8, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {2, 5, 7}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {8}.


End of Binary Constraints, Checks done for cell: (7,4).


After make inferences we see that the domain of cell (8, 4) is {6}


Adding to board in cell :(8, 4),value :6


Go deep in the search tree parent cell (7,4) with value 3 ,current depth:16


MRV cell is (6, 5)


Attempting to fill cell (6, 5) with domain values: [2, 5, 7]


Trying value 2 for cell (6, 5), current depth :17


Applying uniaray constraint.


Orginal domain of cell (6, 5) before reduction {2, 5, 7}.


The domain of cell (6, 5) is reduced to 2.


Applying Binary constraint.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {2, 3, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {3, 5, 6, 7, 9}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {3, 4, 5, 6, 7, 9}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {2, 5, 7}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {5, 7}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {3, 4, 5, 6, 7, 9}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {3, 4, 5, 6, 7, 9}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {3, 4, 5, 6, 7, 9}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {3, 4, 5, 6, 7, 9}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {2, 5, 7}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {5, 7}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


End of Binary Constraints, Checks done for cell: (6,5).


Go deep in the search tree parent cell (6,5) with value 2 ,current depth:17


MRV cell is (7, 5)


Attempting to fill cell (7, 5) with domain values: [5, 7]


Trying value 5 for cell (7, 5), current depth :18


Applying uniaray constraint.


Orginal domain of cell (7, 5) before reduction {5, 7}.


The domain of cell (7, 5) is reduced to 5.


Applying Binary constraint.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 6, 7, 8}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 2, 4, 6, 7, 8}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {5, 7}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {7}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 6, 7, 8}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 6, 7, 8}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {1, 2, 6, 7, 8}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 6, 7, 8}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 8, 9}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 5, 8, 9}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 8, 9}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 8, 9}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 8, 9}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 8, 9}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


End of Binary Constraints, Checks done for cell: (7,5).


After make inferences we see that the domain of cell (8, 5) is {7}


Adding to board in cell :(8, 5),value :7


Go deep in the search tree parent cell (7,5) with value 5 ,current depth:18


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [2, 3, 5, 7, 8]


Trying value 2 for cell (0, 0), current depth :19


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {2, 3, 5, 7, 8}.


The domain of cell (0, 0) is reduced to 2.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 0), Now the domain is {1, 3, 6, 8, 9}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {1, 3, 5, 8, 9}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {3, 5, 7, 8}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 0), Now the domain is {1, 5, 6, 8, 9}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {3, 4, 5, 7, 8}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 4, 5, 7, 8, 9}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {3, 4, 5, 6, 7}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 1), Now the domain is {3, 5, 7, 8}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 7), Now the domain is {3, 4, 5, 7, 8}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {1, 5, 6, 8, 9}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 3, 6, 7, 9}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {1, 4, 6, 7, 8}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 1), Now the domain is {1, 5, 6, 8, 9}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 3, 6, 7, 9}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 6), Now the domain is {3, 4, 5, 7, 8}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (0,0).


Go deep in the search tree parent cell (0,0) with value 2 ,current depth:19


MRV cell is (0, 1)


Attempting to fill cell (0, 1) with domain values: [3, 5, 7, 8]


Trying value 3 for cell (0, 1), current depth :20


Applying uniaray constraint.


Orginal domain of cell (0, 1) before reduction {8, 3, 5, 7}.


The domain of cell (0, 1) is reduced to 3.


Applying Binary constraint.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 4, 5, 7, 8, 9}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 6, 7}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (0, 2), Now the domain is {8, 5, 7}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {1, 5, 6, 8, 9}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {3, 4, 5, 7, 8}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {4, 5, 7, 8}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 6, 7, 8}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {3, 4, 5, 7, 8}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {4, 5, 7, 8}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {1, 5, 6, 8, 9}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {1, 6, 7, 9}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {4, 5, 6, 7, 9}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 2, 6, 8, 9}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {1, 2, 5, 8, 9}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {1, 5, 6, 8, 9}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {1, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {1, 6, 7, 9}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {3, 4, 5, 7, 8}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {4, 5, 7, 8}.


End of Binary Constraints, Checks done for cell: (0,1).


Go deep in the search tree parent cell (0,1) with value 3 ,current depth:20


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [5, 7, 8]


Trying value 5 for cell (0, 2), current depth :21


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {8, 5, 7}.


The domain of cell (0, 2) is reduced to 5.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {1, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 0), Now the domain is {1, 6, 8, 9}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {8, 4, 5, 7}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {8, 4, 7}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {3, 6, 7, 9}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 8, 9}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 8, 9}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {8, 4, 5, 7}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {8, 4, 7}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {1, 6, 8, 9}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 9, 6, 7}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 2), Now the domain is {1, 7, 8, 9}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {2, 3, 6, 7}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 1), Now the domain is {1, 6, 8, 9}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 9, 6, 7}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {8, 4, 5, 7}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {8, 4, 7}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 5 ,current depth:21


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [7, 8, 4]


Trying value 7 for cell (0, 6), current depth :22


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {8, 4, 7}.


The domain of cell (0, 6) is reduced to 7.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 8, 9}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 8, 9}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 6, 8, 9}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {8, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {8, 4}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {1, 3, 6, 9}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 6}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {1, 4, 5, 8, 9}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {8, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {8, 4}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {1, 3, 6, 9}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 5, 6, 8, 9}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 6, 8}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 5, 6, 8, 9}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (2, 6), Now the domain is {1, 3, 6, 9}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {3, 4, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 7 ,current depth:22


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [8, 4]


Trying value 8 for cell (0, 7), current depth :23


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {8, 4}.


The domain of cell (0, 7) is reduced to 8.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 4, 5, 7, 9}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 5, 6, 7}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2, 5, 6, 9}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {8, 4}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {4}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6, 9}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {1, 2, 4, 6, 7}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6, 9}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2, 5, 6, 9}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 4, 5, 6, 7, 9}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 9}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 9}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 7), Now the domain is {1, 2, 5, 6, 9}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6, 9}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 6, 9}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6, 9}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 4, 5, 6, 7, 9}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {3, 5, 6, 7, 9}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 8, 9}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 8, 9}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6, 9}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 5, 6, 9}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 4, 5, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {1, 5, 7, 8, 9}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7}.


Revised: The value 4 is removed from the domain of node (5, 8), Now the domain is {2, 3, 5, 6, 7}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {6}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 5, 6, 9}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6, 9}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {1, 2, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {4}


Adding to board in cell :(0, 8),value :4


Go deep in the search tree parent cell (0,7) with value 8 ,current depth:23


MRV cell is (1, 0)


Attempting to fill cell (1, 0) with domain values: [1, 6, 9, 8]


Trying value 1 for cell (1, 0), current depth :24


Applying uniaray constraint.


Orginal domain of cell (1, 0) before reduction {8, 1, 6, 9}.


The domain of cell (1, 0) is reduced to 1.


Applying Binary constraint.


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 3, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {3, 6, 8, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 3, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {3, 5, 8, 9}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (1, 6), Now the domain is {2, 5, 6, 9}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 4, 5, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 0), Now the domain is {4, 5, 7, 8, 9}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 5, 6, 7}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {8, 1, 6, 9}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {8, 6, 9}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 7, 6, 9}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {7, 6, 9}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {2, 5, 6, 9}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 4, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {4, 6, 7, 8}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {8, 1, 6, 9}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {8, 6, 9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 7, 6, 9}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is {7, 6, 9}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (1, 7), Now the domain is {2, 5, 6, 9}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (1,0).


Go deep in the search tree parent cell (1,0) with value 1 ,current depth:24


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [6, 9, 8]


Trying value 6 for cell (1, 1), current depth :25


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {8, 9, 6}.


The domain of cell (1, 1) is reduced to 6.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 4, 5, 7, 8, 9}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 7}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {9, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {9, 2, 5}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 7, 8}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 6}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {8, 9}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {9, 7}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {4, 5, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {4, 5, 7, 9}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {9, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {9, 2, 5}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 1), Now the domain is {1, 2, 8, 9}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 8, 9}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {9, 7}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {9, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (1, 7), Now the domain is {9, 2, 5}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 6 ,current depth:25


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [9, 8]


Trying value 9 for cell (1, 2), current depth :26


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {8, 9}.


The domain of cell (1, 2) is reduced to 9.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {9, 2, 5}.


Revised: The value 9 is removed from the domain of node (1, 6), Now the domain is {2, 5}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {3, 6, 7}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 6, 8}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 8}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {9, 7}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {7}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 0),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {9, 2, 5}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {2, 5}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 9, 7}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {8, 1, 7}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 6, 7}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {9, 7}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {7}.


Domain of (2, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(2, 0) for AC- check


Add to the Queue (8, 0),(2, 0) for AC- check


Add to the Queue (0, 2),(2, 0) for AC- check


Add to the Queue (2, 2),(2, 0) for AC- check


Add to the Queue (1, 0),(2, 0) for AC- check


Add to the Queue (2, 5),(2, 0) for AC- check


Add to the Queue (2, 8),(2, 0) for AC- check


Add to the Queue (3, 0),(2, 0) for AC- check


Add to the Queue (5, 0),(2, 0) for AC- check


Add to the Queue (0, 1),(2, 0) for AC- check


Add to the Queue (2, 4),(2, 0) for AC- check


Add to the Queue (2, 1),(2, 0) for AC- check


Add to the Queue (2, 7),(2, 0) for AC- check


Add to the Queue (7, 0),(2, 0) for AC- check


Add to the Queue (0, 0),(2, 0) for AC- check


Add to the Queue (1, 1),(2, 0) for AC- check


Add to the Queue (2, 3),(2, 0) for AC- check


Add to the Queue (2, 6),(2, 0) for AC- check


Add to the Queue (6, 0),(2, 0) for AC- check


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {9, 2, 5}.


Revised: The value 9 is removed from the domain of node (1, 7), Now the domain is {2, 5}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 6, 7, 8}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {1, 4, 5, 8, 9}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6, 9}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 8}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6, 9}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {9, 4, 5}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 2, 9}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 8, 9}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (2, 1) <---- (2, 0) ,Domain of node (2, 0) is {7}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (1,2).


Undo operation ,current depth : 26.


Remove the assigment from the board ,(1,2)=0.


No inferences made from cell (1,2) to remove it.


Trying value 8 for cell (1, 2), current depth :26


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {8, 9}.


The domain of cell (1, 2) is reduced to 8.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {9, 2, 5}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {9, 3, 6, 7}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 6, 9}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 9}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {9, 7}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {9, 2, 5}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 9, 7}.


Revised: The value 8 is removed from the domain of node (3, 2), Now the domain is {1, 9, 7}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 6, 7}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {9, 7}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {9, 2, 5}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {1, 2, 6, 7}.


End of Binary Constraints, Checks done for cell: (1,2).


Go deep in the search tree parent cell (1,2) with value 8 ,current depth:26


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [9, 7]


Trying value 9 for cell (2, 0), current depth :27


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {9, 7}.


The domain of cell (2, 0) is reduced to 9.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 9, 3, 6}.


Revised: The value 9 is removed from the domain of node (4, 0), Now the domain is {8, 3, 6}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 9, 3, 5}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {8, 3, 5}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {1, 3, 6}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {4, 5, 7, 8}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 5, 6, 7}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {9, 7}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {7}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {1, 3, 6}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 4, 6, 7}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {1, 3, 6}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {3, 4, 5, 6, 7}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {1, 4, 5, 8, 9}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 8}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {9, 4, 5}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 2, 9}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 8, 9}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6}.


End of Binary Constraints, Checks done for cell: (2,0).


After make inferences we see that the domain of cell (2, 1) is {7}


Adding to board in cell :(2, 1),value :7


Go deep in the search tree parent cell (2,0) with value 9 ,current depth:27


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [2, 5, 9]


Trying value 2 for cell (1, 6), current depth :28


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {9, 2, 5}.


The domain of cell (1, 6) is reduced to 2.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 6), Now the domain is {1, 3, 6, 8, 9}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {1, 3, 5, 8, 9}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 6}.


Revised: The value 2 is removed from the domain of node (5, 6), Now the domain is {3, 4, 5, 6}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 8, 9}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {9, 2, 5}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {9, 5}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 6, 8}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {1, 4, 6, 8}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {9, 2, 5}.


Revised: The value 2 is removed from the domain of node (1, 7), Now the domain is {9, 5}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 2 ,current depth:28


MRV cell is (1, 7)


Attempting to fill cell (1, 7) with domain values: [5, 9]


Trying value 5 for cell (1, 7), current depth :29


Applying uniaray constraint.


Orginal domain of cell (1, 7) before reduction {9, 5}.


The domain of cell (1, 7) is reduced to 5.


Applying Binary constraint.


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 5, 7, 9}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {1, 4, 7, 9}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {2, 3, 4, 6, 7}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 6, 7}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {9, 5}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {9}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (1, 2),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {3, 4, 6, 7, 9}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 9}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 9}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {7}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {3, 5, 6, 7}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 6, 8}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 8}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (1, 8) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {3}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {1, 5, 7, 8}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5, 6, 7}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {4}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 6}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,7).


After make inferences we see that the domain of cell (1, 8) is {9}


Adding to board in cell :(1, 8),value :9


Go deep in the search tree parent cell (1,7) with value 5 ,current depth:29


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [1, 3, 6]


Trying value 1 for cell (2, 6), current depth :30


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {1, 3, 6}.


The domain of cell (2, 6) is reduced to 1.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 3, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {3, 6, 8, 9}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 3, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {3, 5, 8, 9}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 6}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {3, 6}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 4, 5, 6}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {4, 5, 8, 9}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 6}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {3, 6}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 1, 4, 6}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {8, 4, 6}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (2,6).


Go deep in the search tree parent cell (2,6) with value 1 ,current depth:30


MRV cell is (2, 7)


Attempting to fill cell (2, 7) with domain values: [3, 6]


Trying value 3 for cell (2, 7), current depth :31


Applying uniaray constraint.


Orginal domain of cell (2, 7) before reduction {3, 6}.


The domain of cell (2, 7) is reduced to 3.


Applying Binary constraint.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 9, 7}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 6, 7}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {2, 4, 6, 7}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {3, 6}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {6}.


Domain of (2, 8) is one value ,we need to add AC constraint.


Add to the Queue (2, 2),(2, 8) for AC- check


Add to the Queue (1, 6),(2, 8) for AC- check


Add to the Queue (0, 8),(2, 8) for AC- check


Add to the Queue (2, 5),(2, 8) for AC- check


Add to the Queue (6, 8),(2, 8) for AC- check


Add to the Queue (4, 8),(2, 8) for AC- check


Add to the Queue (8, 8),(2, 8) for AC- check


Add to the Queue (2, 4),(2, 8) for AC- check


Add to the Queue (0, 7),(2, 8) for AC- check


Add to the Queue (2, 1),(2, 8) for AC- check


Add to the Queue (1, 8),(2, 8) for AC- check


Add to the Queue (3, 8),(2, 8) for AC- check


Add to the Queue (5, 8),(2, 8) for AC- check


Add to the Queue (2, 0),(2, 8) for AC- check


Add to the Queue (0, 6),(2, 8) for AC- check


Add to the Queue (2, 3),(2, 8) for AC- check


Add to the Queue (1, 7),(2, 8) for AC- check


Add to the Queue (2, 6),(2, 8) for AC- check


Add to the Queue (7, 8),(2, 8) for AC- check


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 6, 7}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (6, 7), Now the domain is {4, 6, 7, 9}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 9}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 9}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 9}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {1, 2, 9}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {8}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {3, 5, 7}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 8}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 8}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 8}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {5}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 5, 7}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {2, 3, 5, 7}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {1, 2, 7, 8}.


End of Binary Constraints, Checks done for cell: (2,7).


After make inferences we see that the domain of cell (2, 8) is {6}


Adding to board in cell :(2, 8),value :6


Go deep in the search tree parent cell (2,7) with value 3 ,current depth:31


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [1, 7, 9]


Trying value 1 for cell (3, 2), current depth :32


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {1, 9, 7}.


The domain of cell (3, 2) is reduced to 1.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 3, 6}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {1, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {4, 5, 8, 9}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 9, 7}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {4, 9, 7}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {9, 3, 6, 7}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 9}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {2, 3, 6, 9}.


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {8, 4, 5, 7}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 5, 6, 7}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {8, 9, 4, 5}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 9}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {2, 3, 9}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 2, 9}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {8, 2, 9}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 6, 7}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 5, 7}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {8, 5, 7}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 6, 7}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {2, 6, 7}.


End of Binary Constraints, Checks done for cell: (3,2).


Go deep in the search tree parent cell (3,2) with value 1 ,current depth:32


MRV cell is (3, 7)


Attempting to fill cell (3, 7) with domain values: [4, 7, 9]


Trying value 4 for cell (3, 7), current depth :33


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {9, 4, 7}.


The domain of cell (3, 7) is reduced to 4.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {8, 9, 4, 5}.


Revised: The value 4 is removed from the domain of node (3, 1), Now the domain is {8, 9, 5}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {8, 9, 3, 6}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {2, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {2, 6, 7}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 2, 6, 7}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {8, 4, 5, 7}.


Revised: The value 4 is removed from the domain of node (3, 0), Now the domain is {8, 5, 7}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3, 4, 5, 6}.


Revised: The value 4 is removed from the domain of node (5, 6), Now the domain is {3, 5, 6}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 3}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {8, 9, 4, 5}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {8, 9, 5}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {3}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {9, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {9, 6, 7}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 9}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {8, 5, 7}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5, 7}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 9}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {5}.


End of Binary Constraints, Checks done for cell: (3,7).


Go deep in the search tree parent cell (3,7) with value 4 ,current depth:33


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [5, 7, 8]


Trying value 5 for cell (3, 0), current depth :34


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {8, 5, 7}.


The domain of cell (3, 0) is reduced to 5.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 3, 6}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {8, 9}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {2, 4}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 3, 5}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {8, 3}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {9, 2, 3, 6}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {3, 4, 6, 7}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {8, 9}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 4, 6, 7}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 9, 2}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 6, 7}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {8, 5, 7}.


Revised: The value 5 is removed from the domain of node (3, 8), Now the domain is {8, 7}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {3, 4, 6, 7}.


End of Binary Constraints, Checks done for cell: (3,0).


Go deep in the search tree parent cell (3,0) with value 5 ,current depth:34


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [8, 9]


Trying value 8 for cell (3, 1), current depth :35


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {8, 9}.


The domain of cell (3, 1) is reduced to 8.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {8, 3, 6}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {3, 6}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 2, 4}.


Revised: The value 8 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {9, 2, 3, 6}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 6, 7}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {8, 9}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {9}.


Domain of (3, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 6) for AC- check


Add to the Queue (3, 7),(3, 6) for AC- check


Add to the Queue (4, 6),(3, 6) for AC- check


Add to the Queue (5, 7),(3, 6) for AC- check


Add to the Queue (8, 6),(3, 6) for AC- check


Add to the Queue (1, 6),(3, 6) for AC- check


Add to the Queue (3, 0),(3, 6) for AC- check


Add to the Queue (3, 3),(3, 6) for AC- check


Add to the Queue (5, 6),(3, 6) for AC- check


Add to the Queue (4, 8),(3, 6) for AC- check


Add to the Queue (7, 6),(3, 6) for AC- check


Add to the Queue (3, 2),(3, 6) for AC- check


Add to the Queue (4, 7),(3, 6) for AC- check


Add to the Queue (3, 5),(3, 6) for AC- check


Add to the Queue (3, 8),(3, 6) for AC- check


Add to the Queue (5, 8),(3, 6) for AC- check


Add to the Queue (0, 6),(3, 6) for AC- check


Add to the Queue (2, 6),(3, 6) for AC- check


Add to the Queue (6, 6),(3, 6) for AC- check


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 4, 5}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {9, 2}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 6, 7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {8, 7}.


Revised: The value 8 is removed from the domain of node (3, 8), Now the domain is {7}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 7),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (3, 6),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {1, 2, 5, 9}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 9, 3, 6}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {8, 3, 6}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 6, 7}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 9, 3, 5}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {8, 3, 5}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 5, 6}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 3}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4, 6}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5, 7}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (6, 6), Now the domain is {3, 4, 5, 6}.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {2}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {8, 3, 6}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {2, 6, 7}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {2, 6}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 8), Now the domain is {3, 5}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {3, 5, 6}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 3}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 8}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {6}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {2, 3, 5}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2, 7}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {8, 1, 2}.


End of Binary Constraints, Checks done for cell: (3,1).


After make inferences we see that the domain of cell (3, 6) is {9}


After make inferences we see that the domain of cell (3, 8) is {7}


Adding to board in cell :(3, 6),value :9


Adding to board in cell :(3, 8),value :7


Go deep in the search tree parent cell (3,1) with value 8 ,current depth:35


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [3, 6]


Trying value 3 for cell (4, 0), current depth :36


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {3, 6}.


The domain of cell (4, 0) is reduced to 3.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {8, 3, 6}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {8, 6}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {2, 4}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 3}.


Revised: The value 3 is removed from the domain of node (8, 0), Now the domain is {8}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (5, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {9, 2, 3, 6}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {9, 2, 6}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 6, 7}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {4, 6, 7}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 3}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {8, 1, 2}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 4, 6, 7}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {9, 2}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {2, 6, 7}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {4, 6, 7}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {8, 3, 5}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {3, 5}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {9, 3, 6, 7}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (8, 0) <---- (5, 0) ,Domain of node (5, 0) is {4, 6, 7}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {9, 2, 3}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 8}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {9, 4, 5}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 4, 6, 7}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {4, 6, 7}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 9}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 9}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {2, 6, 7}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7}.


End of Binary Constraints, Checks done for cell: (4,0).


After make inferences we see that the domain of cell (8, 0) is {8}


Adding to board in cell :(8, 0),value :8


Go deep in the search tree parent cell (4,0) with value 3 ,current depth:36


MRV cell is (4, 1)


Attempting to fill cell (4, 1) with domain values: [2, 9]


Trying value 2 for cell (4, 1), current depth :37


Applying uniaray constraint.


Orginal domain of cell (4, 1) before reduction {9, 2}.


The domain of cell (4, 1) is reduced to 2.


Applying Binary constraint.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {8, 6}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {4}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {1, 4}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {9, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {9, 6}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {4, 6, 7}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {8, 1}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 4, 5}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 6}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {2, 6, 7}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {6, 7}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 9}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {1, 5, 9}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {2, 6}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 4}.


Revised: The value 4 is removed from the domain of node (7, 1), Now the domain is {1}.


Domain of (7, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(7, 1) for AC- check


Add to the Queue (8, 0),(7, 1) for AC- check


Add to the Queue (7, 4),(7, 1) for AC- check


Add to the Queue (6, 2),(7, 1) for AC- check


Add to the Queue (7, 7),(7, 1) for AC- check


Add to the Queue (8, 2),(7, 1) for AC- check


Add to the Queue (0, 1),(7, 1) for AC- check


Add to the Queue (2, 1),(7, 1) for AC- check


Add to the Queue (6, 1),(7, 1) for AC- check


Add to the Queue (7, 0),(7, 1) for AC- check


Add to the Queue (7, 3),(7, 1) for AC- check


Add to the Queue (7, 6),(7, 1) for AC- check


Add to the Queue (4, 1),(7, 1) for AC- check


Add to the Queue (8, 1),(7, 1) for AC- check


Add to the Queue (1, 1),(7, 1) for AC- check


Add to the Queue (7, 2),(7, 1) for AC- check


Add to the Queue (6, 0),(7, 1) for AC- check


Add to the Queue (7, 5),(7, 1) for AC- check


Add to the Queue (7, 8),(7, 1) for AC- check


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {9, 6}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {4, 6, 7}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {6, 7}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3, 5, 6}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 4, 5}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {9, 5}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 5, 9}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {9, 3, 6, 7}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 6, 7}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {2, 6, 7}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {9, 2, 3}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 5}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {8, 4, 6}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 5, 9}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {5, 9}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {2, 6, 7}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {5}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {8, 2}.


End of Binary Constraints, Checks done for cell: (4,1).


After make inferences we see that the domain of cell (5, 1) is {4}


After make inferences we see that the domain of cell (7, 1) is {1}


Adding to board in cell :(5, 1),value :4


Adding to board in cell :(7, 1),value :1


Go deep in the search tree parent cell (4,1) with value 2 ,current depth:37


MRV cell is (4, 2)


Attempting to fill cell (4, 2) with domain values: [6, 9]


Trying value 6 for cell (4, 2), current depth :38


Applying uniaray constraint.


Orginal domain of cell (4, 2) before reduction {9, 6}.


The domain of cell (4, 2) is reduced to 6.


Applying Binary constraint.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {8, 6}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {8}.


Domain of (4, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 6) for AC- check


Add to the Queue (4, 3),(4, 6) for AC- check


Add to the Queue (3, 7),(4, 6) for AC- check


Add to the Queue (5, 7),(4, 6) for AC- check


Add to the Queue (8, 6),(4, 6) for AC- check


Add to the Queue (1, 6),(4, 6) for AC- check


Add to the Queue (4, 5),(4, 6) for AC- check


Add to the Queue (5, 6),(4, 6) for AC- check


Add to the Queue (4, 8),(4, 6) for AC- check


Add to the Queue (3, 6),(4, 6) for AC- check


Add to the Queue (7, 6),(4, 6) for AC- check


Add to the Queue (4, 1),(4, 6) for AC- check


Add to the Queue (4, 7),(4, 6) for AC- check


Add to the Queue (4, 4),(4, 6) for AC- check


Add to the Queue (3, 8),(4, 6) for AC- check


Add to the Queue (5, 8),(4, 6) for AC- check


Add to the Queue (0, 6),(4, 6) for AC- check


Add to the Queue (2, 6),(4, 6) for AC- check


Add to the Queue (6, 6),(4, 6) for AC- check


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {9, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {9, 3, 7}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {6, 7}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {7}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {8, 1}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {9, 2, 3}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {1}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (4, 8),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {7}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 1),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {2, 7}.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 6}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {3, 5}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 5, 6}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {8, 1}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4, 6}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {4, 6}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {1}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5, 6}.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {2, 6}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3, 5, 6}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {4, 6}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Revised: The value 7 is removed from the domain of node (5, 2), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (4,2).


Undo operation ,current depth : 38.


Remove the assigment from the board ,(4,2)=0.


No inferences made from cell (4,2) to remove it.


Trying value 9 for cell (4, 2), current depth :38


Applying uniaray constraint.


Orginal domain of cell (4, 2) before reduction {9, 6}.


The domain of cell (4, 2) is reduced to 9.


Applying Binary constraint.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {8, 6}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {3, 6, 7}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {6, 7}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {8, 1}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {9, 2, 3}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {2, 3}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 6, 7}.


End of Binary Constraints, Checks done for cell: (4,2).


Go deep in the search tree parent cell (4,2) with value 9 ,current depth:38


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [6, 8]


Trying value 6 for cell (4, 6), current depth :39


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {8, 6}.


The domain of cell (4, 6) is reduced to 6.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 6}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {2}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (5, 6),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (2, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (4, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {3, 5}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 5, 6}.


Revised: The value 6 is removed from the domain of node (5, 6), Now the domain is {3, 5}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {8, 1}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4, 6}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {8, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {1}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (4, 8),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {3, 4, 5}.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 6, 7}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {6, 7}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {6, 7}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3, 5}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {8, 1}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {3}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {9, 6, 7}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {1}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 5}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {3, 5}.


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 9}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 9}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {3, 5}.


Processing (4, 7) <---- (4, 8) ,Domain of node (4, 8) is {8, 1}.


Revised: The value 1 is removed from the domain of node (4, 8), Now the domain is {8}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {3}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {9, 6, 7}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {3, 5}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 9}.


Revised: The value 1 is removed from the domain of node (8, 7), Now the domain is {9}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (8, 1),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (4, 8) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 5}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {3, 5}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {3, 5}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 2}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {3, 5}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {3, 5}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {2, 3}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {3}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {9, 6, 7}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {6, 7}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 7) <---- (8, 1) ,Domain of node (8, 1) is {9, 5}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {5}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {3, 5}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 5}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1, 3, 5}.


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {3, 5}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {2, 6, 7}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {6, 7}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {5}.


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {3, 5}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {3}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(8, 6) for AC- check


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {2, 3}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {1, 3, 5}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 3}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 5}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {9}.


Domain of (6, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(6, 1) for AC- check


Add to the Queue (5, 1),(6, 1) for AC- check


Add to the Queue (8, 0),(6, 1) for AC- check


Add to the Queue (6, 2),(6, 1) for AC- check


Add to the Queue (7, 1),(6, 1) for AC- check


Add to the Queue (6, 5),(6, 1) for AC- check


Add to the Queue (6, 8),(6, 1) for AC- check


Add to the Queue (8, 2),(6, 1) for AC- check


Add to the Queue (0, 1),(6, 1) for AC- check


Add to the Queue (2, 1),(6, 1) for AC- check


Add to the Queue (7, 0),(6, 1) for AC- check


Add to the Queue (6, 4),(6, 1) for AC- check


Add to the Queue (6, 7),(6, 1) for AC- check


Add to the Queue (4, 1),(6, 1) for AC- check


Add to the Queue (1, 1),(6, 1) for AC- check


Add to the Queue (7, 2),(6, 1) for AC- check


Add to the Queue (6, 0),(6, 1) for AC- check


Add to the Queue (6, 6),(6, 1) for AC- check


Add to the Queue (6, 3),(6, 1) for AC- check


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {6, 7}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7}.


Processing (8, 6) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {3, 5}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {5}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (6, 1),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 5}.


Revised: The value 3 is removed from the domain of node (5, 6), Now the domain is {5}.


Domain of (5, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 6) for AC- check


Add to the Queue (5, 4),(5, 6) for AC- check


Add to the Queue (4, 6),(5, 6) for AC- check


Add to the Queue (5, 1),(5, 6) for AC- check


Add to the Queue (5, 7),(5, 6) for AC- check


Add to the Queue (1, 6),(5, 6) for AC- check


Add to the Queue (5, 0),(5, 6) for AC- check


Add to the Queue (4, 8),(5, 6) for AC- check


Add to the Queue (3, 6),(5, 6) for AC- check


Add to the Queue (5, 3),(5, 6) for AC- check


Add to the Queue (7, 6),(5, 6) for AC- check


Add to the Queue (4, 7),(5, 6) for AC- check


Add to the Queue (5, 2),(5, 6) for AC- check


Add to the Queue (3, 8),(5, 6) for AC- check


Add to the Queue (5, 5),(5, 6) for AC- check


Add to the Queue (5, 8),(5, 6) for AC- check


Add to the Queue (0, 6),(5, 6) for AC- check


Add to the Queue (2, 6),(5, 6) for AC- check


Add to the Queue (6, 6),(5, 6) for AC- check


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {2, 3}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {2}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (6, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (7, 2),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 3}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Add to the Queue (7, 8),(8, 8) for AC- check


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {3, 4, 5}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {4, 5}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {6}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {6, 7}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {8}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (6, 8) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {3, 5}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {3}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (5, 7),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Revised: The value 5 is removed from the domain of node (6, 6), Now the domain is {4}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (7, 6),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {6, 7}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {8}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {1}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {3}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {4}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (8, 2) <---- (7, 2) ,Domain of node (7, 2) is {6, 7}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {4}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {8}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {6}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {3}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {4}.


Processing (8, 8) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (5, 8) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {6, 7}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {5}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {8}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {9}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {1}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {3}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {5}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Processing (6, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Revised: The value 4 is removed from the domain of node (7, 6), Now the domain is {8}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (8, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7}.


Revised: The value 4 is removed from the domain of node (6, 0), Now the domain is {6, 7}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {6}.


Processing (7, 6) <---- (8, 6) ,Domain of node (8, 6) is {3}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {5}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {6, 7}.


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {5}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {2}.


End of Binary Constraints, Checks done for cell: (4,6).


After make inferences we see that the domain of cell (4, 7) is {1}


After make inferences we see that the domain of cell (4, 8) is {8}


After make inferences we see that the domain of cell (5, 6) is {5}


After make inferences we see that the domain of cell (5, 7) is {2}


After make inferences we see that the domain of cell (5, 8) is {3}


After make inferences we see that the domain of cell (6, 1) is {9}


After make inferences we see that the domain of cell (6, 6) is {4}


After make inferences we see that the domain of cell (6, 8) is {5}


After make inferences we see that the domain of cell (7, 6) is {8}


After make inferences we see that the domain of cell (7, 8) is {2}


After make inferences we see that the domain of cell (8, 1) is {5}


After make inferences we see that the domain of cell (8, 2) is {2}


After make inferences we see that the domain of cell (8, 6) is {3}


After make inferences we see that the domain of cell (8, 7) is {9}


After make inferences we see that the domain of cell (8, 8) is {1}


Adding to board in cell :(4, 7),value :1


Adding to board in cell :(4, 8),value :8


Adding to board in cell :(5, 6),value :5


Adding to board in cell :(5, 7),value :2


Adding to board in cell :(5, 8),value :3


Adding to board in cell :(6, 1),value :9


Adding to board in cell :(6, 6),value :4


Adding to board in cell :(6, 8),value :5


Adding to board in cell :(7, 6),value :8


Adding to board in cell :(7, 8),value :2


Adding to board in cell :(8, 1),value :5


Adding to board in cell :(8, 2),value :2


Adding to board in cell :(8, 6),value :3


Adding to board in cell :(8, 7),value :9


Adding to board in cell :(8, 8),value :1


Go deep in the search tree parent cell (4,6) with value 6 ,current depth:39


MRV cell is (5, 0)


Attempting to fill cell (5, 0) with domain values: [6, 7]


Trying value 6 for cell (5, 0), current depth :40


Applying uniaray constraint.


Orginal domain of cell (5, 0) before reduction {6, 7}.


The domain of cell (5, 0) is reduced to 6.


Applying Binary constraint.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {5}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {4, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {4, 7}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {6, 7}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {7}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 1),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {3}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {6, 7}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {7}.


Domain of (6, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(6, 0) for AC- check


Add to the Queue (8, 0),(6, 0) for AC- check


Add to the Queue (1, 0),(6, 0) for AC- check


Add to the Queue (6, 2),(6, 0) for AC- check


Add to the Queue (7, 1),(6, 0) for AC- check


Add to the Queue (6, 5),(6, 0) for AC- check


Add to the Queue (6, 8),(6, 0) for AC- check


Add to the Queue (3, 0),(6, 0) for AC- check


Add to the Queue (8, 2),(6, 0) for AC- check


Add to the Queue (6, 1),(6, 0) for AC- check


Add to the Queue (7, 0),(6, 0) for AC- check


Add to the Queue (6, 4),(6, 0) for AC- check


Add to the Queue (6, 7),(6, 0) for AC- check


Add to the Queue (0, 0),(6, 0) for AC- check


Add to the Queue (8, 1),(6, 0) for AC- check


Add to the Queue (2, 0),(6, 0) for AC- check


Add to the Queue (7, 2),(6, 0) for AC- check


Add to the Queue (6, 6),(6, 0) for AC- check


Add to the Queue (6, 3),(6, 0) for AC- check


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {8}.


Processing (5, 2) <---- (5, 1) ,Domain of node (5, 1) is {4}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {3, 6}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {5}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {2}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {9}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {3}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {6, 7}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {6}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (4, 2),(7, 2) for AC- check


Add to the Queue (8, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {3, 6}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {4, 7}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {4}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (7, 7),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {6, 7}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {6}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (6, 2),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {6}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {4}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {3}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (6, 8),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 4),(6, 2) for AC- check


Add to the Queue (6, 7),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 6),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {6, 7}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {7}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (7, 2) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {7}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {5}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {3}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {1}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {3}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 0) <---- (7, 7) ,Domain of node (7, 7) is {7}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {5}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {2}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {6}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {5}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {3}.


Processing (6, 7) <---- (6, 2) ,Domain of node (6, 2) is {3}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {7}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {3}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {1}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {4}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {8}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {5}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {2}.


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {9}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {9}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {1}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {5}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {7}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {4}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {4}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {3}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {5}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {8}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {3}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {4}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {6}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {1}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {9}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {5}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {4}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {5}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {2}.


End of Binary Constraints, Checks done for cell: (5,0).


After make inferences we see that the domain of cell (5, 2) is {7}


After make inferences we see that the domain of cell (6, 0) is {7}


After make inferences we see that the domain of cell (6, 2) is {3}


After make inferences we see that the domain of cell (6, 7) is {6}


After make inferences we see that the domain of cell (7, 0) is {4}


After make inferences we see that the domain of cell (7, 2) is {6}


After make inferences we see that the domain of cell (7, 7) is {7}


Adding to board in cell :(5, 2),value :7


Adding to board in cell :(6, 0),value :7


Adding to board in cell :(6, 2),value :3


Adding to board in cell :(6, 7),value :6


Adding to board in cell :(7, 0),value :4


Adding to board in cell :(7, 2),value :6


Adding to board in cell :(7, 7),value :7


Go deep in the search tree parent cell (5,0) with value 6 ,current depth:40


MRV cell is None


End of applying Backtracking.


after make cell (6,4) = 2


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (2, 2) is reduced to 4.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


The domain of cell (6, 4) is reduced to 2.


Apply Binary constraint to the Initial Board


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (6,4) are [(3, 4), (5, 4), (8, 3), (7, 4), (6, 2), (6, 5), (6, 8), (8, 5), (2, 4), (0, 4), (6, 1), (7, 3), (6, 7), (4, 4), (8, 4), (1, 4), (6, 0), (6, 6), (7, 5), (6, 3)]


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (1, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {2, 3, 5, 6, 7, 8, 9}, (3, 4): {3, 5, 6, 7, 8, 9}, (3, 5): {2, 3, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (5, 0): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 1): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 2): {2, 3, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {3, 5, 6, 7, 8, 9}, (5, 5): {2, 3, 5, 6, 7, 8, 9}, (5, 6): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 7): {2, 3, 4, 5, 6, 7, 8, 9}, (5, 8): {2, 3, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 1): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 2): {1, 3, 5, 6, 7, 8, 9}, (6, 3): {3, 4, 5, 6, 7, 8, 9}, (6, 4): {2}, (6, 5): {1, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 8): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 3): {3, 4, 5, 6, 7, 8, 9}, (7, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 5): {1, 3, 5, 6, 7, 8, 9}, (7, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 3): {3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [3, 5, 6, 7, 8, 9]


Trying value 3 for cell (3, 4), current depth :0


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {3, 5, 6, 7, 8, 9}.


The domain of cell (3, 4) is reduced to 3.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 4), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 0), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 3), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 4), Now the domain is {1, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 4), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 3 ,current depth:0


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (4, 4), current depth :1


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {5, 6, 7, 8, 9}.


The domain of cell (4, 4) is reduced to 5.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 4), Now the domain is {6, 7, 8, 9}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 3), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 4), Now the domain is {1, 6, 7, 8, 9}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 4), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 5), Now the domain is {2, 6, 7, 8, 9}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 5 ,current depth:1


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [6, 7, 8, 9]


Trying value 6 for cell (5, 4), current depth :2


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {8, 9, 6, 7}.


The domain of cell (5, 4) is reduced to 6.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 7, 8, 9}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 4, 7, 8, 9}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {2, 7, 8, 9}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 6), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 7, 8, 9}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 4, 7, 8, 9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {2, 7, 8, 9}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {2, 7, 8, 9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 4, 7, 8, 9}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 6 ,current depth:2


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [7, 8, 9, 1]


Trying value 7 for cell (2, 4), current depth :3


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {8, 1, 9, 7}.


The domain of cell (2, 4) is reduced to 7.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 4, 8, 9}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 4, 8, 9}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 4, 8, 9}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 4, 8, 9}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 7 ,current depth:3


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [8, 9, 1, 4]


Trying value 8 for cell (0, 4), current depth :4


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {8, 1, 4, 9}.


The domain of cell (0, 4) is reduced to 8.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 9}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 9}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 5, 6, 9}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {8, 1, 4, 9}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {1, 4, 9}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {8, 1, 4, 9}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {1, 4, 9}.


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 9}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {8, 1, 4, 9}.


Revised: The value 8 is removed from the domain of node (1, 4), Now the domain is {1, 4, 9}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (0,4).


Go deep in the search tree parent cell (0,4) with value 8 ,current depth:4


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [9, 1, 4]


Trying value 9 for cell (1, 4), current depth :5


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {1, 4, 9}.


The domain of cell (1, 4) is reduced to 9.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 5, 6}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 4, 9}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {1, 4}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 9}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {1, 4}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,4).


Go deep in the search tree parent cell (1,4) with value 9 ,current depth:5


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [1, 4]


Trying value 1 for cell (7, 4), current depth :6


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {1, 4}.


The domain of cell (7, 4) is reduced to 1.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {4}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (0, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (8, 4) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (7,4).


After make inferences we see that the domain of cell (8, 4) is {4}


Adding to board in cell :(8, 4),value :4


Go deep in the search tree parent cell (7,4) with value 1 ,current depth:6


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [2, 3, 5, 6]


Trying value 2 for cell (2, 3), current depth :7


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {2, 3, 5, 6}.


The domain of cell (2, 3) is reduced to 2.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 7}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {8, 9, 7}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {1, 3, 5, 6}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {1, 3, 5, 6}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 5, 6}.


Revised: The value 2 is removed from the domain of node (1, 3), Now the domain is {3, 4, 5, 6}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 2, 7}.


Revised: The value 2 is removed from the domain of node (3, 3), Now the domain is {8, 9, 7}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {1, 3, 5, 6}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {3, 4, 5, 6}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 0), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {1, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,3).


Go deep in the search tree parent cell (2,3) with value 2 ,current depth:7


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [7, 8, 9]


Trying value 7 for cell (3, 3), current depth :8


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {8, 9, 7}.


The domain of cell (3, 3) is reduced to 7.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {8, 9}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 7), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {3, 5, 6, 8, 9}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {3, 4, 5, 6}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {3, 5, 6, 8, 9}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {8, 9, 2, 7}.


Revised: The value 7 is removed from the domain of node (3, 5), Now the domain is {8, 9, 2}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {8, 9, 2, 7}.


Revised: The value 7 is removed from the domain of node (5, 5), Now the domain is {8, 9, 2}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {3, 4, 5, 6}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {3, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 7 ,current depth:8


MRV cell is (4, 3)


Attempting to fill cell (4, 3) with domain values: [8, 9]


Trying value 8 for cell (4, 3), current depth :9


Applying uniaray constraint.


Orginal domain of cell (4, 3) before reduction {8, 9}.


The domain of cell (4, 3) is reduced to 8.


Applying Binary constraint.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {3, 5, 6, 9}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {3, 4, 5, 6}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 3), Now the domain is {3, 5, 6, 9}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (4, 3) <---- (3, 5) ,Domain of node (3, 5) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {9, 2}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {9, 2}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {3, 4, 5, 6}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 3), Now the domain is {3, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (4,3).


Go deep in the search tree parent cell (4,3) with value 8 ,current depth:9


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [9, 2]


Trying value 9 for cell (3, 5), current depth :10


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {9, 2}.


The domain of cell (3, 5) is reduced to 9.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {1, 2, 4, 5, 6, 8}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 7), Now the domain is {1, 2, 4, 5, 6, 8}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 3, 5, 6}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 6}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 5), Now the domain is {3, 5, 6, 7, 8}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {1, 2, 4, 5, 6, 8}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 8}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {3, 5, 6, 7, 8}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 6}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 8}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 8}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {9, 2}.


Revised: The value 9 is removed from the domain of node (5, 5), Now the domain is {2}.


Domain of (5, 5) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 5) for AC- check


Add to the Queue (4, 3),(5, 5) for AC- check


Add to the Queue (5, 4),(5, 5) for AC- check


Add to the Queue (5, 1),(5, 5) for AC- check


Add to the Queue (5, 7),(5, 5) for AC- check


Add to the Queue (0, 5),(5, 5) for AC- check


Add to the Queue (2, 5),(5, 5) for AC- check


Add to the Queue (6, 5),(5, 5) for AC- check


Add to the Queue (4, 5),(5, 5) for AC- check


Add to the Queue (3, 3),(5, 5) for AC- check


Add to the Queue (5, 0),(5, 5) for AC- check


Add to the Queue (5, 6),(5, 5) for AC- check


Add to the Queue (5, 3),(5, 5) for AC- check


Add to the Queue (8, 5),(5, 5) for AC- check


Add to the Queue (1, 5),(5, 5) for AC- check


Add to the Queue (5, 2),(5, 5) for AC- check


Add to the Queue (4, 4),(5, 5) for AC- check


Add to the Queue (5, 8),(5, 5) for AC- check


Add to the Queue (7, 5),(5, 5) for AC- check


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 5), Now the domain is {3, 5, 6, 7, 8}.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {3, 4, 5, 7, 8, 9}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {3, 4, 5, 7, 8, 9}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 3, 5, 6}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 6}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {3, 4, 5, 7, 8, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 6), Now the domain is {3, 4, 5, 7, 8, 9}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 6}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {3, 5, 7, 8, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {3, 4, 5, 7, 8, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,5).


After make inferences we see that the domain of cell (5, 5) is {2}


Adding to board in cell :(5, 5),value :2


Go deep in the search tree parent cell (3,5) with value 9 ,current depth:10


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [3, 5, 6, 4]


Trying value 3 for cell (0, 3), current depth :11


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {3, 4, 5, 6}.


The domain of cell (0, 3) is reduced to 3.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 2), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {9, 5, 6}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (0, 5), Now the domain is {1, 5, 6}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 5), Now the domain is {1, 5, 6}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {3, 4, 5, 6}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {4, 5, 6}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 1), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {1, 5, 6}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {9, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {9, 5, 6}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 0), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {9, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {9, 5, 6}.


End of Binary Constraints, Checks done for cell: (0,3).


Go deep in the search tree parent cell (0,3) with value 3 ,current depth:11


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [5, 6, 1]


Trying value 5 for cell (0, 5), current depth :12


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {1, 5, 6}.


The domain of cell (0, 5) is reduced to 5.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 2), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {1, 2, 4, 6, 7, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 5, 6}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {1, 6}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {4, 5, 6}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {4, 6}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {3, 6, 7, 8}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {3, 6, 7, 8}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 1), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {1, 2, 4, 6, 7, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 5, 6}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {1, 6}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 0), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {1, 2, 4, 6, 7, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 5 ,current depth:12


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [6, 4]


Trying value 6 for cell (1, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {4, 6}.


The domain of cell (1, 3) is reduced to 6.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5, 6}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {9, 5}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 6}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {1}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (1, 5),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 6}.


Revised: The value 6 is removed from the domain of node (1, 5), Now the domain is {1}.


Domain of (1, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(1, 5) for AC- check


Add to the Queue (1, 0),(1, 5) for AC- check


Add to the Queue (1, 6),(1, 5) for AC- check


Add to the Queue (2, 5),(1, 5) for AC- check


Add to the Queue (6, 5),(1, 5) for AC- check


Add to the Queue (4, 5),(1, 5) for AC- check


Add to the Queue (8, 5),(1, 5) for AC- check


Add to the Queue (2, 4),(1, 5) for AC- check


Add to the Queue (1, 2),(1, 5) for AC- check


Add to the Queue (0, 4),(1, 5) for AC- check


Add to the Queue (1, 8),(1, 5) for AC- check


Add to the Queue (3, 5),(1, 5) for AC- check


Add to the Queue (5, 5),(1, 5) for AC- check


Add to the Queue (1, 1),(1, 5) for AC- check


Add to the Queue (0, 3),(1, 5) for AC- check


Add to the Queue (1, 4),(1, 5) for AC- check


Add to the Queue (2, 3),(1, 5) for AC- check


Add to the Queue (1, 7),(1, 5) for AC- check


Add to the Queue (7, 5),(1, 5) for AC- check


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {9, 5, 6}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {9, 5}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {9, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {9, 5}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 6, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 6, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (1, 5) ,Domain of node (1, 5) is {1}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (1,3).


Undo operation ,current depth : 13.


Remove the assigment from the board ,(1,3)=0.


No inferences made from cell (1,3) to remove it.


Trying value 4 for cell (1, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {4, 6}.


The domain of cell (1, 3) is reduced to 4.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5, 6}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 6}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 6}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {9, 5, 6}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {9, 5, 6}.


End of Binary Constraints, Checks done for cell: (1,3).


Go deep in the search tree parent cell (1,3) with value 4 ,current depth:13


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [6, 1]


Trying value 6 for cell (1, 5), current depth :14


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {1, 6}.


The domain of cell (1, 5) is reduced to 6.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 6}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {1}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {8, 3, 7}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {8, 3, 7}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 5), Now the domain is {8, 3, 7}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {1, 3, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 6), Now the domain is {3, 5, 6, 8, 9}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


End of Binary Constraints, Checks done for cell: (1,5).


After make inferences we see that the domain of cell (2, 5) is {1}


Adding to board in cell :(2, 5),value :1


Go deep in the search tree parent cell (1,5) with value 6 ,current depth:14


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [5, 6, 9]


Trying value 5 for cell (6, 3), current depth :15


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {9, 5, 6}.


The domain of cell (6, 3) is reduced to 5.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 3), Now the domain is {9, 6}.


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {9, 5, 6}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {9, 6}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 6), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


End of Binary Constraints, Checks done for cell: (6,3).


Go deep in the search tree parent cell (6,3) with value 5 ,current depth:15


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [6, 9]


Trying value 6 for cell (7, 3), current depth :16


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {9, 6}.


The domain of cell (7, 3) is reduced to 6.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 6}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {9}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 1), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 5, 7, 8, 9}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (7,3).


After make inferences we see that the domain of cell (8, 3) is {9}


Adding to board in cell :(8, 3),value :9


Go deep in the search tree parent cell (7,3) with value 6 ,current depth:16


MRV cell is (6, 5)


Attempting to fill cell (6, 5) with domain values: [3, 7, 8]


Trying value 3 for cell (6, 5), current depth :17


Applying uniaray constraint.


Orginal domain of cell (6, 5) before reduction {8, 3, 7}.


The domain of cell (6, 5) is reduced to 3.


Applying Binary constraint.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {1, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {8, 7}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 7), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {8, 7}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (6,5).


Go deep in the search tree parent cell (6,5) with value 3 ,current depth:17


MRV cell is (7, 5)


Attempting to fill cell (7, 5) with domain values: [7, 8]


Trying value 7 for cell (7, 5), current depth :18


Applying uniaray constraint.


Orginal domain of cell (7, 5) before reduction {8, 7}.


The domain of cell (7, 5) is reduced to 7.


Applying Binary constraint.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 1), Now the domain is {2, 3, 4, 5, 8, 9}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {2, 3, 4, 5, 8, 9}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 7}.


Revised: The value 7 is removed from the domain of node (8, 5), Now the domain is {8}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 5, 8, 9}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {2, 3, 4, 5, 8, 9}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {2, 3, 5, 8, 9}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 5, 8, 9}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (7,5).


After make inferences we see that the domain of cell (8, 5) is {8}


Adding to board in cell :(8, 5),value :8


Go deep in the search tree parent cell (7,5) with value 7 ,current depth:18


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [1, 2, 6, 7, 9]


Trying value 1 for cell (0, 0), current depth :19


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {1, 2, 6, 7, 9}.


The domain of cell (0, 0) is reduced to 1.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {2, 3, 6, 7, 9}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 3, 5, 6, 7}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 6, 7, 9}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (1, 0), Now the domain is {2, 3, 5, 7, 8}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 4, 6, 7, 9}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 4, 5, 6, 8}.


Revised: The value 1 is removed from the domain of node (3, 0), Now the domain is {2, 4, 5, 6, 8}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 5, 7, 8, 9}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 6, 7, 9}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 4, 6, 7, 9}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {2, 3, 5, 7, 8}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {3, 5, 6, 8, 9}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 5, 8, 9}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {2, 3, 5, 7, 8}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {3, 5, 6, 8, 9}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 4, 6, 7, 9}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,0).


Go deep in the search tree parent cell (0,0) with value 1 ,current depth:19


MRV cell is (0, 1)


Attempting to fill cell (0, 1) with domain values: [2, 6, 7, 9]


Trying value 2 for cell (0, 1), current depth :20


Applying uniaray constraint.


Orginal domain of cell (0, 1) before reduction {9, 2, 6, 7}.


The domain of cell (0, 1) is reduced to 2.


Applying Binary constraint.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 8}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 4, 5, 6, 8}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {3, 4, 5, 7, 8, 9}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {9, 6, 7}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (1, 0), Now the domain is {3, 5, 7, 8}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {4, 6, 7, 9}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {3, 4, 5, 8, 9}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 7), Now the domain is {4, 6, 7, 9}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {3, 5, 7, 8}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {3, 5, 6, 8, 9}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 6, 7, 8, 9}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {1, 3, 6, 7, 9}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {1, 3, 5, 6, 7}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (1, 1), Now the domain is {3, 5, 7, 8}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {3, 5, 6, 8, 9}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 6), Now the domain is {4, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (0,1).


Go deep in the search tree parent cell (0,1) with value 2 ,current depth:20


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [6, 7, 9]


Trying value 6 for cell (0, 2), current depth :21


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {9, 6, 7}.


The domain of cell (0, 2) is reduced to 6.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {8, 3, 5, 7}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {9, 4, 7}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {1, 7, 8, 9}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 7, 9}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 7}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {9, 4, 7}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {8, 3, 5, 7}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {3, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {3, 5, 8, 9}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 8}.


Revised: The value 6 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 8}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {3, 5, 7, 8, 9}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {8, 3, 5, 7}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {3, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {3, 5, 8, 9}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 6), Now the domain is {9, 4, 7}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 6 ,current depth:21


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [7, 9, 4]


Trying value 7 for cell (0, 6), current depth :22


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {9, 4, 7}.


The domain of cell (0, 6) is reduced to 7.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 6, 9}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {1, 2, 3, 5, 6}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 5, 8}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {9, 4}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6, 8, 9}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 6), Now the domain is {3, 4, 5, 8, 9}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 8}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {9, 4}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6, 8, 9}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 5, 8}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 5, 8, 9}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 5, 8}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6, 8, 9}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {1, 4, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 7 ,current depth:22


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [9, 4]


Trying value 9 for cell (0, 7), current depth :23


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {9, 4}.


The domain of cell (0, 7) is reduced to 9.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 6, 8}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {3, 4, 5, 7, 8}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 5, 8}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {9, 4}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {4}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {3, 5, 6, 8}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 4, 5, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {2, 3, 4, 5, 8}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {3, 5, 6, 8}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 8}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {1, 4, 6, 7, 8}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 7}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 8}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {3, 5, 6, 8}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 5, 8}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6, 8}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {1, 6, 7, 8, 9}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 7, 9}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6, 8}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 8}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 8}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {1, 2, 5, 6, 8}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {3, 4, 5, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 8), Now the domain is {3, 5, 7, 8, 9}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {3}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 8}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6, 8}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 5, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {2, 3, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {4}


Adding to board in cell :(0, 8),value :4


Go deep in the search tree parent cell (0,7) with value 9 ,current depth:23


MRV cell is (1, 0)


Attempting to fill cell (1, 0) with domain values: [3, 5, 8, 7]


Trying value 3 for cell (1, 0), current depth :24


Applying uniaray constraint.


Orginal domain of cell (1, 0) before reduction {8, 3, 5, 7}.


The domain of cell (1, 0) is reduced to 3.


Applying Binary constraint.


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {2, 6, 7, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 0), Now the domain is {2, 5, 6, 7}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 5, 8}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 5, 8}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {2, 4, 5, 6, 8}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {3, 4, 5, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {4, 5, 7, 8, 9}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (1, 2), Now the domain is {8, 5, 7}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {8, 9, 5}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 8}.


Revised: The value 3 is removed from the domain of node (1, 8), Now the domain is {1, 2, 5, 8}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 5, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {2, 4, 5, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (1, 1), Now the domain is {8, 5, 7}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {8, 9, 5}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 8}.


Revised: The value 3 is removed from the domain of node (1, 7), Now the domain is {1, 2, 5, 8}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,0).


Go deep in the search tree parent cell (1,0) with value 3 ,current depth:24


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [5, 8, 7]


Trying value 5 for cell (1, 1), current depth :25


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {8, 5, 7}.


The domain of cell (1, 1) is reduced to 5.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 4, 5, 6, 8}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {1, 4, 6, 8}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {3, 4, 5, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {3, 4, 7, 8, 9}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {8, 1, 2, 5}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {8, 1, 2}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {3, 4, 5, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 1), Now the domain is {3, 4, 8, 9}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 5, 7}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {8, 7}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {8, 9}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 6, 7, 8, 9}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {8, 1, 2, 5}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {8, 1, 2}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7, 9}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {1, 3, 6, 7}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {8, 9}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {8, 1, 2, 5}.


Revised: The value 5 is removed from the domain of node (1, 7), Now the domain is {8, 1, 2}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 5 ,current depth:25


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [8, 7]


Trying value 8 for cell (1, 2), current depth :26


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {8, 7}.


The domain of cell (1, 2) is reduced to 8.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 9, 7}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {1, 9, 7}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 7, 9}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 7}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 9}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {9}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 0),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 2, 5}.


Revised: The value 8 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {3, 5, 7, 9}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 9}.


Revised: The value 8 is removed from the domain of node (2, 0), Now the domain is {9}.


Domain of (2, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(2, 0) for AC- check


Add to the Queue (8, 0),(2, 0) for AC- check


Add to the Queue (0, 2),(2, 0) for AC- check


Add to the Queue (2, 2),(2, 0) for AC- check


Add to the Queue (1, 0),(2, 0) for AC- check


Add to the Queue (2, 5),(2, 0) for AC- check


Add to the Queue (2, 8),(2, 0) for AC- check


Add to the Queue (3, 0),(2, 0) for AC- check


Add to the Queue (5, 0),(2, 0) for AC- check


Add to the Queue (0, 1),(2, 0) for AC- check


Add to the Queue (2, 4),(2, 0) for AC- check


Add to the Queue (2, 1),(2, 0) for AC- check


Add to the Queue (2, 7),(2, 0) for AC- check


Add to the Queue (7, 0),(2, 0) for AC- check


Add to the Queue (0, 0),(2, 0) for AC- check


Add to the Queue (1, 1),(2, 0) for AC- check


Add to the Queue (2, 3),(2, 0) for AC- check


Add to the Queue (2, 6),(2, 0) for AC- check


Add to the Queue (6, 0),(2, 0) for AC- check


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (1, 7), Now the domain is {1, 2}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {2, 3, 5, 9}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4, 6}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {3, 4, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {3, 4, 7, 8}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 3, 5, 6}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 9, 3, 4}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {8, 3, 4}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 3, 5, 6}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {1, 4, 6, 7, 8}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 3, 6, 7}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 6, 7}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (2, 1) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (1,2).


Undo operation ,current depth : 26.


Remove the assigment from the board ,(1,2)=0.


No inferences made from cell (1,2) to remove it.


Trying value 7 for cell (1, 2), current depth :26


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {8, 7}.


The domain of cell (1, 2) is reduced to 7.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {8, 1, 2}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 9, 7}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {8, 1, 9}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 7, 9}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 9}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 7}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 9}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {8, 1, 2}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 2, 5}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 2), Now the domain is {3, 5, 8, 9}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 9}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {8, 1, 2}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,2).


Go deep in the search tree parent cell (1,2) with value 7 ,current depth:26


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [8, 9]


Trying value 8 for cell (2, 0), current depth :27


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {8, 9}.


The domain of cell (2, 0) is reduced to 8.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 6, 7}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 5, 6, 7}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {8, 3, 5, 6}.


Revised: The value 8 is removed from the domain of node (2, 8), Now the domain is {3, 5, 6}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {2, 4, 5, 6, 8}.


Revised: The value 8 is removed from the domain of node (3, 0), Now the domain is {2, 4, 5, 6}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {4, 5, 7, 9}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {8, 9}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {9}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {8, 3, 5, 6}.


Revised: The value 8 is removed from the domain of node (2, 7), Now the domain is {3, 5, 6}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 4, 5, 9}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {8, 3, 5, 6}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {3, 5, 6}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 0), Now the domain is {4, 6, 7, 9}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4, 6}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {3, 4, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {3, 4, 7, 8}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 9, 3, 4}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {8, 3, 4}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {1, 4, 6, 7, 8}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 3, 6, 7}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 6, 7}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


End of Binary Constraints, Checks done for cell: (2,0).


After make inferences we see that the domain of cell (2, 1) is {9}


Adding to board in cell :(2, 1),value :9


Go deep in the search tree parent cell (2,0) with value 8 ,current depth:27


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [1, 2, 8]


Trying value 1 for cell (1, 6), current depth :28


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {8, 1, 2}.


The domain of cell (1, 6) is reduced to 1.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 9}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {2, 3, 6, 9}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 5, 6}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 3, 5, 6}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 4, 5, 8, 9}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 8}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {2, 4, 5, 6, 8}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {8, 1, 2}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {8, 2}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 5, 8, 9}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {8, 1, 2}.


Revised: The value 1 is removed from the domain of node (1, 7), Now the domain is {8, 2}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {4, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 1 ,current depth:28


MRV cell is (1, 7)


Attempting to fill cell (1, 7) with domain values: [2, 8]


Trying value 2 for cell (1, 7), current depth :29


Applying uniaray constraint.


Orginal domain of cell (1, 7) before reduction {8, 2}.


The domain of cell (1, 7) is reduced to 2.


Applying Binary constraint.


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 6, 8}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 4, 5, 6, 8}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {3, 4, 5, 7, 8}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 4, 5, 8}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {3, 4, 5, 8}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {8, 2}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {8}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (1, 2),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 4, 6, 7, 8}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 3, 6, 7}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 3, 5, 6, 7}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {1, 6, 7, 9}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 7, 9}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (1, 8) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 5, 6, 8}.


Revised: The value 8 is removed from the domain of node (3, 8), Now the domain is {1, 2, 5, 6}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {3, 5, 7, 9}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {3, 5, 6}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2, 3, 5, 9}.


End of Binary Constraints, Checks done for cell: (1,7).


After make inferences we see that the domain of cell (1, 8) is {8}


Adding to board in cell :(1, 8),value :8


Go deep in the search tree parent cell (1,7) with value 2 ,current depth:29


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [3, 5, 6]


Trying value 3 for cell (2, 6), current depth :30


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {3, 5, 6}.


The domain of cell (2, 6) is reduced to 3.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {9, 2, 3, 6}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {9, 2, 6}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {2, 5, 6}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {5, 6}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3, 4, 5, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 6), Now the domain is {4, 5, 8, 9}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {2, 4, 5, 6, 8}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {3, 5, 6}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {5, 6}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 3, 4, 5, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {2, 4, 5, 8, 9}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 9, 4, 6}.


End of Binary Constraints, Checks done for cell: (2,6).


Go deep in the search tree parent cell (2,6) with value 3 ,current depth:30


MRV cell is (2, 7)


Attempting to fill cell (2, 7) with domain values: [5, 6]


Trying value 5 for cell (2, 7), current depth :31


Applying uniaray constraint.


Orginal domain of cell (2, 7) before reduction {5, 6}.


The domain of cell (2, 7) is reduced to 5.


Applying Binary constraint.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 5, 6, 8}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {1, 4, 6, 8}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {3, 4, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {3, 4, 7, 8}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {5, 6}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {6}.


Domain of (2, 8) is one value ,we need to add AC constraint.


Add to the Queue (2, 2),(2, 8) for AC- check


Add to the Queue (1, 6),(2, 8) for AC- check


Add to the Queue (0, 8),(2, 8) for AC- check


Add to the Queue (2, 5),(2, 8) for AC- check


Add to the Queue (6, 8),(2, 8) for AC- check


Add to the Queue (4, 8),(2, 8) for AC- check


Add to the Queue (8, 8),(2, 8) for AC- check


Add to the Queue (2, 4),(2, 8) for AC- check


Add to the Queue (0, 7),(2, 8) for AC- check


Add to the Queue (2, 1),(2, 8) for AC- check


Add to the Queue (1, 8),(2, 8) for AC- check


Add to the Queue (3, 8),(2, 8) for AC- check


Add to the Queue (5, 8),(2, 8) for AC- check


Add to the Queue (2, 0),(2, 8) for AC- check


Add to the Queue (0, 6),(2, 8) for AC- check


Add to the Queue (2, 3),(2, 8) for AC- check


Add to the Queue (1, 7),(2, 8) for AC- check


Add to the Queue (2, 6),(2, 8) for AC- check


Add to the Queue (7, 8),(2, 8) for AC- check


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 4, 5}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {8, 3, 4}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 4, 6, 7, 8}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 6, 7}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 7}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {1}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 7, 9, 6}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {1, 7, 9}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 7, 9}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 7}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {7}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (3, 8), Now the domain is {1, 2, 5}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {9, 3, 5, 7}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {9, 2, 3, 5}.


End of Binary Constraints, Checks done for cell: (2,7).


After make inferences we see that the domain of cell (2, 8) is {6}


Adding to board in cell :(2, 8),value :6


Go deep in the search tree parent cell (2,7) with value 5 ,current depth:31


MRV cell is (3, 8)


Attempting to fill cell (3, 8) with domain values: [1, 2, 5]


Trying value 1 for cell (3, 8), current depth :32


Applying uniaray constraint.


Orginal domain of cell (3, 8) before reduction {1, 2, 5}.


The domain of cell (3, 8) is reduced to 1.


Applying Binary constraint.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4, 6}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {8, 4, 6}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 4, 6}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {8, 4, 6}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {9, 2, 6}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {8, 3, 4, 7}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 9, 7}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {9, 7}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {2, 4, 5, 6}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {8, 9, 4, 5}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 7, 9}.


Revised: The value 1 is removed from the domain of node (4, 8), Now the domain is {2, 3, 7, 9}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {2, 4, 5, 6, 8}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 7}.


Revised: The value 1 is removed from the domain of node (8, 8), Now the domain is {2, 3, 5, 7}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 2, 5}.


Revised: The value 1 is removed from the domain of node (3, 2), Now the domain is {8, 2, 5}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {3, 6, 7}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {9, 3, 5, 7}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {9, 2, 3, 5}.


End of Binary Constraints, Checks done for cell: (3,8).


Go deep in the search tree parent cell (3,8) with value 1 ,current depth:32


MRV cell is (6, 8)


Attempting to fill cell (6, 8) with domain values: [7, 9]


Trying value 7 for cell (6, 8), current depth :33


Applying uniaray constraint.


Orginal domain of cell (6, 8) before reduction {9, 7}.


The domain of cell (6, 8) is reduced to 7.


Applying Binary constraint.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 9}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 4}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {9, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {9, 2, 3}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 3, 5, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {2, 3, 5}.


Processing (6, 8) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {1, 4, 6, 8}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {1, 4, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {1, 4, 6, 8}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5, 8, 9}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {9, 3, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {9, 3, 5}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {9, 4, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {9, 4, 6}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {8, 9, 4, 6}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {9, 2, 3, 5}.


End of Binary Constraints, Checks done for cell: (6,8).


Go deep in the search tree parent cell (6,8) with value 7 ,current depth:33


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [4, 6, 8]


Trying value 4 for cell (3, 1), current depth :34


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {8, 4, 6}.


The domain of cell (3, 1) is reduced to 4.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 6, 7}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {8, 4, 6}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {8, 6}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 4, 7}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {8, 3, 7}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 3, 4}.


Revised: The value 4 is removed from the domain of node (7, 1), Now the domain is {8, 3}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 9}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {2, 4, 5, 6}.


Revised: The value 4 is removed from the domain of node (3, 0), Now the domain is {2, 5, 6}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 4, 5, 7}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {9, 5, 7}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {2, 4, 5, 6, 8}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {2, 5, 6, 8}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 1, 4, 6}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {8, 1, 6}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {8, 2, 5}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 3, 5}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 6, 7}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 4 ,current depth:34


MRV cell is (3, 7)


Attempting to fill cell (3, 7) with domain values: [6, 8]


Trying value 6 for cell (3, 7), current depth :35


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {8, 6}.


The domain of cell (3, 7) is reduced to 6.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {9, 2, 6}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {9, 2}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 3, 4, 7}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 4}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {2, 5, 6}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {2, 5}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {8, 9, 4, 5}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {9, 2, 3}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {8, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {8, 2, 5}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 1, 4, 6}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {8, 1, 4}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {8, 2, 5}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {3, 7}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {9, 3, 5}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 3}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


End of Binary Constraints, Checks done for cell: (3,7).


Go deep in the search tree parent cell (3,7) with value 6 ,current depth:35


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [2, 5]


Trying value 2 for cell (3, 0), current depth :36


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {2, 5}.


The domain of cell (3, 0) is reduced to 2.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (4, 0), Now the domain is {9, 6, 7}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 7}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {5, 6, 7}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 9}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {1, 3, 9}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 5, 7}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {8, 5}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 2, 4, 5}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {9, 4, 5}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {8, 5}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 3, 5}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 4, 6}.


End of Binary Constraints, Checks done for cell: (3,0).


Go deep in the search tree parent cell (3,0) with value 2 ,current depth:36


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [5, 8]


Trying value 5 for cell (3, 2), current depth :37


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {8, 5}.


The domain of cell (3, 2) is reduced to 5.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {9, 6, 7}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 7}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 9}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 3, 9}.


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {9, 5, 7}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {9, 7}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {8, 5}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {8}.


Domain of (3, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 6) for AC- check


Add to the Queue (3, 1),(3, 6) for AC- check


Add to the Queue (3, 7),(3, 6) for AC- check


Add to the Queue (4, 6),(3, 6) for AC- check


Add to the Queue (5, 7),(3, 6) for AC- check


Add to the Queue (8, 6),(3, 6) for AC- check


Add to the Queue (1, 6),(3, 6) for AC- check


Add to the Queue (3, 0),(3, 6) for AC- check


Add to the Queue (3, 3),(3, 6) for AC- check


Add to the Queue (5, 6),(3, 6) for AC- check


Add to the Queue (4, 8),(3, 6) for AC- check


Add to the Queue (7, 6),(3, 6) for AC- check


Add to the Queue (4, 7),(3, 6) for AC- check


Add to the Queue (3, 5),(3, 6) for AC- check


Add to the Queue (3, 8),(3, 6) for AC- check


Add to the Queue (5, 8),(3, 6) for AC- check


Add to the Queue (0, 6),(3, 6) for AC- check


Add to the Queue (2, 6),(3, 6) for AC- check


Add to the Queue (6, 6),(3, 6) for AC- check


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 3, 5}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {8, 9, 3}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 5, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {2, 3, 8, 9}.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {3}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {9, 2}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 3, 4, 7}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {3, 4, 7}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {8, 9, 4, 5}.


Revised: The value 8 is removed from the domain of node (5, 6), Now the domain is {9, 4, 5}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {9, 2, 3}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {2, 4, 5, 9}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {3, 7}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {9}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {9, 3, 5}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 9, 4, 6}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {9, 4, 6}.


End of Binary Constraints, Checks done for cell: (3,2).


After make inferences we see that the domain of cell (3, 6) is {8}


Adding to board in cell :(3, 6),value :8


Go deep in the search tree parent cell (3,2) with value 5 ,current depth:37


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [9, 2]


Trying value 9 for cell (4, 6), current depth :38


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {9, 2}.


The domain of cell (4, 6) is reduced to 9.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {9, 6, 7}.


Revised: The value 9 is removed from the domain of node (4, 0), Now the domain is {6, 7}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {3, 4, 7}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {1, 3, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {1, 3}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {9, 4, 5}.


Revised: The value 9 is removed from the domain of node (5, 6), Now the domain is {4, 5}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {9, 2, 3}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {2, 3}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {9, 2, 4, 5}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {2, 4, 5}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {3, 7}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {9, 3, 5}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {3, 5}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 6}.


Revised: The value 9 is removed from the domain of node (6, 6), Now the domain is {4, 6}.


End of Binary Constraints, Checks done for cell: (4,6).


Go deep in the search tree parent cell (4,6) with value 9 ,current depth:38


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [7, 6]


Trying value 7 for cell (4, 0), current depth :39


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {6, 7}.


The domain of cell (4, 0) is reduced to 7.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 3, 7}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {8, 3}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {5, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {5, 6}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 3}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 7}.


Revised: The value 7 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {2, 3}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 4, 5}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {1, 3, 6}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {3, 7}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {3}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (4, 8),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 3}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 4, 6}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {3, 4, 7}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {5, 6}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 3}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {4, 5}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 4, 5}.


Revised: The value 9 is removed from the domain of node (7, 0), Now the domain is {4, 5}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 3}.


Revised: The value 9 is removed from the domain of node (5, 2), Now the domain is {8, 3}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {3, 5}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 4, 6}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {4, 6}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {3, 4, 7}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {4, 7}.


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 4}.


Revised: The value 3 is removed from the domain of node (7, 7), Now the domain is {8, 4}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {1, 3}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {4, 5}.


Processing (4, 7) <---- (4, 8) ,Domain of node (4, 8) is {2, 3}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {2}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 1, 4}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {1, 3, 6}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 6}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {3, 5}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {5}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (5, 7),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {1}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (8, 1),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 9}.


Revised: The value 1 is removed from the domain of node (6, 2), Now the domain is {8, 9}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {2, 3}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 6}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {6}.


Domain of (4, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 1) for AC- check


Add to the Queue (4, 3),(4, 1) for AC- check


Add to the Queue (3, 1),(4, 1) for AC- check


Add to the Queue (4, 6),(4, 1) for AC- check


Add to the Queue (5, 1),(4, 1) for AC- check


Add to the Queue (7, 1),(4, 1) for AC- check


Add to the Queue (3, 0),(4, 1) for AC- check


Add to the Queue (4, 5),(4, 1) for AC- check


Add to the Queue (5, 0),(4, 1) for AC- check


Add to the Queue (4, 8),(4, 1) for AC- check


Add to the Queue (0, 1),(4, 1) for AC- check


Add to the Queue (2, 1),(4, 1) for AC- check


Add to the Queue (6, 1),(4, 1) for AC- check


Add to the Queue (3, 2),(4, 1) for AC- check


Add to the Queue (4, 7),(4, 1) for AC- check


Add to the Queue (5, 2),(4, 1) for AC- check


Add to the Queue (4, 4),(4, 1) for AC- check


Add to the Queue (8, 1),(4, 1) for AC- check


Add to the Queue (1, 1),(4, 1) for AC- check


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 2, 3}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (4, 8) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {4, 7}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {4, 5}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 3, 5}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {3, 5}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {9, 2, 3, 5}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {9, 3, 5}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (5, 8) <---- (5, 7) ,Domain of node (5, 7) is {4, 7}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {4, 5}.


Revised: The value 5 is removed from the domain of node (5, 6), Now the domain is {4}.


Domain of (5, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 6) for AC- check


Add to the Queue (5, 4),(5, 6) for AC- check


Add to the Queue (4, 6),(5, 6) for AC- check


Add to the Queue (5, 1),(5, 6) for AC- check


Add to the Queue (5, 7),(5, 6) for AC- check


Add to the Queue (8, 6),(5, 6) for AC- check


Add to the Queue (1, 6),(5, 6) for AC- check


Add to the Queue (5, 0),(5, 6) for AC- check


Add to the Queue (4, 8),(5, 6) for AC- check


Add to the Queue (3, 6),(5, 6) for AC- check


Add to the Queue (5, 3),(5, 6) for AC- check


Add to the Queue (7, 6),(5, 6) for AC- check


Add to the Queue (4, 7),(5, 6) for AC- check


Add to the Queue (5, 2),(5, 6) for AC- check


Add to the Queue (3, 8),(5, 6) for AC- check


Add to the Queue (5, 5),(5, 6) for AC- check


Add to the Queue (0, 6),(5, 6) for AC- check


Add to the Queue (2, 6),(5, 6) for AC- check


Add to the Queue (6, 6),(5, 6) for AC- check


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {3, 5}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {3}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Add to the Queue (7, 8),(8, 8) for AC- check


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {9, 3, 5}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {9, 3}.


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {5, 6}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {4, 7}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {2, 3}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {8}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {3}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 1, 4}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {8, 4}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 7) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {3, 6, 7}.


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {4, 6}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {9, 3}.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {8}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 1, 6}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {8, 1}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {3}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {5}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {3, 7}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {4, 7}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {7}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (4, 6),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (2, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (4, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5}.


Revised: The value 4 is removed from the domain of node (7, 6), Now the domain is {2, 5}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {3}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 6}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {6}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (7, 6),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {5, 6}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {2, 3}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {2}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (6, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (7, 2),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {8}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {8, 4}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {2, 5}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {3, 7}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {7}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (8, 8) <---- (7, 8) ,Domain of node (7, 8) is {9, 3}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {9}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 4}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {3}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Revised: The value 6 is removed from the domain of node (8, 6), Now the domain is {2, 5}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {8, 9}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {3}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {8, 1}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {8, 4}.


Processing (6, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 5}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {4, 6}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {4}.


Domain of (6, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(6, 0) for AC- check


Add to the Queue (8, 0),(6, 0) for AC- check


Add to the Queue (1, 0),(6, 0) for AC- check


Add to the Queue (6, 2),(6, 0) for AC- check


Add to the Queue (7, 1),(6, 0) for AC- check


Add to the Queue (6, 5),(6, 0) for AC- check


Add to the Queue (6, 8),(6, 0) for AC- check


Add to the Queue (3, 0),(6, 0) for AC- check


Add to the Queue (5, 0),(6, 0) for AC- check


Add to the Queue (8, 2),(6, 0) for AC- check


Add to the Queue (6, 1),(6, 0) for AC- check


Add to the Queue (7, 0),(6, 0) for AC- check


Add to the Queue (6, 4),(6, 0) for AC- check


Add to the Queue (6, 7),(6, 0) for AC- check


Add to the Queue (0, 0),(6, 0) for AC- check


Add to the Queue (8, 1),(6, 0) for AC- check


Add to the Queue (2, 0),(6, 0) for AC- check


Add to the Queue (7, 2),(6, 0) for AC- check


Add to the Queue (6, 3),(6, 0) for AC- check


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {9}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {5, 6}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {2, 5}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {5}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(8, 6) for AC- check


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 9}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {8}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {8, 1}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {4, 5}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 2, 3}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {8, 9, 3}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {5, 6}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {8, 9}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {8}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 1}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {4, 5}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 1) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 3}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {4}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {6}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {2}.


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {4, 5}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {8}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {8, 4}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {2, 5}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 3}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {8, 3}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {5, 6}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {8, 9}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {8, 1}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {4, 5}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {5}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (7, 7),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {8, 4}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {8}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (6, 2),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (8, 6) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {5, 6}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {6}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(8, 0) for AC- check


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (5, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {8}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {3}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 5}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {2}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {9}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {6}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {8, 9}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (7, 0) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {8, 1}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {9}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {7}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (6, 7) <---- (6, 2) ,Domain of node (6, 2) is {8, 9}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {9}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (6, 8),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 4),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (7, 2),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 6),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 4}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {4}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {3}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {8, 1}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {1}.


Domain of (6, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(6, 1) for AC- check


Add to the Queue (5, 1),(6, 1) for AC- check


Add to the Queue (8, 0),(6, 1) for AC- check


Add to the Queue (6, 2),(6, 1) for AC- check


Add to the Queue (7, 1),(6, 1) for AC- check


Add to the Queue (6, 5),(6, 1) for AC- check


Add to the Queue (6, 8),(6, 1) for AC- check


Add to the Queue (8, 2),(6, 1) for AC- check


Add to the Queue (0, 1),(6, 1) for AC- check


Add to the Queue (2, 1),(6, 1) for AC- check


Add to the Queue (7, 0),(6, 1) for AC- check


Add to the Queue (6, 4),(6, 1) for AC- check


Add to the Queue (4, 1),(6, 1) for AC- check


Add to the Queue (8, 1),(6, 1) for AC- check


Add to the Queue (1, 1),(6, 1) for AC- check


Add to the Queue (7, 2),(6, 1) for AC- check


Add to the Queue (6, 0),(6, 1) for AC- check


Add to the Queue (6, 6),(6, 1) for AC- check


Add to the Queue (6, 3),(6, 1) for AC- check


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {3}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {9}.


Processing (8, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {9}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {3}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {9}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (8, 0) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {8}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {3}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {5}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {8}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {9}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {8}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {3}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {5}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {8}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {3}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {9}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {6}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {5}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {6}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {7}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {9}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {3}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {5}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {3}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {9}.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 3}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {6}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {9}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {5}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {6}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (4,0).


After make inferences we see that the domain of cell (4, 1) is {6}


After make inferences we see that the domain of cell (4, 2) is {1}


After make inferences we see that the domain of cell (4, 7) is {3}


After make inferences we see that the domain of cell (4, 8) is {2}


After make inferences we see that the domain of cell (5, 0) is {9}


After make inferences we see that the domain of cell (5, 6) is {4}


After make inferences we see that the domain of cell (5, 7) is {7}


After make inferences we see that the domain of cell (5, 8) is {5}


After make inferences we see that the domain of cell (6, 0) is {4}


After make inferences we see that the domain of cell (6, 1) is {1}


After make inferences we see that the domain of cell (6, 2) is {9}


After make inferences we see that the domain of cell (6, 6) is {6}


After make inferences we see that the domain of cell (6, 7) is {8}


After make inferences we see that the domain of cell (7, 0) is {5}


After make inferences we see that the domain of cell (7, 6) is {2}


After make inferences we see that the domain of cell (7, 7) is {4}


After make inferences we see that the domain of cell (7, 8) is {9}


After make inferences we see that the domain of cell (8, 0) is {6}


After make inferences we see that the domain of cell (8, 1) is {7}


After make inferences we see that the domain of cell (8, 2) is {2}


After make inferences we see that the domain of cell (8, 6) is {5}


After make inferences we see that the domain of cell (8, 7) is {1}


After make inferences we see that the domain of cell (8, 8) is {3}


Adding to board in cell :(4, 1),value :6


Adding to board in cell :(4, 2),value :1


Adding to board in cell :(4, 7),value :3


Adding to board in cell :(4, 8),value :2


Adding to board in cell :(5, 0),value :9


Adding to board in cell :(5, 6),value :4


Adding to board in cell :(5, 7),value :7


Adding to board in cell :(5, 8),value :5


Adding to board in cell :(6, 0),value :4


Adding to board in cell :(6, 1),value :1


Adding to board in cell :(6, 2),value :9


Adding to board in cell :(6, 6),value :6


Adding to board in cell :(6, 7),value :8


Adding to board in cell :(7, 0),value :5


Adding to board in cell :(7, 6),value :2


Adding to board in cell :(7, 7),value :4


Adding to board in cell :(7, 8),value :9


Adding to board in cell :(8, 0),value :6


Adding to board in cell :(8, 1),value :7


Adding to board in cell :(8, 2),value :2


Adding to board in cell :(8, 6),value :5


Adding to board in cell :(8, 7),value :1


Adding to board in cell :(8, 8),value :3


Go deep in the search tree parent cell (4,0) with value 7 ,current depth:39


MRV cell is (5, 1)


Attempting to fill cell (5, 1) with domain values: [3, 8]


Trying value 3 for cell (5, 1), current depth :40


Applying uniaray constraint.


Orginal domain of cell (5, 1) before reduction {8, 3}.


The domain of cell (5, 1) is reduced to 3.


Applying Binary constraint.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {7}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 3}.


Revised: The value 3 is removed from the domain of node (7, 1), Now the domain is {8}.


Domain of (7, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(7, 1) for AC- check


Add to the Queue (8, 0),(7, 1) for AC- check


Add to the Queue (7, 4),(7, 1) for AC- check


Add to the Queue (6, 2),(7, 1) for AC- check


Add to the Queue (7, 7),(7, 1) for AC- check


Add to the Queue (8, 2),(7, 1) for AC- check


Add to the Queue (0, 1),(7, 1) for AC- check


Add to the Queue (2, 1),(7, 1) for AC- check


Add to the Queue (6, 1),(7, 1) for AC- check


Add to the Queue (7, 0),(7, 1) for AC- check


Add to the Queue (7, 3),(7, 1) for AC- check


Add to the Queue (7, 6),(7, 1) for AC- check


Add to the Queue (4, 1),(7, 1) for AC- check


Add to the Queue (8, 1),(7, 1) for AC- check


Add to the Queue (1, 1),(7, 1) for AC- check


Add to the Queue (7, 2),(7, 1) for AC- check


Add to the Queue (6, 0),(7, 1) for AC- check


Add to the Queue (7, 5),(7, 1) for AC- check


Add to the Queue (7, 8),(7, 1) for AC- check


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 3}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {8}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {6}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {9}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {2}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {9}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {5}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 3}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {3}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (4, 2),(7, 2) for AC- check


Add to the Queue (8, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {9}.


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {7}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {9}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 2) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {4}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {6}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {6}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {9}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {4}.


Processing (7, 2) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {7}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {1}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {5}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {2}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {5}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {8}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {7}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {9}.


End of Binary Constraints, Checks done for cell: (5,1).


After make inferences we see that the domain of cell (5, 2) is {8}


After make inferences we see that the domain of cell (7, 1) is {8}


After make inferences we see that the domain of cell (7, 2) is {3}


Adding to board in cell :(5, 2),value :8


Adding to board in cell :(7, 1),value :8


Adding to board in cell :(7, 2),value :3


Go deep in the search tree parent cell (5,1) with value 3 ,current depth:40


MRV cell is None


End of applying Backtracking.


after make cell (5,6) = 3


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (2, 2) is reduced to 4.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


The domain of cell (5, 6) is reduced to 3.


The domain of cell (6, 4) is reduced to 2.


Apply Binary constraint to the Initial Board


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (5,6) are [(3, 7), (5, 4), (4, 6), (5, 1), (5, 7), (8, 6), (1, 6), (5, 0), (4, 8), (3, 6), (5, 3), (7, 6), (4, 7), (5, 2), (3, 8), (5, 5), (5, 8), (0, 6), (2, 6), (6, 6)]


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


All posible arcs to (6,4) are [(3, 4), (5, 4), (8, 3), (7, 4), (6, 2), (6, 5), (6, 8), (8, 5), (2, 4), (0, 4), (6, 1), (7, 3), (6, 7), (4, 4), (8, 4), (1, 4), (6, 0), (6, 6), (7, 5), (6, 3)]


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (1, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (1, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (1, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {2, 3, 5, 6, 7, 8, 9}, (3, 4): {3, 5, 6, 7, 8, 9}, (3, 5): {2, 3, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 4, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 5, 6, 7, 8, 9}, (5, 0): {2, 4, 5, 6, 7, 8, 9}, (5, 1): {2, 4, 5, 6, 7, 8, 9}, (5, 2): {2, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {5, 6, 7, 8, 9}, (5, 5): {2, 5, 6, 7, 8, 9}, (5, 6): {3}, (5, 7): {2, 4, 5, 6, 7, 8, 9}, (5, 8): {2, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 1): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 2): {1, 3, 5, 6, 7, 8, 9}, (6, 3): {3, 4, 5, 6, 7, 8, 9}, (6, 4): {2}, (6, 5): {1, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 8): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 3): {3, 4, 5, 6, 7, 8, 9}, (7, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 5): {1, 3, 5, 6, 7, 8, 9}, (7, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 3): {3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (5, 4), current depth :0


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {5, 6, 7, 8, 9}.


The domain of cell (5, 4) is reduced to 5.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 4), Now the domain is {3, 6, 7, 8, 9}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 4), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {2, 6, 7, 8, 9}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 4), Now the domain is {3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 5), Now the domain is {2, 6, 7, 8, 9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 5 ,current depth:0


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [6, 7, 8, 9, 3]


Trying value 6 for cell (3, 4), current depth :1


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {3, 6, 7, 8, 9}.


The domain of cell (3, 4) is reduced to 6.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 3, 7, 8, 9}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {3, 7, 8, 9}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {2, 7, 8, 9}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 6 ,current depth:1


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [7, 8, 9, 3]


Trying value 7 for cell (4, 4), current depth :2


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {8, 9, 3, 7}.


The domain of cell (4, 4) is reduced to 7.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {2, 3, 8, 9}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 3), Now the domain is {2, 3, 8, 9}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 3, 8, 9}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 5), Now the domain is {2, 3, 8, 9}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {8, 9, 2, 7}.


Revised: The value 7 is removed from the domain of node (5, 5), Now the domain is {8, 9, 2}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 3, 4, 8, 9}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 7 ,current depth:2


MRV cell is (5, 5)


Attempting to fill cell (5, 5) with domain values: [8, 9, 2]


Trying value 8 for cell (5, 5), current depth :3


Applying uniaray constraint.


Orginal domain of cell (5, 5) before reduction {8, 9, 2}.


The domain of cell (5, 5) is reduced to 8.


Applying Binary constraint.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 3}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {9, 2, 3}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 7, 9}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {2, 4, 6, 7, 9}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 2, 3}.


Revised: The value 8 is removed from the domain of node (3, 3), Now the domain is {9, 2, 3}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (3, 5) ,Domain of node (3, 5) is {8, 9, 2, 3}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {9, 2, 3}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {2, 6, 7, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 7, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (5,5).


Go deep in the search tree parent cell (5,5) with value 8 ,current depth:3


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [9, 2, 3]


Trying value 9 for cell (3, 3), current depth :4


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {9, 2, 3}.


The domain of cell (3, 3) is reduced to 9.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {9, 2, 3}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {2, 3}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 7), Now the domain is {1, 2, 4, 5, 7, 8}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 7, 8}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {9, 2, 3}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {2, 3}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 7, 8}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 9 ,current depth:4


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [2, 3]


Trying value 2 for cell (3, 5), current depth :5


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {2, 3}.


The domain of cell (3, 5) is reduced to 2.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {2, 3}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {3}.


Domain of (4, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 3) for AC- check


Add to the Queue (3, 4),(4, 3) for AC- check


Add to the Queue (5, 4),(4, 3) for AC- check


Add to the Queue (4, 6),(4, 3) for AC- check


Add to the Queue (8, 3),(4, 3) for AC- check


Add to the Queue (1, 3),(4, 3) for AC- check


Add to the Queue (4, 2),(4, 3) for AC- check


Add to the Queue (4, 5),(4, 3) for AC- check


Add to the Queue (3, 3),(4, 3) for AC- check


Add to the Queue (4, 8),(4, 3) for AC- check


Add to the Queue (5, 3),(4, 3) for AC- check


Add to the Queue (7, 3),(4, 3) for AC- check


Add to the Queue (4, 1),(4, 3) for AC- check


Add to the Queue (4, 7),(4, 3) for AC- check


Add to the Queue (4, 4),(4, 3) for AC- check


Add to the Queue (5, 5),(4, 3) for AC- check


Add to the Queue (0, 3),(4, 3) for AC- check


Add to the Queue (2, 3),(4, 3) for AC- check


Add to the Queue (6, 3),(4, 3) for AC- check


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 4, 5, 7, 8}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {1, 4, 5, 7, 8}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 3, 5, 7, 8}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 8), Now the domain is {1, 4, 5, 7, 8}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 9}.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {4, 5, 6, 7, 8}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {2, 4, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {4, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 7, 8}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 7, 8}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,5).


After make inferences we see that the domain of cell (4, 3) is {3}


Adding to board in cell :(4, 3),value :3


Go deep in the search tree parent cell (3,5) with value 2 ,current depth:5


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [1, 8, 9, 3]


Trying value 1 for cell (2, 4), current depth :6


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {8, 1, 3, 9}.


The domain of cell (2, 4) is reduced to 1.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 4, 5, 6, 7, 8}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 4), Now the domain is {3, 4, 8, 9}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {3, 4, 8, 9}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {3, 4, 8, 9}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7, 8}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 4), Now the domain is {3, 4, 8, 9}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7, 8}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 6), Now the domain is {2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 1 ,current depth:6


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [8, 9, 3, 4]


Trying value 8 for cell (0, 4), current depth :7


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {8, 9, 3, 4}.


The domain of cell (0, 4) is reduced to 8.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {3, 5, 6, 7, 9}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {3, 5, 6, 7, 9}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 4, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (1, 3), Now the domain is {2, 4, 5, 6, 7}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {8, 9, 3, 4}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {9, 3, 4}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {3, 5, 6, 7, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {8, 9, 3, 4}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {9, 3, 4}.


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 7}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {8, 9, 3, 4}.


Revised: The value 8 is removed from the domain of node (1, 4), Now the domain is {9, 3, 4}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 6), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,4).


Go deep in the search tree parent cell (0,4) with value 8 ,current depth:7


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [9, 3, 4]


Trying value 9 for cell (1, 4), current depth :8


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {9, 3, 4}.


The domain of cell (1, 4) is reduced to 9.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (0, 5), Now the domain is {3, 5, 6, 7}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {3, 5, 6, 7}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 4, 5, 6, 7}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {9, 3, 4}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {3, 4}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {3, 5, 6, 7}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {9, 3, 4}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {3, 4}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,4).


Go deep in the search tree parent cell (1,4) with value 9 ,current depth:8


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [3, 4]


Trying value 3 for cell (7, 4), current depth :9


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {3, 4}.


The domain of cell (7, 4) is reduced to 3.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {4, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 7), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (6, 5), Now the domain is {1, 5, 6, 7, 9}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {1, 5, 6, 7, 9}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {4, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {3, 4}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {4}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (0, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {1, 5, 6, 7, 9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {4, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {5, 6, 7, 8}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 5, 6, 7, 9}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 5, 6, 7, 9}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (8, 4) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {5, 6, 7, 8}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 5, 6, 7, 9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (7,4).


After make inferences we see that the domain of cell (8, 4) is {4}


Adding to board in cell :(8, 4),value :4


Go deep in the search tree parent cell (7,4) with value 3 ,current depth:9


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [5, 6, 7, 3]


Trying value 5 for cell (0, 5), current depth :10


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {3, 5, 6, 7}.


The domain of cell (0, 5) is reduced to 5.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {3, 6, 7}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {2, 4, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {2, 4, 6, 7}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {1, 6, 7, 9}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {1, 6, 7, 9}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {3, 6, 7}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {2, 4, 6, 7}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {1, 2, 4, 6, 7, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {2, 6, 7}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 5 ,current depth:10


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [6, 7, 3]


Trying value 6 for cell (1, 5), current depth :11


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {3, 6, 7}.


The domain of cell (1, 5) is reduced to 6.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 4, 5, 7, 8}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {3, 7}.


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {2, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (1, 3), Now the domain is {2, 4, 7}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {1, 9, 7}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {1, 9, 7}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 3), Now the domain is {2, 4, 7}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {2, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {2, 7}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 5), Now the domain is {1, 9, 7}.


End of Binary Constraints, Checks done for cell: (1,5).


Go deep in the search tree parent cell (1,5) with value 6 ,current depth:11


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [7, 2]


Trying value 7 for cell (2, 3), current depth :12


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {2, 7}.


The domain of cell (2, 3) is reduced to 7.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {8, 5, 6}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {3, 7}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {3}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (1, 5),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 4, 7}.


Revised: The value 7 is removed from the domain of node (1, 3), Now the domain is {2, 4}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {2, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {2, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {2, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {8, 5, 6}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 3), Now the domain is {2, 4}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {2, 3, 5, 6, 8, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 6), Now the domain is {2, 5, 6, 8, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {8, 5, 6}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {2, 4}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {2, 5, 6, 8, 9}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {2, 5, 6, 8, 9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {2, 5, 6, 8, 9}.


Processing (2, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {2, 5, 6, 8, 9}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {2, 5, 6, 8, 9}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 7}.


End of Binary Constraints, Checks done for cell: (2,3).


After make inferences we see that the domain of cell (2, 5) is {3}


Adding to board in cell :(2, 5),value :3


Go deep in the search tree parent cell (2,3) with value 7 ,current depth:12


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [2, 4]


Trying value 2 for cell (0, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {2, 4}.


The domain of cell (0, 3) is reduced to 2.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {1, 3, 6, 7, 9}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 6}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 4}.


Revised: The value 2 is removed from the domain of node (1, 3), Now the domain is {4}.


Domain of (1, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(1, 3) for AC- check


Add to the Queue (8, 3),(1, 3) for AC- check


Add to the Queue (0, 5),(1, 3) for AC- check


Add to the Queue (1, 0),(1, 3) for AC- check


Add to the Queue (1, 6),(1, 3) for AC- check


Add to the Queue (2, 5),(1, 3) for AC- check


Add to the Queue (3, 3),(1, 3) for AC- check


Add to the Queue (5, 3),(1, 3) for AC- check


Add to the Queue (2, 4),(1, 3) for AC- check


Add to the Queue (1, 2),(1, 3) for AC- check


Add to the Queue (0, 4),(1, 3) for AC- check


Add to the Queue (1, 5),(1, 3) for AC- check


Add to the Queue (1, 8),(1, 3) for AC- check


Add to the Queue (7, 3),(1, 3) for AC- check


Add to the Queue (1, 1),(1, 3) for AC- check


Add to the Queue (1, 4),(1, 3) for AC- check


Add to the Queue (2, 3),(1, 3) for AC- check


Add to the Queue (1, 7),(1, 3) for AC- check


Add to the Queue (6, 3),(1, 3) for AC- check


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 1), Now the domain is {1, 3, 6, 7, 9}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 7), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 6}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 0), Now the domain is {1, 3, 6, 7, 9}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 6), Now the domain is {1, 4, 6, 7, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5, 6}.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 6}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 5, 7, 8}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 6}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5, 6}.


End of Binary Constraints, Checks done for cell: (0,3).


After make inferences we see that the domain of cell (1, 3) is {4}


Adding to board in cell :(1, 3),value :4


Go deep in the search tree parent cell (0,3) with value 2 ,current depth:13


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [5, 6, 8]


Trying value 5 for cell (6, 3), current depth :14


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {8, 5, 6}.


The domain of cell (6, 3) is reduced to 5.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 3), Now the domain is {8, 6}.


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 7}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 7}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 6}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {8, 6}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 6), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 7}.


End of Binary Constraints, Checks done for cell: (6,3).


Go deep in the search tree parent cell (6,3) with value 5 ,current depth:14


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [6, 8]


Trying value 6 for cell (7, 3), current depth :15


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {8, 6}.


The domain of cell (7, 3) is reduced to 6.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 6}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {8}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 7}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 7, 8, 9}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 7}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 7}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (7,3).


After make inferences we see that the domain of cell (8, 3) is {8}


Adding to board in cell :(8, 3),value :8


Go deep in the search tree parent cell (7,3) with value 6 ,current depth:15


MRV cell is (6, 5)


Attempting to fill cell (6, 5) with domain values: [1, 7, 9]


Trying value 1 for cell (6, 5), current depth :16


Applying uniaray constraint.


Orginal domain of cell (6, 5) before reduction {1, 9, 7}.


The domain of cell (6, 5) is reduced to 1.


Applying Binary constraint.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 2), Now the domain is {3, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 7}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {9, 7}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {4, 6, 7, 8, 9}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 7}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {9, 7}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (6,5).


Go deep in the search tree parent cell (6,5) with value 1 ,current depth:16


MRV cell is (7, 5)


Attempting to fill cell (7, 5) with domain values: [7, 9]


Trying value 7 for cell (7, 5), current depth :17


Applying uniaray constraint.


Orginal domain of cell (7, 5) before reduction {9, 7}.


The domain of cell (7, 5) is reduced to 7.


Applying Binary constraint.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {9, 7}.


Revised: The value 7 is removed from the domain of node (8, 5), Now the domain is {9}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 8, 9}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (7,5).


After make inferences we see that the domain of cell (8, 5) is {9}


Adding to board in cell :(8, 5),value :9


Go deep in the search tree parent cell (7,5) with value 7 ,current depth:17


MRV cell is (5, 2)


Attempting to fill cell (5, 2) with domain values: [2, 6, 7, 9]


Trying value 2 for cell (5, 2), current depth :18


Applying uniaray constraint.


Orginal domain of cell (5, 2) before reduction {9, 2, 6, 7}.


The domain of cell (5, 2) is reduced to 2.


Applying Binary constraint.


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 0), Now the domain is {1, 5, 6, 8, 9}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 2) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {4, 6, 7, 9}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {4, 6, 7, 9}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 3, 6, 7, 9}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7, 8, 9}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {1, 5, 6, 8, 9}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 5, 7, 8}.


Processing (5, 2) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {4, 6, 7, 9}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {1, 3, 5, 6, 7}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {1, 3, 5, 7, 8}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 5, 7, 8}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {1, 5, 6, 8, 9}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {4, 6, 7, 9}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {1, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,2).


Go deep in the search tree parent cell (5,2) with value 2 ,current depth:18


MRV cell is (5, 0)


Attempting to fill cell (5, 0) with domain values: [6, 7, 9, 4]


Trying value 6 for cell (5, 0), current depth :19


Applying uniaray constraint.


Orginal domain of cell (5, 0) before reduction {9, 4, 6, 7}.


The domain of cell (5, 0) is reduced to 6.


Applying Binary constraint.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 0), Now the domain is {1, 5, 8, 9}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {9, 4, 7}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {9, 4, 7}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 7}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 7, 8}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {1, 5, 8, 9}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 5, 7, 8}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 8, 9}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 5, 7, 8}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 1), Now the domain is {1, 5, 8, 9}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {9, 4, 7}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {1, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (0, 0), Now the domain is {1, 3, 7, 9}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {2, 5, 8, 9}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {3, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,0).


Go deep in the search tree parent cell (5,0) with value 6 ,current depth:19


MRV cell is (5, 1)


Attempting to fill cell (5, 1) with domain values: [7, 9, 4]


Trying value 7 for cell (5, 1), current depth :20


Applying uniaray constraint.


Orginal domain of cell (5, 1) before reduction {9, 4, 7}.


The domain of cell (5, 1) is reduced to 7.


Applying Binary constraint.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 5, 9}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 8}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {9, 4}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 8, 9}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 5, 9}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 5, 8}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {1, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (0, 1), Now the domain is {1, 3, 6, 9}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {2, 5, 6, 8, 9}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {3, 4, 6, 8, 9}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 3, 5, 8}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 5, 9}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {9, 4}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 8}.


End of Binary Constraints, Checks done for cell: (5,1).


Go deep in the search tree parent cell (5,1) with value 7 ,current depth:20


MRV cell is (5, 7)


Attempting to fill cell (5, 7) with domain values: [9, 4]


Trying value 9 for cell (5, 7), current depth :21


Applying uniaray constraint.


Orginal domain of cell (5, 7) before reduction {9, 4}.


The domain of cell (5, 7) is reduced to 9.


Applying Binary constraint.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 5, 7, 8}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 8}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 5, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {1, 2, 4, 5, 8}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 8}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 7, 8}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {1, 3, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {1, 3, 4, 6, 7}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {2, 5, 6, 8}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {3, 4, 6, 7, 8}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 8}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {1, 4, 5, 7, 8}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {9, 4}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {4}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 7, 8}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {1, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {1, 5, 7, 8}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 8}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {1, 3, 4, 6, 7, 9}.


Revised: The value 4 is removed from the domain of node (0, 8), Now the domain is {1, 3, 6, 7, 9}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {2, 5, 6, 8, 9}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {3, 6, 7, 8, 9}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {1, 5, 7, 8}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 7, 8}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 8}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 4, 5, 7, 8}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {1, 5, 7, 8}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 5, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {1, 2, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,7).


After make inferences we see that the domain of cell (5, 8) is {4}


Adding to board in cell :(5, 8),value :4


Go deep in the search tree parent cell (5,7) with value 9 ,current depth:21


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [1, 3, 9, 7]


Trying value 1 for cell (0, 0), current depth :22


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {1, 3, 9, 7}.


The domain of cell (0, 0) is reduced to 1.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 5, 9}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {8, 5, 9}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 7}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 3, 5, 7}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 3, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {3, 6, 7, 9}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (1, 0), Now the domain is {2, 3, 5, 7, 8}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {1, 3, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {3, 6, 7, 9}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 5, 8}.


Revised: The value 1 is removed from the domain of node (3, 0), Now the domain is {3, 4, 5, 8}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 3, 6, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {3, 6, 9}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {1, 3, 4, 6, 7}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {3, 4, 6, 7}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 3, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {3, 5, 7, 8}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {2, 5, 6, 8, 9}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 4, 5, 8, 9}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 8}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {2, 3, 5, 8}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 2, 5}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {1, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {4, 6, 7, 9}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,0).


Go deep in the search tree parent cell (0,0) with value 1 ,current depth:22


MRV cell is (0, 1)


Attempting to fill cell (0, 1) with domain values: [3, 9, 6]


Trying value 3 for cell (0, 1), current depth :23


Applying uniaray constraint.


Orginal domain of cell (0, 1) before reduction {9, 3, 6}.


The domain of cell (0, 1) is reduced to 3.


Applying Binary constraint.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 8}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {1, 4, 5, 8}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {9, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (0, 2), Now the domain is {9, 6, 7}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {2, 3, 5, 7, 8}.


Revised: The value 3 is removed from the domain of node (1, 0), Now the domain is {2, 5, 7, 8}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {9, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {9, 6, 7}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 8, 9}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {3, 4, 6, 7}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {4, 6, 7}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (1, 2), Now the domain is {8, 5, 7}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {2, 5, 6, 8, 9}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {4, 6, 8, 9}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 5, 9}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {1, 2, 5, 6}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {8, 2, 3, 5}.


Revised: The value 3 is removed from the domain of node (1, 1), Now the domain is {8, 2, 5}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 2, 5}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {9, 4, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,1).


Go deep in the search tree parent cell (0,1) with value 3 ,current depth:23


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [9, 6, 7]


Trying value 9 for cell (0, 2), current depth :24


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {9, 6, 7}.


The domain of cell (0, 2) is reduced to 9.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {8, 2, 5, 7}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {9, 6, 7}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {6, 7}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {3, 6, 7, 8}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 5, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {8, 1, 5}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 3, 5, 6, 7}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {4, 6, 7}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {8, 5, 7}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {2, 5, 6, 8}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 3, 5}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {8, 2, 5}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 9, 2, 5}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {8, 2, 5}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {9, 4, 6, 7}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {4, 6, 7}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 5, 9}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {8, 1, 5}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 9 ,current depth:24


MRV cell is (0, 8)


Attempting to fill cell (0, 8) with domain values: [6, 7]


Trying value 6 for cell (0, 8), current depth :25


Applying uniaray constraint.


Orginal domain of cell (0, 8) before reduction {6, 7}.


The domain of cell (0, 8) is reduced to 6.


Applying Binary constraint.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 7, 8}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {2, 5, 8, 9}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {3, 7, 8, 9}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 8}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 8) <---- (0, 7) ,Domain of node (0, 7) is {4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {4, 7}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 7}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (2, 7), Now the domain is {8, 2, 5}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 7, 8}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 5, 7}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 6), Now the domain is {4, 7}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 7, 8}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 6), Now the domain is {2, 5, 8, 9}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,8).


Go deep in the search tree parent cell (0,8) with value 6 ,current depth:25


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [7, 4]


Trying value 7 for cell (0, 6), current depth :26


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {4, 7}.


The domain of cell (0, 6) is reduced to 7.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 8}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {1, 2, 5, 8}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 2, 5}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {8, 1, 5, 7}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {8, 1, 5}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {4, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {4}.


Domain of (0, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(0, 7) for AC- check


Add to the Queue (5, 7),(0, 7) for AC- check


Add to the Queue (0, 2),(0, 7) for AC- check


Add to the Queue (0, 5),(0, 7) for AC- check


Add to the Queue (1, 6),(0, 7) for AC- check


Add to the Queue (0, 8),(0, 7) for AC- check


Add to the Queue (2, 8),(0, 7) for AC- check


Add to the Queue (7, 7),(0, 7) for AC- check


Add to the Queue (0, 1),(0, 7) for AC- check


Add to the Queue (0, 4),(0, 7) for AC- check


Add to the Queue (2, 7),(0, 7) for AC- check


Add to the Queue (1, 8),(0, 7) for AC- check


Add to the Queue (6, 7),(0, 7) for AC- check


Add to the Queue (4, 7),(0, 7) for AC- check


Add to the Queue (0, 0),(0, 7) for AC- check


Add to the Queue (8, 7),(0, 7) for AC- check


Add to the Queue (0, 3),(0, 7) for AC- check


Add to the Queue (1, 7),(0, 7) for AC- check


Add to the Queue (2, 6),(0, 7) for AC- check


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {8, 2, 5}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 5, 8}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 8, 9}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 5, 8}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 2, 5}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {4, 6, 8, 9}.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 5, 7}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 8}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 2, 5}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 4, 5, 8}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 2, 5, 8}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {8}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {8, 2, 5}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 8}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 4, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {3, 6, 7, 8}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 8}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {2}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 8}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 2, 5}.


End of Binary Constraints, Checks done for cell: (0,6).


After make inferences we see that the domain of cell (0, 7) is {4}


Adding to board in cell :(0, 7),value :4


Go deep in the search tree parent cell (0,6) with value 7 ,current depth:26


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [5, 8, 2]


Trying value 5 for cell (1, 1), current depth :27


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {8, 2, 5}.


The domain of cell (1, 1) is reduced to 5.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4, 5}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {8, 1, 4}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {8, 2, 5, 7}.


Revised: The value 5 is removed from the domain of node (1, 0), Now the domain is {8, 2, 7}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {8, 1, 2, 5}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {8, 1, 2}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 8, 9}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 5, 7}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {8, 7}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {8, 2, 5, 6}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {8, 2, 6}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 9, 4, 6}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 8}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 8}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 5, 9}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {8, 1, 9}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {1, 2, 6}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 2, 5}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {8, 2}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3, 5, 8}.


Revised: The value 5 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3, 8}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 5 ,current depth:27


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [8, 7]


Trying value 8 for cell (1, 2), current depth :28


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {8, 7}.


The domain of cell (1, 2) is reduced to 8.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {8, 2, 7}.


Revised: The value 8 is removed from the domain of node (1, 0), Now the domain is {2, 7}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 3, 6, 7}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {3, 6, 7}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 5}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {1, 5}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 3, 5, 6, 7}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 2, 6}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {2, 6}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {8, 1, 2, 3}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 3, 5}.


Revised: The value 8 is removed from the domain of node (3, 2), Now the domain is {1, 3, 5}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 2}.


Revised: The value 8 is removed from the domain of node (2, 0), Now the domain is {2}.


Domain of (2, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(2, 0) for AC- check


Add to the Queue (8, 0),(2, 0) for AC- check


Add to the Queue (0, 2),(2, 0) for AC- check


Add to the Queue (2, 2),(2, 0) for AC- check


Add to the Queue (1, 0),(2, 0) for AC- check


Add to the Queue (2, 5),(2, 0) for AC- check


Add to the Queue (2, 8),(2, 0) for AC- check


Add to the Queue (3, 0),(2, 0) for AC- check


Add to the Queue (5, 0),(2, 0) for AC- check


Add to the Queue (0, 1),(2, 0) for AC- check


Add to the Queue (2, 4),(2, 0) for AC- check


Add to the Queue (2, 1),(2, 0) for AC- check


Add to the Queue (2, 7),(2, 0) for AC- check


Add to the Queue (7, 0),(2, 0) for AC- check


Add to the Queue (0, 0),(2, 0) for AC- check


Add to the Queue (1, 1),(2, 0) for AC- check


Add to the Queue (2, 3),(2, 0) for AC- check


Add to the Queue (2, 6),(2, 0) for AC- check


Add to the Queue (6, 0),(2, 0) for AC- check


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {8, 1, 2, 3}.


Revised: The value 8 is removed from the domain of node (1, 7), Now the domain is {1, 2, 3}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 5}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {1, 5}.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 9, 5}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 5, 7}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {3, 5, 7}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {2, 7}.


Revised: The value 2 is removed from the domain of node (1, 0), Now the domain is {7}.


Domain of (1, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(1, 0) for AC- check


Add to the Queue (8, 0),(1, 0) for AC- check


Add to the Queue (0, 2),(1, 0) for AC- check


Add to the Queue (2, 2),(1, 0) for AC- check


Add to the Queue (1, 6),(1, 0) for AC- check


Add to the Queue (1, 3),(1, 0) for AC- check


Add to the Queue (3, 0),(1, 0) for AC- check


Add to the Queue (5, 0),(1, 0) for AC- check


Add to the Queue (0, 1),(1, 0) for AC- check


Add to the Queue (1, 2),(1, 0) for AC- check


Add to the Queue (2, 1),(1, 0) for AC- check


Add to the Queue (1, 5),(1, 0) for AC- check


Add to the Queue (1, 8),(1, 0) for AC- check


Add to the Queue (7, 0),(1, 0) for AC- check


Add to the Queue (0, 0),(1, 0) for AC- check


Add to the Queue (1, 1),(1, 0) for AC- check


Add to the Queue (1, 4),(1, 0) for AC- check


Add to the Queue (1, 7),(1, 0) for AC- check


Add to the Queue (6, 0),(1, 0) for AC- check


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 2, 5}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {8, 9, 5}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4, 5}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {2, 6}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {6}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {8, 5}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 4, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {4, 5, 8, 9}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 2, 5}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {8, 9, 5}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 7, 8, 9}.


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 9, 5}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {3, 5, 7}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {3, 5}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4, 5}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {4, 5, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {3, 4, 8, 9}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 5}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 8, 9}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 5}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 9, 4, 6}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {8, 9, 4}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 9}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 6}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {1, 2}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 5}.


End of Binary Constraints, Checks done for cell: (1,2).


After make inferences we see that the domain of cell (1, 0) is {7}


After make inferences we see that the domain of cell (2, 0) is {2}


After make inferences we see that the domain of cell (2, 1) is {6}


Adding to board in cell :(1, 0),value :7


Adding to board in cell :(2, 0),value :2


Adding to board in cell :(2, 1),value :6


Go deep in the search tree parent cell (1,2) with value 8 ,current depth:28


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [1, 2]


Trying value 1 for cell (1, 6), current depth :29


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {1, 2}.


The domain of cell (1, 6) is reduced to 1.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 8}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {2, 5, 6, 8}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 5, 6}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 5}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {8, 1, 5}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {8, 5}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {8, 5}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {2, 3}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 4, 5, 8, 9}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {1, 2, 3}.


Revised: The value 1 is removed from the domain of node (1, 7), Now the domain is {2, 3}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 5}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 9, 4, 6}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 1 ,current depth:29


MRV cell is (1, 7)


Attempting to fill cell (1, 7) with domain values: [2, 3]


Trying value 2 for cell (1, 7), current depth :30


Applying uniaray constraint.


Orginal domain of cell (1, 7) before reduction {2, 3}.


The domain of cell (1, 7) is reduced to 2.


Applying Binary constraint.


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 5, 7}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 5}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1, 2, 5}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {8, 1, 5}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {8, 5}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {2, 3}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {3}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (1, 2),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6, 7}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 8}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 5, 6, 8}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 3, 5, 6, 7}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 5}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {4}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 5}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {8, 9, 3, 7}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {8, 9, 7}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 5}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 7}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 5, 7}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (1, 8) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 5}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 5, 7}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {9}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 5}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,7).


After make inferences we see that the domain of cell (1, 8) is {3}


Adding to board in cell :(1, 8),value :3


Go deep in the search tree parent cell (1,7) with value 2 ,current depth:30


MRV cell is (2, 7)


Attempting to fill cell (2, 7) with domain values: [5, 8]


Trying value 5 for cell (2, 7), current depth :31


Applying uniaray constraint.


Orginal domain of cell (2, 7) before reduction {8, 5}.


The domain of cell (2, 7) is reduced to 5.


Applying Binary constraint.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 5, 7}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {8, 1, 7}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {8, 9}.


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1, 5}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {8, 1}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6, 7}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 5, 6}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {8, 1, 6}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 7}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (2, 6), Now the domain is {8, 9}.


End of Binary Constraints, Checks done for cell: (2,7).


Go deep in the search tree parent cell (2,7) with value 5 ,current depth:31


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [8, 9]


Trying value 8 for cell (2, 6), current depth :32


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {8, 9}.


The domain of cell (2, 6) is reduced to 8.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 2, 5, 6}.


Revised: The value 8 is removed from the domain of node (4, 6), Now the domain is {2, 5, 6}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 9}.


Revised: The value 8 is removed from the domain of node (2, 8), Now the domain is {9}.


Domain of (2, 8) is one value ,we need to add AC constraint.


Add to the Queue (2, 2),(2, 8) for AC- check


Add to the Queue (1, 6),(2, 8) for AC- check


Add to the Queue (0, 8),(2, 8) for AC- check


Add to the Queue (2, 5),(2, 8) for AC- check


Add to the Queue (6, 8),(2, 8) for AC- check


Add to the Queue (4, 8),(2, 8) for AC- check


Add to the Queue (8, 8),(2, 8) for AC- check


Add to the Queue (2, 4),(2, 8) for AC- check


Add to the Queue (0, 7),(2, 8) for AC- check


Add to the Queue (2, 1),(2, 8) for AC- check


Add to the Queue (2, 7),(2, 8) for AC- check


Add to the Queue (1, 8),(2, 8) for AC- check


Add to the Queue (3, 8),(2, 8) for AC- check


Add to the Queue (5, 8),(2, 8) for AC- check


Add to the Queue (2, 0),(2, 8) for AC- check


Add to the Queue (0, 6),(2, 8) for AC- check


Add to the Queue (2, 3),(2, 8) for AC- check


Add to the Queue (1, 7),(2, 8) for AC- check


Add to the Queue (7, 8),(2, 8) for AC- check


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {8, 5}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {5}.


Domain of (3, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 6) for AC- check


Add to the Queue (3, 1),(3, 6) for AC- check


Add to the Queue (3, 7),(3, 6) for AC- check


Add to the Queue (4, 6),(3, 6) for AC- check


Add to the Queue (5, 7),(3, 6) for AC- check


Add to the Queue (8, 6),(3, 6) for AC- check


Add to the Queue (1, 6),(3, 6) for AC- check


Add to the Queue (3, 0),(3, 6) for AC- check


Add to the Queue (3, 3),(3, 6) for AC- check


Add to the Queue (5, 6),(3, 6) for AC- check


Add to the Queue (4, 8),(3, 6) for AC- check


Add to the Queue (7, 6),(3, 6) for AC- check


Add to the Queue (3, 2),(3, 6) for AC- check


Add to the Queue (4, 7),(3, 6) for AC- check


Add to the Queue (3, 5),(3, 6) for AC- check


Add to the Queue (3, 8),(3, 6) for AC- check


Add to the Queue (5, 8),(3, 6) for AC- check


Add to the Queue (0, 6),(3, 6) for AC- check


Add to the Queue (6, 6),(3, 6) for AC- check


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {2, 4, 5, 9}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 9, 4, 6}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {9, 4, 6}.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {8, 9, 7}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {8, 7}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 5}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 7}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {1}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (2, 8) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 5, 7}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 5, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {1, 2, 5, 8}.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 7}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {2, 5, 6}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {2, 6}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {2, 6}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4, 5}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {8, 3, 4}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2, 5}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {8, 1, 2}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 5, 9}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {2, 4, 9}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 5}.


Revised: The value 5 is removed from the domain of node (3, 2), Now the domain is {1, 3}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 5, 7}.


Revised: The value 5 is removed from the domain of node (3, 8), Now the domain is {8, 1, 7}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 6}.


End of Binary Constraints, Checks done for cell: (2,6).


After make inferences we see that the domain of cell (2, 8) is {9}


After make inferences we see that the domain of cell (3, 6) is {5}


Adding to board in cell :(2, 8),value :9


Adding to board in cell :(3, 6),value :5


Go deep in the search tree parent cell (2,6) with value 8 ,current depth:32


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [1, 3]


Trying value 1 for cell (3, 2), current depth :33


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {1, 3}.


The domain of cell (3, 2) is reduced to 1.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 9, 5}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {8, 4}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 7}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {8, 7}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {5}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (4, 7),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 3, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {3, 5, 6, 7}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 9}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {8, 9}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 7}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {8, 7}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {5}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (4, 2),(7, 2) for AC- check


Add to the Queue (8, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 9, 5}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {8, 9}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {8, 4}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {3, 6, 7}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 9}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,2).


Undo operation ,current depth : 33.


Remove the assigment from the board ,(3,2)=0.


No inferences made from cell (3,2) to remove it.


Trying value 3 for cell (3, 2), current depth :33


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {1, 3}.


The domain of cell (3, 2) is reduced to 3.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 9, 5}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 7}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {6, 7}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4}.


Revised: The value 3 is removed from the domain of node (3, 0), Now the domain is {8, 4}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 3, 5, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 5, 6, 7}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 9}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 7}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


End of Binary Constraints, Checks done for cell: (3,2).


Go deep in the search tree parent cell (3,2) with value 3 ,current depth:33


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [8, 4]


Trying value 8 for cell (3, 0), current depth :34


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {8, 4}.


The domain of cell (3, 0) is reduced to 8.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 9, 5}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {9, 5}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {8, 1, 4}.


Revised: The value 8 is removed from the domain of node (3, 1), Now the domain is {1, 4}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 7}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 7}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {3, 5}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 5}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {9, 4, 5}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 9}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {1, 9}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {8, 1, 7}.


Revised: The value 8 is removed from the domain of node (3, 8), Now the domain is {1, 7}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 9, 3, 4}.


Revised: The value 8 is removed from the domain of node (6, 0), Now the domain is {9, 3, 4}.


End of Binary Constraints, Checks done for cell: (3,0).


Go deep in the search tree parent cell (3,0) with value 8 ,current depth:34


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [1, 4]


Trying value 1 for cell (3, 1), current depth :35


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {1, 4}.


The domain of cell (3, 1) is reduced to 1.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {9, 5}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {1, 7}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {7}.


Domain of (3, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 7) for AC- check


Add to the Queue (4, 6),(3, 7) for AC- check


Add to the Queue (5, 7),(3, 7) for AC- check


Add to the Queue (7, 7),(3, 7) for AC- check


Add to the Queue (3, 0),(3, 7) for AC- check


Add to the Queue (3, 3),(3, 7) for AC- check


Add to the Queue (5, 6),(3, 7) for AC- check


Add to the Queue (4, 8),(3, 7) for AC- check


Add to the Queue (3, 6),(3, 7) for AC- check


Add to the Queue (0, 7),(3, 7) for AC- check


Add to the Queue (2, 7),(3, 7) for AC- check


Add to the Queue (6, 7),(3, 7) for AC- check


Add to the Queue (3, 2),(3, 7) for AC- check


Add to the Queue (4, 7),(3, 7) for AC- check


Add to the Queue (3, 5),(3, 7) for AC- check


Add to the Queue (3, 8),(3, 7) for AC- check


Add to the Queue (5, 8),(3, 7) for AC- check


Add to the Queue (8, 7),(3, 7) for AC- check


Add to the Queue (1, 7),(3, 7) for AC- check


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 1), Now the domain is {2, 4, 8, 9}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {5}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (4, 7),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 9, 4}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 9}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {9}.


Domain of (4, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 1) for AC- check


Add to the Queue (4, 3),(4, 1) for AC- check


Add to the Queue (4, 6),(4, 1) for AC- check


Add to the Queue (5, 1),(4, 1) for AC- check


Add to the Queue (7, 1),(4, 1) for AC- check


Add to the Queue (4, 2),(4, 1) for AC- check


Add to the Queue (3, 0),(4, 1) for AC- check


Add to the Queue (4, 5),(4, 1) for AC- check


Add to the Queue (5, 0),(4, 1) for AC- check


Add to the Queue (4, 8),(4, 1) for AC- check


Add to the Queue (0, 1),(4, 1) for AC- check


Add to the Queue (2, 1),(4, 1) for AC- check


Add to the Queue (6, 1),(4, 1) for AC- check


Add to the Queue (3, 2),(4, 1) for AC- check


Add to the Queue (4, 7),(4, 1) for AC- check


Add to the Queue (5, 2),(4, 1) for AC- check


Add to the Queue (4, 4),(4, 1) for AC- check


Add to the Queue (8, 1),(4, 1) for AC- check


Add to the Queue (1, 1),(4, 1) for AC- check


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {1, 7}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {7}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 7),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (3, 6),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {2}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {8, 3, 6}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {7}.


Revised: The value 7 is removed from the domain of node (3, 8), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,1).


Undo operation ,current depth : 35.


Remove the assigment from the board ,(3,1)=0.


No inferences made from cell (3,1) to remove it.


Trying value 4 for cell (3, 1), current depth :35


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {1, 4}.


The domain of cell (3, 1) is reduced to 4.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {9, 5}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {1, 7}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 1), Now the domain is {1, 2, 8, 9}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 9, 4}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {8, 9}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 9}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {1, 7}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 4 ,current depth:35


MRV cell is (3, 7)


Attempting to fill cell (3, 7) with domain values: [1, 7]


Trying value 1 for cell (3, 7), current depth :36


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {1, 7}.


The domain of cell (3, 7) is reduced to 1.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {8}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2}.


Revised: The value 1 is removed from the domain of node (4, 8), Now the domain is {8, 2}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6, 7}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {8, 6}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {1, 7}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {7}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 1),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (3, 6),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 7), Now the domain is {3, 6, 7}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {2, 6}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 2, 9}.


Revised: The value 8 is removed from the domain of node (7, 1), Now the domain is {1, 2, 9}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {8, 7}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {7}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (6, 1),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 7}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {9, 4, 5}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6, 7}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {3, 6, 7}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {9, 2, 4}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 6}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {6}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (4, 8),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {3, 6, 7}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 6}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2, 5}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {1, 2, 5}.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Revised: The value 7 is removed from the domain of node (6, 8), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,7).


Undo operation ,current depth : 36.


Remove the assigment from the board ,(3,7)=0.


No inferences made from cell (3,7) to remove it.


Trying value 7 for cell (3, 7), current depth :36


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {1, 7}.


The domain of cell (3, 7) is reduced to 7.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {8, 3, 6}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {1, 7}.


Revised: The value 7 is removed from the domain of node (3, 8), Now the domain is {1}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 1),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (3, 6),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {8, 7}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {8, 1, 2}.


Revised: The value 1 is removed from the domain of node (4, 8), Now the domain is {8, 2}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 7}.


Revised: The value 1 is removed from the domain of node (8, 8), Now the domain is {2, 5, 7}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {8, 6}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2, 5}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {8, 2, 5}.


End of Binary Constraints, Checks done for cell: (3,7).


After make inferences we see that the domain of cell (3, 8) is {1}


Adding to board in cell :(3, 8),value :1


Go deep in the search tree parent cell (3,7) with value 7 ,current depth:36


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [5, 9]


Trying value 5 for cell (4, 0), current depth :37


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {9, 5}.


The domain of cell (4, 0) is reduced to 5.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {3, 5}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {3}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (5, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Revised: The value 5 is removed from the domain of node (4, 2), Now the domain is {1}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (4, 7),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {8, 2}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 4, 5}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {9, 4}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 9}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {8, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {2, 6}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {6, 7}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 2, 9}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (8, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 6, 7}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {2, 5, 7}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {8, 9}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {1, 6}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {9, 4}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {6, 7}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {8, 2}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {5, 6, 7}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 9}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {9}.


Domain of (4, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 1) for AC- check


Add to the Queue (4, 3),(4, 1) for AC- check


Add to the Queue (3, 1),(4, 1) for AC- check


Add to the Queue (4, 6),(4, 1) for AC- check


Add to the Queue (5, 1),(4, 1) for AC- check


Add to the Queue (7, 1),(4, 1) for AC- check


Add to the Queue (3, 0),(4, 1) for AC- check


Add to the Queue (4, 5),(4, 1) for AC- check


Add to the Queue (5, 0),(4, 1) for AC- check


Add to the Queue (4, 8),(4, 1) for AC- check


Add to the Queue (0, 1),(4, 1) for AC- check


Add to the Queue (2, 1),(4, 1) for AC- check


Add to the Queue (6, 1),(4, 1) for AC- check


Add to the Queue (3, 2),(4, 1) for AC- check


Add to the Queue (4, 7),(4, 1) for AC- check


Add to the Queue (5, 2),(4, 1) for AC- check


Add to the Queue (4, 4),(4, 1) for AC- check


Add to the Queue (8, 1),(4, 1) for AC- check


Add to the Queue (1, 1),(4, 1) for AC- check


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {8, 6}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {5}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (8, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {5}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {2, 6}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 2, 9}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {8, 1, 2}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {8, 2}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 9}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {8}.


Domain of (6, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(6, 1) for AC- check


Add to the Queue (5, 1),(6, 1) for AC- check


Add to the Queue (8, 0),(6, 1) for AC- check


Add to the Queue (6, 2),(6, 1) for AC- check


Add to the Queue (7, 1),(6, 1) for AC- check


Add to the Queue (6, 5),(6, 1) for AC- check


Add to the Queue (6, 8),(6, 1) for AC- check


Add to the Queue (8, 2),(6, 1) for AC- check


Add to the Queue (0, 1),(6, 1) for AC- check


Add to the Queue (2, 1),(6, 1) for AC- check


Add to the Queue (7, 0),(6, 1) for AC- check


Add to the Queue (6, 4),(6, 1) for AC- check


Add to the Queue (6, 7),(6, 1) for AC- check


Add to the Queue (8, 1),(6, 1) for AC- check


Add to the Queue (1, 1),(6, 1) for AC- check


Add to the Queue (7, 2),(6, 1) for AC- check


Add to the Queue (6, 0),(6, 1) for AC- check


Add to the Queue (6, 6),(6, 1) for AC- check


Add to the Queue (6, 3),(6, 1) for AC- check


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {8, 6}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {6, 7}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 2}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {6, 7}.


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {9, 2, 4}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {8, 2, 5}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {8, 2}.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {6, 7}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {8, 1, 2}.


Revised: The value 8 is removed from the domain of node (7, 1), Now the domain is {1, 2}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {8, 7}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {7}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {6, 7}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {3, 6}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 6}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {2, 6}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {6, 7}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {6}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 4),(6, 2) for AC- check


Add to the Queue (6, 7),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (7, 2),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 6),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {8, 2}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 5, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {2, 5}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {3, 6}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {9, 2, 4}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {1, 6}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 6}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 2}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {1, 2}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {6, 7}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {7}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (7, 2),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {3, 6}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {3}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 6}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {9, 4}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {9}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {2, 6}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {1, 2}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {2, 5}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {1, 6}.


Processing (8, 2) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {2, 6}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {2, 5}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {9, 2, 4}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 6}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 6}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {8, 2}.


End of Binary Constraints, Checks done for cell: (4,0).


After make inferences we see that the domain of cell (4, 1) is {9}


After make inferences we see that the domain of cell (4, 2) is {1}


After make inferences we see that the domain of cell (6, 1) is {8}


After make inferences we see that the domain of cell (6, 2) is {6}


After make inferences we see that the domain of cell (6, 7) is {3}


After make inferences we see that the domain of cell (6, 8) is {7}


After make inferences we see that the domain of cell (7, 2) is {5}


After make inferences we see that the domain of cell (8, 0) is {3}


After make inferences we see that the domain of cell (8, 2) is {7}


Adding to board in cell :(4, 1),value :9


Adding to board in cell :(4, 2),value :1


Adding to board in cell :(6, 1),value :8


Adding to board in cell :(6, 2),value :6


Adding to board in cell :(6, 7),value :3


Adding to board in cell :(6, 8),value :7


Adding to board in cell :(7, 2),value :5


Adding to board in cell :(8, 0),value :3


Adding to board in cell :(8, 2),value :7


Go deep in the search tree parent cell (4,0) with value 5 ,current depth:37


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [2, 6]


Trying value 2 for cell (4, 6), current depth :38


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {2, 6}.


The domain of cell (4, 6) is reduced to 2.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {5}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 6}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {6}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {8, 2}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {8}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {9, 2, 4}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {9, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {9}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 6}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {8}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {2, 5}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 6}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (8, 1),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {8}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {8, 2}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {5}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 5}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {9}.


Processing (4, 8) <---- (4, 7) ,Domain of node (4, 7) is {8, 6}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {6}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 2}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {8}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {2, 5}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {6}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 7) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {2}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {5}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {1}.


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {9}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {1, 2}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {1}.


Domain of (7, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(7, 1) for AC- check


Add to the Queue (5, 1),(7, 1) for AC- check


Add to the Queue (8, 0),(7, 1) for AC- check


Add to the Queue (7, 4),(7, 1) for AC- check


Add to the Queue (6, 2),(7, 1) for AC- check


Add to the Queue (7, 7),(7, 1) for AC- check


Add to the Queue (8, 2),(7, 1) for AC- check


Add to the Queue (0, 1),(7, 1) for AC- check


Add to the Queue (2, 1),(7, 1) for AC- check


Add to the Queue (6, 1),(7, 1) for AC- check


Add to the Queue (7, 0),(7, 1) for AC- check


Add to the Queue (7, 3),(7, 1) for AC- check


Add to the Queue (7, 6),(7, 1) for AC- check


Add to the Queue (4, 1),(7, 1) for AC- check


Add to the Queue (8, 1),(7, 1) for AC- check


Add to the Queue (1, 1),(7, 1) for AC- check


Add to the Queue (7, 2),(7, 1) for AC- check


Add to the Queue (6, 0),(7, 1) for AC- check


Add to the Queue (7, 5),(7, 1) for AC- check


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 5}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {5}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {9}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {4}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {5}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {6}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {2}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {5}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {9}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {7}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {9}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {5}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {9, 4}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {6}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {8}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {1}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


End of Binary Constraints, Checks done for cell: (4,6).


After make inferences we see that the domain of cell (4, 7) is {6}


After make inferences we see that the domain of cell (4, 8) is {8}


After make inferences we see that the domain of cell (7, 1) is {1}


After make inferences we see that the domain of cell (7, 7) is {8}


After make inferences we see that the domain of cell (7, 8) is {2}


After make inferences we see that the domain of cell (8, 1) is {2}


After make inferences we see that the domain of cell (8, 6) is {6}


After make inferences we see that the domain of cell (8, 7) is {1}


After make inferences we see that the domain of cell (8, 8) is {5}


Adding to board in cell :(4, 7),value :6


Adding to board in cell :(4, 8),value :8


Adding to board in cell :(7, 1),value :1


Adding to board in cell :(7, 7),value :8


Adding to board in cell :(7, 8),value :2


Adding to board in cell :(8, 1),value :2


Adding to board in cell :(8, 6),value :6


Adding to board in cell :(8, 7),value :1


Adding to board in cell :(8, 8),value :5


Go deep in the search tree parent cell (4,6) with value 2 ,current depth:38


MRV cell is (6, 0)


Attempting to fill cell (6, 0) with domain values: [4, 9]


Trying value 4 for cell (6, 0), current depth :39


Applying uniaray constraint.


Orginal domain of cell (6, 0) before reduction {9, 4}.


The domain of cell (6, 0) is reduced to 4.


Applying Binary constraint.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {5}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {9}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (7, 7),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {9}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (7, 6),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {5}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {7}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 0) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {8}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {6}.


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {4}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (8, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {1}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {2}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {5}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {8}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (6, 6) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {8}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (7, 6) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {1}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {5}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {5}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {7}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {8}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {5}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {2}.


End of Binary Constraints, Checks done for cell: (6,0).


After make inferences we see that the domain of cell (6, 6) is {9}


After make inferences we see that the domain of cell (7, 0) is {9}


After make inferences we see that the domain of cell (7, 6) is {4}


Adding to board in cell :(6, 6),value :9


Adding to board in cell :(7, 0),value :9


Adding to board in cell :(7, 6),value :4


Go deep in the search tree parent cell (6,0) with value 4 ,current depth:39


MRV cell is None


End of applying Backtracking.


after make cell (1,7) = 4


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (1, 7) is reduced to 4.


The domain of cell (2, 2) is reduced to 4.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


The domain of cell (5, 6) is reduced to 3.


The domain of cell (6, 4) is reduced to 2.


Apply Binary constraint to the Initial Board


All posible arcs to (1,7) are [(3, 7), (5, 7), (1, 0), (1, 6), (0, 8), (1, 3), (2, 8), (7, 7), (0, 7), (1, 2), (2, 7), (1, 5), (1, 8), (6, 7), (4, 7), (8, 7), (1, 1), (1, 4), (0, 6), (2, 6)]


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (5,6) are [(3, 7), (5, 4), (4, 6), (5, 1), (5, 7), (8, 6), (1, 6), (5, 0), (4, 8), (3, 6), (5, 3), (7, 6), (4, 7), (5, 2), (3, 8), (5, 5), (5, 8), (0, 6), (2, 6), (6, 6)]


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


All posible arcs to (6,4) are [(3, 4), (5, 4), (8, 3), (7, 4), (6, 2), (6, 5), (6, 8), (8, 5), (2, 4), (0, 4), (6, 1), (7, 3), (6, 7), (4, 4), (8, 4), (1, 4), (6, 0), (6, 6), (7, 5), (6, 3)]


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 3): {2, 3, 5, 6, 7, 8, 9}, (1, 4): {1, 3, 5, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 6): {1, 2, 5, 6, 7, 8, 9}, (1, 7): {4}, (1, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {2, 3, 5, 6, 7, 8, 9}, (3, 4): {3, 5, 6, 7, 8, 9}, (3, 5): {2, 3, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 5, 6, 7, 8, 9}, (5, 0): {2, 4, 5, 6, 7, 8, 9}, (5, 1): {2, 4, 5, 6, 7, 8, 9}, (5, 2): {2, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {5, 6, 7, 8, 9}, (5, 5): {2, 5, 6, 7, 8, 9}, (5, 6): {3}, (5, 7): {2, 5, 6, 7, 8, 9}, (5, 8): {2, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 1): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 2): {1, 3, 5, 6, 7, 8, 9}, (6, 3): {3, 4, 5, 6, 7, 8, 9}, (6, 4): {2}, (6, 5): {1, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 3, 5, 6, 7, 8, 9}, (6, 8): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 3): {3, 4, 5, 6, 7, 8, 9}, (7, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 5): {1, 3, 5, 6, 7, 8, 9}, (7, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 3): {3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [5, 6, 7, 8, 9]


Trying value 5 for cell (5, 4), current depth :0


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {5, 6, 7, 8, 9}.


The domain of cell (5, 4) is reduced to 5.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 4), Now the domain is {3, 6, 7, 8, 9}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {2, 6, 7, 8, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 4), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {2, 6, 7, 8, 9}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 4), Now the domain is {3, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 5), Now the domain is {2, 6, 7, 8, 9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 3, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 5 ,current depth:0


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [6, 7, 8, 9, 3]


Trying value 6 for cell (3, 4), current depth :1


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {3, 6, 7, 8, 9}.


The domain of cell (3, 4) is reduced to 6.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 7, 8, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 3, 7, 8, 9}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {3, 7, 8, 9}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {2, 7, 8, 9}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 3, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 6 ,current depth:1


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [7, 8, 9, 3]


Trying value 7 for cell (4, 4), current depth :2


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {8, 9, 3, 7}.


The domain of cell (4, 4) is reduced to 7.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {2, 3, 8, 9}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 3), Now the domain is {2, 3, 8, 9}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 3, 8, 9}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 5), Now the domain is {2, 3, 8, 9}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {8, 9, 2, 7}.


Revised: The value 7 is removed from the domain of node (5, 5), Now the domain is {8, 9, 2}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 3, 8, 9}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 7 ,current depth:2


MRV cell is (5, 5)


Attempting to fill cell (5, 5) with domain values: [8, 9, 2]


Trying value 8 for cell (5, 5), current depth :3


Applying uniaray constraint.


Orginal domain of cell (5, 5) before reduction {8, 9, 2}.


The domain of cell (5, 5) is reduced to 8.


Applying Binary constraint.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {8, 9, 2, 3}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {9, 2, 3}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 7, 9}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {2, 6, 7, 9}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 2, 3}.


Revised: The value 8 is removed from the domain of node (3, 3), Now the domain is {9, 2, 3}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (5, 5) <---- (3, 5) ,Domain of node (3, 5) is {8, 9, 2, 3}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {9, 2, 3}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {2, 6, 7, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 7, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (5,5).


Go deep in the search tree parent cell (5,5) with value 8 ,current depth:3


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [9, 2, 3]


Trying value 9 for cell (3, 3), current depth :4


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {9, 2, 3}.


The domain of cell (3, 3) is reduced to 9.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {9, 2, 3}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {2, 3}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 7, 8}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 3), Now the domain is {2, 3, 5, 6, 7, 8}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 5, 7, 8}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 7, 8}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 7, 8}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {9, 2, 3}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {2, 3}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 7, 8}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 9 ,current depth:4


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [2, 3]


Trying value 2 for cell (3, 5), current depth :5


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {2, 3}.


The domain of cell (3, 5) is reduced to 2.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {2, 3}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {3}.


Domain of (4, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 3) for AC- check


Add to the Queue (3, 4),(4, 3) for AC- check


Add to the Queue (5, 4),(4, 3) for AC- check


Add to the Queue (4, 6),(4, 3) for AC- check


Add to the Queue (8, 3),(4, 3) for AC- check


Add to the Queue (1, 3),(4, 3) for AC- check


Add to the Queue (4, 2),(4, 3) for AC- check


Add to the Queue (4, 5),(4, 3) for AC- check


Add to the Queue (3, 3),(4, 3) for AC- check


Add to the Queue (4, 8),(4, 3) for AC- check


Add to the Queue (5, 3),(4, 3) for AC- check


Add to the Queue (7, 3),(4, 3) for AC- check


Add to the Queue (4, 1),(4, 3) for AC- check


Add to the Queue (4, 7),(4, 3) for AC- check


Add to the Queue (4, 4),(4, 3) for AC- check


Add to the Queue (5, 5),(4, 3) for AC- check


Add to the Queue (0, 3),(4, 3) for AC- check


Add to the Queue (2, 3),(4, 3) for AC- check


Add to the Queue (6, 3),(4, 3) for AC- check


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 5, 7, 8}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 5, 7, 8}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {1, 4, 5, 7, 8}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 3, 5, 7, 8}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 7, 8}.


Revised: The value 2 is removed from the domain of node (3, 8), Now the domain is {1, 4, 5, 7, 8}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 9}.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {4, 5, 6, 7, 8}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {2, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {4, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 8, 9}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 7, 8}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 7, 8}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,5).


After make inferences we see that the domain of cell (4, 3) is {3}


Adding to board in cell :(4, 3),value :3


Go deep in the search tree parent cell (3,5) with value 2 ,current depth:5


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [1, 8, 9, 3]


Trying value 1 for cell (1, 4), current depth :6


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {8, 1, 3, 9}.


The domain of cell (1, 4) is reduced to 1.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (0, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 0), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 6), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 5, 6, 7, 8}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 4), Now the domain is {3, 4, 8, 9}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {8, 1, 3, 9}.


Revised: The value 1 is removed from the domain of node (2, 4), Now the domain is {8, 3, 9}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {3, 4, 8, 9}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {3, 4, 8, 9}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7, 8}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7, 8}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,4).


Go deep in the search tree parent cell (1,4) with value 1 ,current depth:6


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [8, 9, 3]


Trying value 8 for cell (2, 4), current depth :7


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {8, 9, 3}.


The domain of cell (2, 4) is reduced to 8.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {3, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {3, 5, 6, 7, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (1, 3), Now the domain is {2, 5, 6, 7}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {8, 9, 3, 4}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {9, 3, 4}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {8, 9, 3, 4}.


Revised: The value 8 is removed from the domain of node (0, 4), Now the domain is {9, 3, 4}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {3, 5, 6, 7, 9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {8, 9, 3, 4}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {9, 3, 4}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 7}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 7}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 8 ,current depth:7


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [9, 3, 4]


Trying value 9 for cell (0, 4), current depth :8


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {9, 3, 4}.


The domain of cell (0, 4) is reduced to 9.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (0, 5), Now the domain is {3, 5, 6, 7}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {3, 5, 6, 7}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 5, 6, 7}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {9, 3, 4}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {3, 4}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {3, 5, 6, 7}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {9, 3, 4}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {3, 4}.


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,4).


Go deep in the search tree parent cell (0,4) with value 9 ,current depth:8


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [3, 4]


Trying value 3 for cell (7, 4), current depth :9


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {3, 4}.


The domain of cell (7, 4) is reduced to 3.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {4, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (6, 5), Now the domain is {1, 5, 6, 7, 9}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {1, 5, 6, 7, 9}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {4, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {3, 4}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {4}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (0, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {1, 5, 6, 7, 9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {4, 5, 6, 7, 8}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {5, 6, 7, 8}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 5, 6, 7, 9}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 5, 6, 7, 9}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (8, 4) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {5, 6, 7, 8}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 5, 6, 7, 9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {4, 5, 6, 7, 8}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (7,4).


After make inferences we see that the domain of cell (8, 4) is {4}


Adding to board in cell :(8, 4),value :4


Go deep in the search tree parent cell (7,4) with value 3 ,current depth:9


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [5, 6, 7, 3]


Trying value 5 for cell (0, 5), current depth :10


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {3, 5, 6, 7}.


The domain of cell (0, 5) is reduced to 5.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {3, 6, 7}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {2, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {2, 6, 7}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {1, 6, 7, 9}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {1, 6, 7, 9}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {3, 6, 7}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {2, 4, 6, 7}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {1, 2, 6, 7, 8}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {2, 6, 7}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1, 6, 7, 9}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 5 ,current depth:10


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [6, 7, 2]


Trying value 6 for cell (1, 3), current depth :11


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {2, 6, 7}.


The domain of cell (1, 3) is reduced to 6.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {8, 5, 7}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 0), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {2, 5, 7, 8, 9}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {3, 7}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (1, 5), Now the domain is {3, 7}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {8, 5, 7}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 3), Now the domain is {2, 4, 7}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {2, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {2, 7}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {8, 5, 7}.


End of Binary Constraints, Checks done for cell: (1,3).


Go deep in the search tree parent cell (1,3) with value 6 ,current depth:11


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [7, 3]


Trying value 7 for cell (1, 5), current depth :12


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {3, 7}.


The domain of cell (1, 5) is reduced to 7.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 0), Now the domain is {2, 3, 5, 8, 9}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {2, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {2, 5, 8, 9}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {3, 7}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {3}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 7, 9, 6}.


Revised: The value 7 is removed from the domain of node (6, 5), Now the domain is {1, 9, 6}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 7, 9, 6}.


Revised: The value 7 is removed from the domain of node (8, 5), Now the domain is {1, 9, 6}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 2), Now the domain is {2, 3, 5, 8, 9}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {2, 3, 5, 8, 9}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 1), Now the domain is {2, 3, 5, 8, 9}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 3), Now the domain is {2, 4}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {2, 7}.


Revised: The value 7 is removed from the domain of node (2, 3), Now the domain is {2}.


Domain of (2, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(2, 3) for AC- check


Add to the Queue (8, 3),(2, 3) for AC- check


Add to the Queue (0, 5),(2, 3) for AC- check


Add to the Queue (2, 2),(2, 3) for AC- check


Add to the Queue (2, 5),(2, 3) for AC- check


Add to the Queue (1, 3),(2, 3) for AC- check


Add to the Queue (2, 8),(2, 3) for AC- check


Add to the Queue (3, 3),(2, 3) for AC- check


Add to the Queue (5, 3),(2, 3) for AC- check


Add to the Queue (2, 4),(2, 3) for AC- check


Add to the Queue (0, 4),(2, 3) for AC- check


Add to the Queue (2, 1),(2, 3) for AC- check


Add to the Queue (2, 7),(2, 3) for AC- check


Add to the Queue (7, 3),(2, 3) for AC- check


Add to the Queue (0, 3),(2, 3) for AC- check


Add to the Queue (2, 0),(2, 3) for AC- check


Add to the Queue (1, 4),(2, 3) for AC- check


Add to the Queue (2, 6),(2, 3) for AC- check


Add to the Queue (6, 3),(2, 3) for AC- check


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 7, 9, 6}.


Revised: The value 7 is removed from the domain of node (7, 5), Now the domain is {1, 9, 6}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 6}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 6}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 9}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 6}.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 7}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {1, 5, 6, 7, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {1, 5, 6, 7, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {1, 5, 6, 7, 9}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 7}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {4}.


Domain of (0, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(0, 3) for AC- check


Add to the Queue (0, 2),(0, 3) for AC- check


Add to the Queue (8, 3),(0, 3) for AC- check


Add to the Queue (0, 5),(0, 3) for AC- check


Add to the Queue (0, 8),(0, 3) for AC- check


Add to the Queue (2, 5),(0, 3) for AC- check


Add to the Queue (1, 3),(0, 3) for AC- check


Add to the Queue (3, 3),(0, 3) for AC- check


Add to the Queue (5, 3),(0, 3) for AC- check


Add to the Queue (0, 1),(0, 3) for AC- check


Add to the Queue (0, 7),(0, 3) for AC- check


Add to the Queue (2, 4),(0, 3) for AC- check


Add to the Queue (0, 4),(0, 3) for AC- check


Add to the Queue (1, 5),(0, 3) for AC- check


Add to the Queue (7, 3),(0, 3) for AC- check


Add to the Queue (0, 0),(0, 3) for AC- check


Add to the Queue (1, 4),(0, 3) for AC- check


Add to the Queue (0, 6),(0, 3) for AC- check


Add to the Queue (6, 3),(0, 3) for AC- check


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (2, 0), Now the domain is {1, 5, 6, 7, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {1, 5, 6, 7, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5, 7}.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 7}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 7}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5, 7}.


End of Binary Constraints, Checks done for cell: (1,5).


After make inferences we see that the domain of cell (0, 3) is {4}


After make inferences we see that the domain of cell (2, 3) is {2}


After make inferences we see that the domain of cell (2, 5) is {3}


Adding to board in cell :(0, 3),value :4


Adding to board in cell :(2, 3),value :2


Adding to board in cell :(2, 5),value :3


Go deep in the search tree parent cell (1,5) with value 7 ,current depth:12


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [5, 7, 8]


Trying value 5 for cell (6, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {8, 5, 7}.


The domain of cell (6, 3) is reduced to 5.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5, 7}.


Revised: The value 5 is removed from the domain of node (8, 3), Now the domain is {8, 7}.


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 6}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 6}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 5, 7}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {8, 7}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 6), Now the domain is {1, 4, 6, 7, 8, 9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 6}.


End of Binary Constraints, Checks done for cell: (6,3).


Go deep in the search tree parent cell (6,3) with value 5 ,current depth:13


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [7, 8]


Trying value 7 for cell (7, 3), current depth :14


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {8, 7}.


The domain of cell (7, 3) is reduced to 7.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 7}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {8}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 6}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 6}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 6}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 6, 8, 9}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 9, 6}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 6}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 6}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (7,3).


After make inferences we see that the domain of cell (8, 3) is {8}


Adding to board in cell :(8, 3),value :8


Go deep in the search tree parent cell (7,3) with value 7 ,current depth:14


MRV cell is (6, 5)


Attempting to fill cell (6, 5) with domain values: [1, 6, 9]


Trying value 1 for cell (6, 5), current depth :15


Applying uniaray constraint.


Orginal domain of cell (6, 5) before reduction {1, 9, 6}.


The domain of cell (6, 5) is reduced to 1.


Applying Binary constraint.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 2), Now the domain is {3, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 9, 6}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {9, 6}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {3, 6, 7, 8, 9}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {4, 6, 7, 8, 9}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 9, 6}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {9, 6}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (6,5).


Go deep in the search tree parent cell (6,5) with value 1 ,current depth:15


MRV cell is (7, 5)


Attempting to fill cell (7, 5) with domain values: [6, 9]


Trying value 6 for cell (7, 5), current depth :16


Applying uniaray constraint.


Orginal domain of cell (7, 5) before reduction {9, 6}.


The domain of cell (7, 5) is reduced to 6.


Applying Binary constraint.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {1, 2, 5, 8, 9}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {9, 6}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {9}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {1, 2, 5, 8, 9}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 5, 8, 9}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {5}.


End of Binary Constraints, Checks done for cell: (7,5).


After make inferences we see that the domain of cell (8, 5) is {9}


Adding to board in cell :(8, 5),value :9


Go deep in the search tree parent cell (7,5) with value 6 ,current depth:16


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [2, 5, 8, 9]


Trying value 2 for cell (1, 6), current depth :17


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {8, 9, 2, 5}.


The domain of cell (1, 6) is reduced to 2.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 6), Now the domain is {1, 5, 6, 8, 9}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {1, 5, 6, 7}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {2, 3, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 0), Now the domain is {3, 5, 8, 9}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {1, 3, 6, 7, 8}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 5, 6, 7, 9}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 7, 8}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 7), Now the domain is {1, 3, 6, 7, 8}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {2, 3, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {3, 5, 8, 9}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 5, 6, 7, 9}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {2, 3, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {3, 5, 8, 9}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {1, 4, 5, 8, 9}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {2, 3, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 1), Now the domain is {3, 5, 8, 9}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (0, 6), Now the domain is {1, 6, 7, 8}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 5, 6, 7, 9}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 2 ,current depth:17


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [1, 6, 7, 8]


Trying value 1 for cell (0, 6), current depth :18


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {8, 1, 6, 7}.


The domain of cell (0, 6) is reduced to 1.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {5, 6, 8, 9}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 8}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 5, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {5, 6, 7}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {1, 3, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {3, 6, 7, 8}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {5, 6, 7, 9}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {4, 5, 7, 8}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 8}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {1, 3, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {3, 6, 7, 8}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {5, 6, 7, 9}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {8, 9, 3, 5}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {4, 5, 8, 9}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 8}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 5, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (2, 6), Now the domain is {5, 6, 7, 9}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 1 ,current depth:18


MRV cell is (8, 6)


Attempting to fill cell (8, 6) with domain values: [5, 6, 7]


Trying value 5 for cell (8, 6), current depth :19


Applying uniaray constraint.


Orginal domain of cell (8, 6) before reduction {5, 6, 7}.


The domain of cell (8, 6) is reduced to 5.


Applying Binary constraint.


Processing (8, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 9, 5, 6}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {8, 9, 6}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 6, 7}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 5, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 2, 8, 9}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {3, 4, 6, 7, 8, 9}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {8, 4, 5, 7}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {8, 4, 7}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 7}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 6, 7}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {3, 6, 7, 8, 9}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 9, 4, 5}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {8, 9, 4}.


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 6, 7}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {9, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (2, 6), Now the domain is {9, 6, 7}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 6, 7, 8, 9}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 5, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 8, 9}.


End of Binary Constraints, Checks done for cell: (8,6).


Go deep in the search tree parent cell (8,6) with value 5 ,current depth:19


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [6, 7, 9]


Trying value 6 for cell (2, 6), current depth :20


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {9, 6, 7}.


The domain of cell (2, 6) is reduced to 6.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 9, 6}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {8, 9}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {8, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {8, 3, 7}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {9, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {9, 5, 7}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {8, 4, 7}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {8, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {8, 3, 7}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {1, 5, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {1, 5, 7, 9}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {9, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 7), Now the domain is {9, 5, 7}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {8, 9, 3, 5}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 9, 4}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {1, 5, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {1, 5, 7, 9}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,6).


Go deep in the search tree parent cell (2,6) with value 6 ,current depth:20


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [8, 9]


Trying value 8 for cell (4, 6), current depth :21


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {8, 9}.


The domain of cell (4, 6) is reduced to 8.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {1, 2, 5, 6, 9}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 5, 7}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 5, 7}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {9, 2, 6, 7}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 9}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 9}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {8, 4, 7}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {4, 7}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {9, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {1, 2, 5, 6, 9}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 9}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {1, 4, 5, 7, 8}.


Revised: The value 8 is removed from the domain of node (3, 8), Now the domain is {1, 4, 5, 7}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 7, 9}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 9, 4, 7}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {9, 4, 7}.


End of Binary Constraints, Checks done for cell: (4,6).


Go deep in the search tree parent cell (4,6) with value 8 ,current depth:21


MRV cell is (3, 6)


Attempting to fill cell (3, 6) with domain values: [7, 4]


Trying value 7 for cell (3, 6), current depth :22


Applying uniaray constraint.


Orginal domain of cell (3, 6) before reduction {4, 7}.


The domain of cell (3, 6) is reduced to 7.


Applying Binary constraint.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 5, 8}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 5, 7}.


Revised: The value 7 is removed from the domain of node (3, 7), Now the domain is {1, 5}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {9, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {9, 2, 6}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 5, 8}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 9}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 3, 5, 8}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 9}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {1, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (3, 8), Now the domain is {1, 4, 5}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 9}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {9, 4}.


End of Binary Constraints, Checks done for cell: (3,6).


Go deep in the search tree parent cell (3,6) with value 7 ,current depth:22


MRV cell is (3, 7)


Attempting to fill cell (3, 7) with domain values: [1, 5]


Trying value 1 for cell (3, 7), current depth :23


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {1, 5}.


The domain of cell (3, 7) is reduced to 1.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 5, 8}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {3, 4, 5, 8}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {9, 2, 6}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 1, 2, 9}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {8, 2, 9}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 5, 8}.


Revised: The value 1 is removed from the domain of node (3, 0), Now the domain is {3, 4, 5, 8}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (4, 8), Now the domain is {2, 5, 6, 9}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {8, 3, 7}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {9, 5, 7}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 6, 7, 8, 9}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {8, 1, 3, 5}.


Revised: The value 1 is removed from the domain of node (3, 2), Now the domain is {8, 3, 5}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {2, 5, 6, 9}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {4, 5}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {9, 2, 4, 6}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 7), Now the domain is {2, 3, 6, 7}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (3,7).


Go deep in the search tree parent cell (3,7) with value 1 ,current depth:23


MRV cell is (3, 8)


Attempting to fill cell (3, 8) with domain values: [5, 4]


Trying value 5 for cell (3, 8), current depth :24


Applying uniaray constraint.


Orginal domain of cell (3, 8) before reduction {4, 5}.


The domain of cell (3, 8) is reduced to 5.


Applying Binary constraint.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {8, 3, 4, 5}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {8, 3, 4}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {9, 2, 6}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {8, 3, 7}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {9, 5, 7}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {9, 7}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4, 5}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {8, 3, 4}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {9, 2, 5, 6}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {9, 2, 6}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {8, 9, 3, 5}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {8, 9, 3}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {8, 3, 5}.


Revised: The value 5 is removed from the domain of node (3, 2), Now the domain is {8, 3}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {9, 2, 5, 6}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {9, 2, 6}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {9, 2, 4, 6}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,8).


Go deep in the search tree parent cell (3,8) with value 5 ,current depth:24


MRV cell is (2, 8)


Attempting to fill cell (2, 8) with domain values: [9, 7]


Trying value 9 for cell (2, 8), current depth :25


Applying uniaray constraint.


Orginal domain of cell (2, 8) before reduction {9, 7}.


The domain of cell (2, 8) is reduced to 9.


Applying Binary constraint.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {8, 3, 7}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {3, 4, 6, 7, 8}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {9, 2, 6}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {2, 6}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {8, 3, 7}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {1, 5, 9, 7}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {1, 5, 7}.


Processing (2, 8) <---- (2, 7) ,Domain of node (2, 7) is {9, 5, 7}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {5, 7}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {8, 9, 3}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {8, 3}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {9, 2, 4, 6}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {1, 5, 9, 7}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {1, 5, 7}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 8}.


End of Binary Constraints, Checks done for cell: (2,8).


Go deep in the search tree parent cell (2,8) with value 9 ,current depth:25


MRV cell is (1, 8)


Attempting to fill cell (1, 8) with domain values: [3, 8]


Trying value 3 for cell (1, 8), current depth :26


Applying uniaray constraint.


Orginal domain of cell (1, 8) before reduction {8, 3}.


The domain of cell (1, 8) is reduced to 3.


Applying Binary constraint.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (1, 0), Now the domain is {8, 9, 5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {8, 7}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {3, 4, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {4, 6, 7, 8}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {2, 6}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {8, 7}.


Processing (1, 8) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (1, 2), Now the domain is {8, 9, 5}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {5, 7}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {8, 9, 3, 5}.


Revised: The value 3 is removed from the domain of node (1, 1), Now the domain is {8, 9, 5}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (1, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2, 4}.


End of Binary Constraints, Checks done for cell: (1,8).


Go deep in the search tree parent cell (1,8) with value 3 ,current depth:26


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [7, 8]


Trying value 7 for cell (0, 7), current depth :27


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {8, 7}.


The domain of cell (0, 7) is reduced to 7.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {9, 2, 6}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 8}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {8, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {8}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 9, 2}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 8}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {5, 7}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {5}.


Domain of (2, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(2, 7) for AC- check


Add to the Queue (5, 7),(2, 7) for AC- check


Add to the Queue (2, 2),(2, 7) for AC- check


Add to the Queue (1, 6),(2, 7) for AC- check


Add to the Queue (0, 8),(2, 7) for AC- check


Add to the Queue (2, 5),(2, 7) for AC- check


Add to the Queue (2, 8),(2, 7) for AC- check


Add to the Queue (7, 7),(2, 7) for AC- check


Add to the Queue (2, 4),(2, 7) for AC- check


Add to the Queue (2, 1),(2, 7) for AC- check


Add to the Queue (1, 8),(2, 7) for AC- check


Add to the Queue (6, 7),(2, 7) for AC- check


Add to the Queue (4, 7),(2, 7) for AC- check


Add to the Queue (8, 7),(2, 7) for AC- check


Add to the Queue (2, 0),(2, 7) for AC- check


Add to the Queue (0, 6),(2, 7) for AC- check


Add to the Queue (2, 3),(2, 7) for AC- check


Add to the Queue (1, 7),(2, 7) for AC- check


Add to the Queue (2, 6),(2, 7) for AC- check


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {3, 6, 8, 9}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {9, 2, 6}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 8}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {2, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {2, 3, 6}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 8}.


Revised: The value 8 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {8, 4, 6, 7}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {4, 6, 7}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {2, 6}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 8}.


Revised: The value 8 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 8}.


Revised: The value 8 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 1, 2, 4}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4}.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {9, 2, 6}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 9, 2}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {1, 5, 7}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {1, 7}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {3, 6, 8, 9}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {9, 2, 6}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {2, 3, 6}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {1, 5, 7}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {1, 7}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {6}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {8}


After make inferences we see that the domain of cell (2, 7) is {5}


Adding to board in cell :(0, 8),value :8


Adding to board in cell :(2, 7),value :5


Go deep in the search tree parent cell (0,7) with value 7 ,current depth:27


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [1, 7]


Trying value 1 for cell (2, 0), current depth :28


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {1, 7}.


The domain of cell (2, 0) is reduced to 1.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {2, 5, 6, 9}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 3, 6, 7}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 9}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 5}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 7}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {7}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 4, 5, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 4, 5, 8, 9}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {8, 9, 5}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 6, 7, 8, 9}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {8, 3, 4}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 9}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {3}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 8, 9}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {8}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 5}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {3, 4, 6, 8, 9}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 9}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 6}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {8, 9, 5}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {6}.


End of Binary Constraints, Checks done for cell: (2,0).


After make inferences we see that the domain of cell (2, 1) is {7}


Adding to board in cell :(2, 1),value :7


Go deep in the search tree parent cell (2,0) with value 1 ,current depth:28


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [3, 8]


Trying value 3 for cell (3, 2), current depth :29


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {8, 3}.


The domain of cell (3, 2) is reduced to 3.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 5, 6}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {8, 3, 4}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {8, 4}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {9, 2, 4, 6}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6}.


Revised: The value 3 is removed from the domain of node (0, 2), Now the domain is {2, 6}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {6, 7, 8, 9}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 9}.


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {8, 3, 4}.


Revised: The value 3 is removed from the domain of node (3, 0), Now the domain is {8, 4}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 9}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6, 7}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 5}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 9}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {9, 2, 6, 7}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,2).


Go deep in the search tree parent cell (3,2) with value 3 ,current depth:29


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [2, 6]


Trying value 2 for cell (0, 2), current depth :30


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {2, 6}.


The domain of cell (0, 2) is reduced to 2.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 5}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 9, 6, 7}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 9}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {1, 5, 6, 9}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {1, 6, 7}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6}.


Revised: The value 2 is removed from the domain of node (0, 1), Now the domain is {3, 6}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 5}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {9, 6, 7}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6}.


Revised: The value 2 is removed from the domain of node (0, 0), Now the domain is {3, 6}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {8, 9, 5}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 5, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {1, 5, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 2 ,current depth:30


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [6, 3]


Trying value 6 for cell (0, 0), current depth :31


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {3, 6}.


The domain of cell (0, 0) is reduced to 6.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (4, 0), Now the domain is {9, 2, 5}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {2, 3, 7}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 5}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {8, 4}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {2, 4, 7, 9}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {3, 6}.


Revised: The value 6 is removed from the domain of node (0, 1), Now the domain is {3}.


Domain of (0, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(0, 1) for AC- check


Add to the Queue (5, 1),(0, 1) for AC- check


Add to the Queue (0, 2),(0, 1) for AC- check


Add to the Queue (0, 5),(0, 1) for AC- check


Add to the Queue (2, 2),(0, 1) for AC- check


Add to the Queue (1, 0),(0, 1) for AC- check


Add to the Queue (0, 8),(0, 1) for AC- check


Add to the Queue (7, 1),(0, 1) for AC- check


Add to the Queue (0, 7),(0, 1) for AC- check


Add to the Queue (1, 2),(0, 1) for AC- check


Add to the Queue (0, 4),(0, 1) for AC- check


Add to the Queue (2, 1),(0, 1) for AC- check


Add to the Queue (6, 1),(0, 1) for AC- check


Add to the Queue (4, 1),(0, 1) for AC- check


Add to the Queue (8, 1),(0, 1) for AC- check


Add to the Queue (1, 1),(0, 1) for AC- check


Add to the Queue (0, 3),(0, 1) for AC- check


Add to the Queue (2, 0),(0, 1) for AC- check


Add to the Queue (0, 6),(0, 1) for AC- check


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 5}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 4, 5, 8, 9}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {8, 9, 5}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {3, 4, 7, 8, 9}.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {8, 4}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 2, 4, 6}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {5}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 5}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 8, 9}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 5}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {9}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {4, 6, 8, 9}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 9}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {1, 2, 6}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {8, 9, 5}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {1}.


End of Binary Constraints, Checks done for cell: (0,0).


After make inferences we see that the domain of cell (0, 1) is {3}


Adding to board in cell :(0, 1),value :3


Go deep in the search tree parent cell (0,0) with value 6 ,current depth:31


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [4, 8]


Trying value 4 for cell (3, 0), current depth :32


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {8, 4}.


The domain of cell (3, 0) is reduced to 4.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 5}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {8, 4}.


Revised: The value 4 is removed from the domain of node (3, 1), Now the domain is {8}.


Domain of (3, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(3, 1) for AC- check


Add to the Queue (3, 4),(3, 1) for AC- check


Add to the Queue (3, 7),(3, 1) for AC- check


Add to the Queue (5, 1),(3, 1) for AC- check


Add to the Queue (7, 1),(3, 1) for AC- check


Add to the Queue (4, 2),(3, 1) for AC- check


Add to the Queue (3, 3),(3, 1) for AC- check


Add to the Queue (5, 0),(3, 1) for AC- check


Add to the Queue (3, 6),(3, 1) for AC- check


Add to the Queue (0, 1),(3, 1) for AC- check


Add to the Queue (2, 1),(3, 1) for AC- check


Add to the Queue (6, 1),(3, 1) for AC- check


Add to the Queue (3, 2),(3, 1) for AC- check


Add to the Queue (4, 1),(3, 1) for AC- check


Add to the Queue (3, 5),(3, 1) for AC- check


Add to the Queue (5, 2),(3, 1) for AC- check


Add to the Queue (3, 8),(3, 1) for AC- check


Add to the Queue (8, 1),(3, 1) for AC- check


Add to the Queue (1, 1),(3, 1) for AC- check


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {9, 2, 4, 6}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {9, 2, 6}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 7}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 6, 9}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 4, 7}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {9, 2, 7}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 4, 5, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {2, 5, 8, 9}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 9}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {9, 6, 7}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 0), Now the domain is {3, 7, 8, 9}.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 5}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 2, 6}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5, 9}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 6, 9}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {9}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 7}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 9, 4, 6}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {9, 4, 6}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 9}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {2}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {9, 6, 7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 6}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {8, 9, 5}.


Revised: The value 8 is removed from the domain of node (1, 1), Now the domain is {9, 5}.


End of Binary Constraints, Checks done for cell: (3,0).


After make inferences we see that the domain of cell (3, 1) is {8}


Adding to board in cell :(3, 1),value :8


Go deep in the search tree parent cell (3,0) with value 4 ,current depth:32


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [9, 5]


Trying value 9 for cell (1, 1), current depth :33


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {9, 5}.


The domain of cell (1, 1) is reduced to 9.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 2, 6}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {2, 6}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (1, 0), Now the domain is {8, 5}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {1, 2, 4, 5}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (1, 2), Now the domain is {8, 5}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 4, 6}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {4, 6}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 2, 5, 6}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 6}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 9 ,current depth:33


MRV cell is (1, 0)


Attempting to fill cell (1, 0) with domain values: [5, 8]


Trying value 5 for cell (1, 0), current depth :34


Applying uniaray constraint.


Orginal domain of cell (1, 0) before reduction {8, 5}.


The domain of cell (1, 0) is reduced to 5.


Applying Binary constraint.


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {9, 2, 5}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {9, 2}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 7}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 7}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {8, 5}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {8}.


Domain of (1, 2) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(1, 2) for AC- check


Add to the Queue (2, 2),(1, 2) for AC- check


Add to the Queue (1, 6),(1, 2) for AC- check


Add to the Queue (1, 3),(1, 2) for AC- check


Add to the Queue (6, 2),(1, 2) for AC- check


Add to the Queue (4, 2),(1, 2) for AC- check


Add to the Queue (8, 2),(1, 2) for AC- check


Add to the Queue (0, 1),(1, 2) for AC- check


Add to the Queue (2, 1),(1, 2) for AC- check


Add to the Queue (1, 5),(1, 2) for AC- check


Add to the Queue (1, 8),(1, 2) for AC- check


Add to the Queue (3, 2),(1, 2) for AC- check


Add to the Queue (5, 2),(1, 2) for AC- check


Add to the Queue (0, 0),(1, 2) for AC- check


Add to the Queue (1, 1),(1, 2) for AC- check


Add to the Queue (2, 0),(1, 2) for AC- check


Add to the Queue (1, 4),(1, 2) for AC- check


Add to the Queue (1, 7),(1, 2) for AC- check


Add to the Queue (7, 2),(1, 2) for AC- check


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 2, 5}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {8, 9, 2}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 9, 3, 7}.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 9, 6, 7}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {9, 6, 7}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 6, 9}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 6, 7}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {7}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {9, 6, 7}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {9}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {1}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 1, 5, 9}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {1, 5, 9}.


End of Binary Constraints, Checks done for cell: (1,0).


After make inferences we see that the domain of cell (1, 2) is {8}


Adding to board in cell :(1, 2),value :8


Go deep in the search tree parent cell (1,0) with value 5 ,current depth:34


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [2, 9]


Trying value 2 for cell (4, 0), current depth :35


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {9, 2}.


The domain of cell (4, 0) is reduced to 2.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {2, 6}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {6}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 7}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {3, 7}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 6, 9}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2, 7}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {9, 7}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {2, 6}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {6}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 2}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {8, 9}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 5, 6}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {1, 5, 6}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {9, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {9, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {9, 6, 7}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 9, 3, 7}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {9, 2, 6}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {9, 2}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 6, 9}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {1, 5, 9}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 7}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {4, 6}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {4}.


Domain of (6, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(6, 1) for AC- check


Add to the Queue (8, 0),(6, 1) for AC- check


Add to the Queue (6, 2),(6, 1) for AC- check


Add to the Queue (7, 1),(6, 1) for AC- check


Add to the Queue (6, 5),(6, 1) for AC- check


Add to the Queue (6, 8),(6, 1) for AC- check


Add to the Queue (8, 2),(6, 1) for AC- check


Add to the Queue (0, 1),(6, 1) for AC- check


Add to the Queue (2, 1),(6, 1) for AC- check


Add to the Queue (7, 0),(6, 1) for AC- check


Add to the Queue (6, 4),(6, 1) for AC- check


Add to the Queue (6, 7),(6, 1) for AC- check


Add to the Queue (4, 1),(6, 1) for AC- check


Add to the Queue (8, 1),(6, 1) for AC- check


Add to the Queue (1, 1),(6, 1) for AC- check


Add to the Queue (7, 2),(6, 1) for AC- check


Add to the Queue (6, 0),(6, 1) for AC- check


Add to the Queue (6, 6),(6, 1) for AC- check


Add to the Queue (6, 3),(6, 1) for AC- check


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 5, 6}.


Revised: The value 6 is removed from the domain of node (4, 1), Now the domain is {1, 5}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {9, 7}.


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {2, 4}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 6}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {1, 2}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {9}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (4, 8) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {9, 2}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {4, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {4, 7}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 9}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {1, 2, 7}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {1, 5}.


Processing (4, 8) <---- (4, 7) ,Domain of node (4, 7) is {9, 6}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {9}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4}.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {3, 7}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {9, 6, 7}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 4, 5}.


Revised: The value 4 is removed from the domain of node (7, 1), Now the domain is {1, 2, 5}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {4, 7}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {7}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 6, 7}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {8, 9}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {8, 9, 3, 6}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 5}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {9}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {1, 5, 9}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {8, 9, 3, 7}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {9, 4}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {9}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (7, 6),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {9, 2}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {2}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (4, 6),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (5, 6),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (2, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 9, 2}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {8, 2}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {1, 5, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {1, 5}.


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 9, 3, 6}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {8, 3, 6}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {1, 5}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 4}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {2, 3, 6}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {9, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {9, 6}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {8, 2}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {6}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {1, 2}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {2, 3, 6}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {8, 9, 3, 7}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {8, 9, 3}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {9, 6}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {6}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (6, 8),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 4),(6, 2) for AC- check


Add to the Queue (6, 7),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (7, 2),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 2}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6}.


Processing (6, 6) <---- (7, 6) ,Domain of node (7, 6) is {9, 4}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {4}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (8, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {2, 3, 6}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {8, 9, 3}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {8, 3}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4}.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 2}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {8}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {9, 7}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {6}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {9, 7}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 4}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {4}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {2, 3, 6}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {3, 6}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {3, 7}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 5}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {1, 7}.


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {8, 9}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {8, 3, 6}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {8, 3}.


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {9, 7}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 5, 9}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {8, 3}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (7, 6) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {2}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 5}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {8, 9}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {8, 3}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {3, 6}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {1}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {1, 5, 9}.


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {1, 2}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 5}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {8, 9}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {9}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (6, 0),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 3}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {3}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (6, 2),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {9}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {3, 6}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {1, 5, 9}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {9, 7}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {6}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {7}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {9}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {9, 7}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {3, 7}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 5}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 7}.


Revised: The value 9 is removed from the domain of node (5, 0), Now the domain is {7}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {1, 5, 9}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {1, 5}.


Processing (7, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 3}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (6, 7) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {9}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {3, 6}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {6}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (8, 1),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {8, 3}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {8}.


Domain of (6, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(6, 0) for AC- check


Add to the Queue (8, 0),(6, 0) for AC- check


Add to the Queue (1, 0),(6, 0) for AC- check


Add to the Queue (6, 2),(6, 0) for AC- check


Add to the Queue (7, 1),(6, 0) for AC- check


Add to the Queue (6, 5),(6, 0) for AC- check


Add to the Queue (6, 8),(6, 0) for AC- check


Add to the Queue (3, 0),(6, 0) for AC- check


Add to the Queue (5, 0),(6, 0) for AC- check


Add to the Queue (8, 2),(6, 0) for AC- check


Add to the Queue (6, 1),(6, 0) for AC- check


Add to the Queue (7, 0),(6, 0) for AC- check


Add to the Queue (6, 4),(6, 0) for AC- check


Add to the Queue (0, 0),(6, 0) for AC- check


Add to the Queue (8, 1),(6, 0) for AC- check


Add to the Queue (2, 0),(6, 0) for AC- check


Add to the Queue (7, 2),(6, 0) for AC- check


Add to the Queue (6, 6),(6, 0) for AC- check


Add to the Queue (6, 3),(6, 0) for AC- check


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {3, 7}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {3}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(8, 0) for AC- check


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {1, 5}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {9, 7}.


Revised: The value 7 is removed from the domain of node (5, 2), Now the domain is {9}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 1),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {1}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {7}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {9}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 7) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 5}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {1}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {7}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Processing (8, 0) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 5}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {6}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {5}.


Processing (5, 2) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {2}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {1, 5}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {8}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


End of Binary Constraints, Checks done for cell: (4,0).


After make inferences we see that the domain of cell (4, 7) is {9}


After make inferences we see that the domain of cell (4, 8) is {6}


After make inferences we see that the domain of cell (5, 0) is {7}


After make inferences we see that the domain of cell (5, 1) is {6}


After make inferences we see that the domain of cell (5, 2) is {9}


After make inferences we see that the domain of cell (5, 7) is {2}


After make inferences we see that the domain of cell (5, 8) is {4}


After make inferences we see that the domain of cell (6, 0) is {8}


After make inferences we see that the domain of cell (6, 1) is {4}


After make inferences we see that the domain of cell (6, 2) is {6}


After make inferences we see that the domain of cell (6, 6) is {9}


After make inferences we see that the domain of cell (6, 7) is {3}


After make inferences we see that the domain of cell (6, 8) is {7}


After make inferences we see that the domain of cell (7, 0) is {9}


After make inferences we see that the domain of cell (7, 6) is {4}


After make inferences we see that the domain of cell (7, 7) is {8}


After make inferences we see that the domain of cell (8, 0) is {3}


After make inferences we see that the domain of cell (8, 7) is {6}


Adding to board in cell :(4, 7),value :9


Adding to board in cell :(4, 8),value :6


Adding to board in cell :(5, 0),value :7


Adding to board in cell :(5, 1),value :6


Adding to board in cell :(5, 2),value :9


Adding to board in cell :(5, 7),value :2


Adding to board in cell :(5, 8),value :4


Adding to board in cell :(6, 0),value :8


Adding to board in cell :(6, 1),value :4


Adding to board in cell :(6, 2),value :6


Adding to board in cell :(6, 6),value :9


Adding to board in cell :(6, 7),value :3


Adding to board in cell :(6, 8),value :7


Adding to board in cell :(7, 0),value :9


Adding to board in cell :(7, 6),value :4


Adding to board in cell :(7, 7),value :8


Adding to board in cell :(8, 0),value :3


Adding to board in cell :(8, 7),value :6


Go deep in the search tree parent cell (4,0) with value 2 ,current depth:35


MRV cell is (4, 1)


Attempting to fill cell (4, 1) with domain values: [1, 5]


Trying value 1 for cell (4, 1), current depth :36


Applying uniaray constraint.


Orginal domain of cell (4, 1) before reduction {1, 5}.


The domain of cell (4, 1) is reduced to 1.


Applying Binary constraint.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 5}.


Revised: The value 1 is removed from the domain of node (7, 1), Now the domain is {2, 5}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 5}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {5}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 7),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {7}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {6}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {9}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {2}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {9}.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {8}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {4}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {7}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {6}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {9}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {7}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 5}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {1}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (8, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 5}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {5}.


Domain of (7, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(7, 1) for AC- check


Add to the Queue (5, 1),(7, 1) for AC- check


Add to the Queue (8, 0),(7, 1) for AC- check


Add to the Queue (7, 4),(7, 1) for AC- check


Add to the Queue (6, 2),(7, 1) for AC- check


Add to the Queue (7, 7),(7, 1) for AC- check


Add to the Queue (8, 2),(7, 1) for AC- check


Add to the Queue (0, 1),(7, 1) for AC- check


Add to the Queue (2, 1),(7, 1) for AC- check


Add to the Queue (6, 1),(7, 1) for AC- check


Add to the Queue (7, 0),(7, 1) for AC- check


Add to the Queue (7, 3),(7, 1) for AC- check


Add to the Queue (7, 6),(7, 1) for AC- check


Add to the Queue (4, 1),(7, 1) for AC- check


Add to the Queue (1, 1),(7, 1) for AC- check


Add to the Queue (7, 2),(7, 1) for AC- check


Add to the Queue (6, 0),(7, 1) for AC- check


Add to the Queue (7, 5),(7, 1) for AC- check


Add to the Queue (7, 8),(7, 1) for AC- check


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {1, 2}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Add to the Queue (7, 8),(8, 8) for AC- check


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 1) <---- (8, 7) ,Domain of node (8, 7) is {6}.


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {9}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {1}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 7}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {7}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (6, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {1, 2}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {2}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {8}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {6}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {7}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {1}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {9}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {1}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {6}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {7}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {6}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (8, 8) <---- (7, 8) ,Domain of node (7, 8) is {2}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {2}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {9}.


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {8}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {9}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {6}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {5}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {8}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {9}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {3}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {8}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {6}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {1}.


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {6}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {9}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {6}.


End of Binary Constraints, Checks done for cell: (4,1).


After make inferences we see that the domain of cell (4, 2) is {5}


After make inferences we see that the domain of cell (7, 1) is {5}


After make inferences we see that the domain of cell (7, 2) is {1}


After make inferences we see that the domain of cell (7, 8) is {2}


After make inferences we see that the domain of cell (8, 1) is {2}


After make inferences we see that the domain of cell (8, 2) is {7}


After make inferences we see that the domain of cell (8, 8) is {1}


Adding to board in cell :(4, 2),value :5


Adding to board in cell :(7, 1),value :5


Adding to board in cell :(7, 2),value :1


Adding to board in cell :(7, 8),value :2


Adding to board in cell :(8, 1),value :2


Adding to board in cell :(8, 2),value :7


Adding to board in cell :(8, 8),value :1


Go deep in the search tree parent cell (4,1) with value 1 ,current depth:36


MRV cell is None


End of applying Backtracking.


after make cell (1,0) = 5


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (1, 0) is reduced to 5.


The domain of cell (1, 7) is reduced to 4.


The domain of cell (2, 2) is reduced to 4.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


The domain of cell (5, 6) is reduced to 3.


The domain of cell (6, 4) is reduced to 2.


Apply Binary constraint to the Initial Board


All posible arcs to (1,0) are [(4, 0), (8, 0), (0, 2), (2, 2), (1, 6), (1, 3), (3, 0), (5, 0), (0, 1), (1, 2), (2, 1), (1, 5), (1, 8), (7, 0), (0, 0), (1, 1), (2, 0), (1, 4), (1, 7), (6, 0)]


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


All posible arcs to (1,7) are [(3, 7), (5, 7), (1, 0), (1, 6), (0, 8), (1, 3), (2, 8), (7, 7), (0, 7), (1, 2), (2, 7), (1, 5), (1, 8), (6, 7), (4, 7), (8, 7), (1, 1), (1, 4), (0, 6), (2, 6)]


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (5,6) are [(3, 7), (5, 4), (4, 6), (5, 1), (5, 7), (8, 6), (1, 6), (5, 0), (4, 8), (3, 6), (5, 3), (7, 6), (4, 7), (5, 2), (3, 8), (5, 5), (5, 8), (0, 6), (2, 6), (6, 6)]


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


All posible arcs to (6,4) are [(3, 4), (5, 4), (8, 3), (7, 4), (6, 2), (6, 5), (6, 8), (8, 5), (2, 4), (0, 4), (6, 1), (7, 3), (6, 7), (4, 4), (8, 4), (1, 4), (6, 0), (6, 6), (7, 5), (6, 3)]


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 0): {5}, (1, 1): {1, 2, 3, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 6, 7, 8, 9}, (1, 3): {2, 3, 6, 7, 8, 9}, (1, 4): {1, 3, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 6, 7, 8, 9}, (1, 6): {1, 2, 6, 7, 8, 9}, (1, 7): {4}, (1, 8): {1, 2, 3, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {2, 3, 5, 6, 7, 8, 9}, (3, 4): {3, 5, 6, 7, 8, 9}, (3, 5): {2, 3, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 5, 6, 7, 8, 9}, (5, 0): {2, 4, 6, 7, 8, 9}, (5, 1): {2, 4, 5, 6, 7, 8, 9}, (5, 2): {2, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {5, 6, 7, 8, 9}, (5, 5): {2, 5, 6, 7, 8, 9}, (5, 6): {3}, (5, 7): {2, 5, 6, 7, 8, 9}, (5, 8): {2, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 3, 4, 6, 7, 8, 9}, (6, 1): {1, 3, 4, 5, 6, 7, 8, 9}, (6, 2): {1, 3, 5, 6, 7, 8, 9}, (6, 3): {3, 4, 5, 6, 7, 8, 9}, (6, 4): {2}, (6, 5): {1, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 3, 5, 6, 7, 8, 9}, (6, 8): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (7, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (7, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 3): {3, 4, 5, 6, 7, 8, 9}, (7, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 5): {1, 3, 5, 6, 7, 8, 9}, (7, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 5, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 3): {3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [6, 7, 8, 9, 5]


Trying value 6 for cell (5, 4), current depth :0


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {5, 6, 7, 8, 9}.


The domain of cell (5, 4) is reduced to 6.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 4), Now the domain is {3, 5, 7, 8, 9}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {2, 5, 7, 8, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {2, 4, 7, 8, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {2, 5, 7, 8, 9}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7, 8, 9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {2, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 3, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 6 ,current depth:0


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [7, 8, 9, 3, 1]


Trying value 7 for cell (1, 4), current depth :1


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {1, 3, 7, 8, 9}.


The domain of cell (1, 4) is reduced to 7.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 4), Now the domain is {3, 5, 8, 9}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 8, 9}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 8, 9}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 8, 9}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 4), Now the domain is {3, 5, 8, 9}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,4).


Go deep in the search tree parent cell (1,4) with value 7 ,current depth:1


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [8, 9, 5, 3]


Trying value 8 for cell (3, 4), current depth :2


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {8, 9, 3, 5}.


The domain of cell (3, 4) is reduced to 8.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 5, 6, 7, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 7, 9}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 9}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 7, 9}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 3, 5}.


Revised: The value 8 is removed from the domain of node (4, 4), Now the domain is {9, 3, 5}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7, 9}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 8 ,current depth:2


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [9, 5, 3]


Trying value 9 for cell (4, 4), current depth :3


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {9, 3, 5}.


The domain of cell (4, 4) is reduced to 9.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7, 9}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 7, 9}.


Revised: The value 9 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 7}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 9}.


Revised: The value 9 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 7, 9}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 7}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {9, 2, 5, 7}.


Revised: The value 9 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 9 ,current depth:3


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [3, 1, 5]


Trying value 3 for cell (2, 4), current depth :4


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {1, 3, 5}.


The domain of cell (2, 4) is reduced to 3.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 5), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 5), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {2, 6, 8, 9}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (7, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 3 ,current depth:4


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [1, 5, 4]


Trying value 1 for cell (0, 4), current depth :5


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {1, 4, 5}.


The domain of cell (0, 4) is reduced to 1.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 5), Now the domain is {2, 5, 6, 8, 9}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 5, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {2, 5, 6, 8, 9}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2, 6}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (7, 4), Now the domain is {4, 5}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {2, 6, 8, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {4, 5}.


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 8, 9}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,4).


Go deep in the search tree parent cell (0,4) with value 1 ,current depth:5


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [5, 4]


Trying value 5 for cell (7, 4), current depth :6


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {4, 5}.


The domain of cell (7, 4) is reduced to 5.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 3), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {4, 5}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {4}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (0, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 3), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (8, 4) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {3, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (7,4).


After make inferences we see that the domain of cell (8, 4) is {4}


Adding to board in cell :(8, 4),value :4


Go deep in the search tree parent cell (7,4) with value 5 ,current depth:6


MRV cell is (5, 5)


Attempting to fill cell (5, 5) with domain values: [2, 7, 5]


Trying value 2 for cell (5, 5), current depth :7


Applying uniaray constraint.


Orginal domain of cell (5, 5) before reduction {2, 5, 7}.


The domain of cell (5, 5) is reduced to 2.


Applying Binary constraint.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {3, 5, 7}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {4, 5, 7, 8, 9}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {2, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {5, 7, 8, 9}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {5, 6, 8, 9}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {2, 5, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {5, 6, 8, 9}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 6, 7, 8, 9}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 7}.


Revised: The value 2 is removed from the domain of node (3, 3), Now the domain is {3, 5, 7}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {4, 7, 8, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 6, 7, 8, 9}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {8, 9, 2, 6}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {8, 9, 6}.


Processing (5, 5) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 7}.


Revised: The value 2 is removed from the domain of node (3, 5), Now the domain is {3, 5, 7}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {5, 7, 8, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {4, 5, 7, 8, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,5).


Go deep in the search tree parent cell (5,5) with value 2 ,current depth:7


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [6, 8, 9]


Trying value 6 for cell (1, 5), current depth :8


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {8, 9, 6}.


The domain of cell (1, 5) is reduced to 6.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {8, 9, 5, 6}.


Revised: The value 6 is removed from the domain of node (0, 5), Now the domain is {8, 9, 5}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 8, 9}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {8, 9, 5, 6}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {8, 9, 5}.


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2, 6}.


Revised: The value 6 is removed from the domain of node (1, 3), Now the domain is {8, 9, 2}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {1, 3, 7, 8, 9}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {1, 3, 7, 8, 9}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 8, 9}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 8, 9}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {3, 5, 7}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 8, 9}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 8, 9}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {2, 5, 8, 9}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 5), Now the domain is {1, 3, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,5).


Go deep in the search tree parent cell (1,5) with value 6 ,current depth:8


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [8, 9, 5]


Trying value 8 for cell (0, 5), current depth :9


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {8, 9, 5}.


The domain of cell (0, 5) is reduced to 8.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 9}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {2, 3, 5, 6, 7, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {8, 9, 5}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {9, 5}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (1, 3), Now the domain is {9, 2}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {1, 3, 7, 9}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {1, 3, 7, 9}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 9}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 7), Now the domain is {2, 3, 5, 6, 7, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {3, 5, 7}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 9}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 9}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 6), Now the domain is {2, 5, 6, 7, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {8, 9, 2, 5}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {9, 2, 5}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {1, 3, 7, 9}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 8 ,current depth:9


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [9, 2]


Trying value 9 for cell (1, 3), current depth :10


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {9, 2}.


The domain of cell (1, 3) is reduced to 9.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {3, 5, 7}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {3, 6, 7, 8}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {8, 1, 2, 9}.


Revised: The value 9 is removed from the domain of node (1, 6), Now the domain is {8, 1, 2}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {9, 5}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {5}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (1, 5),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {3, 5, 7}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 8}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 8}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {3, 6, 7, 8}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 8, 9}.


Revised: The value 9 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 8}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 2, 4, 5}.


Revised: The value 9 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {9, 2, 5}.


Revised: The value 9 is removed from the domain of node (2, 3), Now the domain is {2, 5}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {3, 6, 7, 8}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 9, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 9, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 7, 8, 9}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 7), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {3, 5, 7}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {3, 7}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {2, 4}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 7, 8, 9}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {2, 5}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {2}.


Domain of (2, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(2, 3) for AC- check


Add to the Queue (8, 3),(2, 3) for AC- check


Add to the Queue (0, 5),(2, 3) for AC- check


Add to the Queue (2, 2),(2, 3) for AC- check


Add to the Queue (1, 3),(2, 3) for AC- check


Add to the Queue (2, 8),(2, 3) for AC- check


Add to the Queue (3, 3),(2, 3) for AC- check


Add to the Queue (5, 3),(2, 3) for AC- check


Add to the Queue (2, 4),(2, 3) for AC- check


Add to the Queue (0, 4),(2, 3) for AC- check


Add to the Queue (2, 1),(2, 3) for AC- check


Add to the Queue (2, 7),(2, 3) for AC- check


Add to the Queue (1, 5),(2, 3) for AC- check


Add to the Queue (7, 3),(2, 3) for AC- check


Add to the Queue (0, 3),(2, 3) for AC- check


Add to the Queue (2, 0),(2, 3) for AC- check


Add to the Queue (1, 4),(2, 3) for AC- check


Add to the Queue (2, 6),(2, 3) for AC- check


Add to the Queue (6, 3),(2, 3) for AC- check


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 9, 7}.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {3, 5, 7}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 6, 7, 8}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {1, 6, 7, 8, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {3, 5, 7}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {1, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {1, 6, 7, 8, 9}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {4}.


Domain of (0, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(0, 3) for AC- check


Add to the Queue (0, 2),(0, 3) for AC- check


Add to the Queue (8, 3),(0, 3) for AC- check


Add to the Queue (0, 5),(0, 3) for AC- check


Add to the Queue (0, 8),(0, 3) for AC- check


Add to the Queue (2, 5),(0, 3) for AC- check


Add to the Queue (1, 3),(0, 3) for AC- check


Add to the Queue (3, 3),(0, 3) for AC- check


Add to the Queue (5, 3),(0, 3) for AC- check


Add to the Queue (0, 1),(0, 3) for AC- check


Add to the Queue (0, 7),(0, 3) for AC- check


Add to the Queue (2, 4),(0, 3) for AC- check


Add to the Queue (0, 4),(0, 3) for AC- check


Add to the Queue (1, 5),(0, 3) for AC- check


Add to the Queue (7, 3),(0, 3) for AC- check


Add to the Queue (0, 0),(0, 3) for AC- check


Add to the Queue (1, 4),(0, 3) for AC- check


Add to the Queue (0, 6),(0, 3) for AC- check


Add to the Queue (6, 3),(0, 3) for AC- check


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 0), Now the domain is {1, 6, 7, 8, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {1, 6, 7, 8, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 6, 7, 8}.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3, 5, 7}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 9}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 6, 7, 8}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 5, 6, 7, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {3, 5, 7}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 9}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 5, 6, 7, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 9}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {2, 5, 6, 7, 9}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,3).


After make inferences we see that the domain of cell (0, 3) is {4}


After make inferences we see that the domain of cell (2, 3) is {2}


After make inferences we see that the domain of cell (2, 5) is {5}


Adding to board in cell :(0, 3),value :4


Adding to board in cell :(2, 3),value :2


Adding to board in cell :(2, 5),value :5


Go deep in the search tree parent cell (1,3) with value 9 ,current depth:10


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [7, 3]


Trying value 7 for cell (3, 5), current depth :11


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {3, 7}.


The domain of cell (3, 5) is reduced to 7.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {3, 5, 7}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {3, 5}.


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 5, 6, 9}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 6, 9}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (6, 5), Now the domain is {1, 3, 9}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 9}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {3, 5, 7}.


Revised: The value 7 is removed from the domain of node (3, 3), Now the domain is {3, 5}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 9}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (8, 5), Now the domain is {1, 3, 9}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 9}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 9}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (7, 5), Now the domain is {1, 3, 9}.


End of Binary Constraints, Checks done for cell: (3,5).


Go deep in the search tree parent cell (3,5) with value 7 ,current depth:11


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [3, 5]


Trying value 3 for cell (3, 3), current depth :12


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {3, 5}.


The domain of cell (3, 3) is reduced to 3.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {3, 5}.


Revised: The value 3 is removed from the domain of node (4, 3), Now the domain is {5}.


Domain of (4, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 3) for AC- check


Add to the Queue (3, 4),(4, 3) for AC- check


Add to the Queue (5, 4),(4, 3) for AC- check


Add to the Queue (4, 6),(4, 3) for AC- check


Add to the Queue (8, 3),(4, 3) for AC- check


Add to the Queue (1, 3),(4, 3) for AC- check


Add to the Queue (4, 2),(4, 3) for AC- check


Add to the Queue (4, 5),(4, 3) for AC- check


Add to the Queue (4, 8),(4, 3) for AC- check


Add to the Queue (5, 3),(4, 3) for AC- check


Add to the Queue (7, 3),(4, 3) for AC- check


Add to the Queue (4, 1),(4, 3) for AC- check


Add to the Queue (4, 7),(4, 3) for AC- check


Add to the Queue (3, 5),(4, 3) for AC- check


Add to the Queue (4, 4),(4, 3) for AC- check


Add to the Queue (5, 5),(4, 3) for AC- check


Add to the Queue (0, 3),(4, 3) for AC- check


Add to the Queue (2, 3),(4, 3) for AC- check


Add to the Queue (6, 3),(4, 3) for AC- check


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 9}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {1, 2, 4, 5, 6, 9}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 9}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {8, 6, 7}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 9}.


Revised: The value 3 is removed from the domain of node (3, 0), Now the domain is {1, 2, 4, 6, 9}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 9}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {8, 6, 7}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 9}.


Revised: The value 3 is removed from the domain of node (3, 2), Now the domain is {1, 2, 5, 6, 9}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 9}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {8, 6, 7}.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 6, 7}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 6, 7}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 6, 7}.


End of Binary Constraints, Checks done for cell: (3,3).


After make inferences we see that the domain of cell (4, 3) is {5}


Adding to board in cell :(4, 3),value :5


Go deep in the search tree parent cell (3,3) with value 3 ,current depth:12


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [1, 8, 2]


Trying value 1 for cell (1, 6), current depth :13


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {8, 1, 2}.


The domain of cell (1, 6) is reduced to 1.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {2, 6, 7, 8}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 5, 6, 7, 9}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {6, 7, 8, 9}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {2, 4, 5, 6, 9}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 5, 6, 7, 9}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {8, 1, 2, 3}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {8, 2, 3}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {6, 7, 8, 9}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {8, 1, 2, 3}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {8, 2, 3}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {8, 1, 2, 3}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {8, 2, 3}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {2, 5, 6, 7, 9}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 6), Now the domain is {6, 7, 8, 9}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {4, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 1 ,current depth:13


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [8, 2, 3]


Trying value 8 for cell (1, 1), current depth :14


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {8, 2, 3}.


The domain of cell (1, 1) is reduced to 8.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 9}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {4, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 1), Now the domain is {4, 5, 7, 9}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 9}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 1), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 9}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {8, 2, 3}.


Revised: The value 8 is removed from the domain of node (1, 2), Now the domain is {2, 3}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {1, 6, 7, 9}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 9}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {8, 2, 3}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {2, 3}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 9}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {1, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 0), Now the domain is {1, 6, 7, 9}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 8 ,current depth:14


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [2, 3]


Trying value 2 for cell (1, 2), current depth :15


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {2, 3}.


The domain of cell (1, 2) is reduced to 2.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {3, 6, 7, 9}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {1, 3, 6, 7, 8}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 1), Now the domain is {3, 6, 7, 9}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 9, 6, 7}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {2, 3}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {3}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (1, 7),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 5, 6, 9}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 5, 6, 9}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 7}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 0), Now the domain is {3, 6, 7, 9}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 9, 6, 7}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {2, 5, 6, 7, 9}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 6, 7}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {2, 5, 6, 7, 9}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 9, 6, 7}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 9}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {4, 5, 7, 8, 9}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {2, 5, 6, 7, 9}.


Processing (1, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 6, 7}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,2).


After make inferences we see that the domain of cell (1, 8) is {3}


Adding to board in cell :(1, 8),value :3


Go deep in the search tree parent cell (1,2) with value 2 ,current depth:15


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [6, 7, 8]


Trying value 6 for cell (6, 3), current depth :16


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {8, 6, 7}.


The domain of cell (6, 3) is reduced to 6.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {8, 7}.


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 9}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {1, 4, 5, 7, 8, 9}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 9}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 7, 9}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {8, 7}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {4, 5, 7, 8, 9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 9}.


End of Binary Constraints, Checks done for cell: (6,3).


Go deep in the search tree parent cell (6,3) with value 6 ,current depth:16


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [7, 8]


Trying value 7 for cell (7, 3), current depth :17


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {8, 7}.


The domain of cell (7, 3) is reduced to 7.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 7}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {8}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (7, 1), Now the domain is {1, 2, 3, 4, 6, 9}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 9}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 9}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {1, 2, 3, 4, 6, 8, 9}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 8, 9}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {1, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {1, 3, 6, 8, 9}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 9}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {6}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {1, 2, 4, 6, 8, 9}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {2, 5, 6, 7, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {9}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 9}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 9}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 9}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {6}.


End of Binary Constraints, Checks done for cell: (7,3).


After make inferences we see that the domain of cell (8, 3) is {8}


Adding to board in cell :(8, 3),value :8


Go deep in the search tree parent cell (7,3) with value 7 ,current depth:17


MRV cell is (6, 5)


Attempting to fill cell (6, 5) with domain values: [9, 1, 3]


Trying value 9 for cell (6, 5), current depth :18


Applying uniaray constraint.


Orginal domain of cell (6, 5) before reduction {1, 3, 9}.


The domain of cell (6, 5) is reduced to 9.


Applying Binary constraint.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 7, 8}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {1, 4, 5, 7, 8}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 9}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {1, 3}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 7}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 7, 8}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 7, 8}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 6), Now the domain is {4, 5, 7, 8}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 9}.


Revised: The value 9 is removed from the domain of node (7, 5), Now the domain is {1, 3}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {6}.


End of Binary Constraints, Checks done for cell: (6,5).


Go deep in the search tree parent cell (6,5) with value 9 ,current depth:18


MRV cell is (7, 5)


Attempting to fill cell (7, 5) with domain values: [1, 3]


Trying value 1 for cell (7, 5), current depth :19


Applying uniaray constraint.


Orginal domain of cell (7, 5) before reduction {1, 3}.


The domain of cell (7, 5) is reduced to 1.


Applying Binary constraint.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {1, 2, 3, 4, 6, 9}.


Revised: The value 1 is removed from the domain of node (7, 1), Now the domain is {2, 3, 4, 6, 9}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 8, 9}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 3}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {3}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 8, 9}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 8, 9}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {1, 3, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {3, 6, 8, 9}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {6}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 4, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {2, 4, 6, 8, 9}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (8, 0), Now the domain is {1, 2, 6, 7, 9}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6, 7, 9}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {1, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 5, 6, 7, 9}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 6, 7, 9}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {6}.


End of Binary Constraints, Checks done for cell: (7,5).


After make inferences we see that the domain of cell (8, 5) is {3}


Adding to board in cell :(8, 5),value :3


Go deep in the search tree parent cell (7,5) with value 1 ,current depth:19


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [6, 7, 9, 3]


Trying value 6 for cell (0, 0), current depth :20


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {9, 3, 6, 7}.


The domain of cell (0, 0) is reduced to 6.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 7, 8}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {1, 2, 7, 9}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {9, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 2), Now the domain is {9, 3, 7}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {2, 5, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {2, 5, 7, 9}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 4, 6, 9}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {1, 2, 4, 9}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 4, 7}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {9, 3, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 1), Now the domain is {9, 3, 7}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {2, 5, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {2, 5, 7, 9}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 7, 9, 6}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {1, 7, 9}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 8, 9}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 7, 9, 6}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {1, 7, 9}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {2, 5, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (0, 6), Now the domain is {2, 5, 7, 9}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 7, 8}.


End of Binary Constraints, Checks done for cell: (0,0).


Go deep in the search tree parent cell (0,0) with value 6 ,current depth:20


MRV cell is (0, 1)


Attempting to fill cell (0, 1) with domain values: [7, 9, 3]


Trying value 7 for cell (0, 1), current depth :21


Applying uniaray constraint.


Orginal domain of cell (0, 1) before reduction {9, 3, 7}.


The domain of cell (0, 1) is reduced to 7.


Applying Binary constraint.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 9}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {9, 4, 5}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {9, 3, 7}.


Revised: The value 7 is removed from the domain of node (0, 2), Now the domain is {9, 3}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 5, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {9, 2, 5}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6, 9}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 5, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {9, 2, 5}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {1, 9}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {1, 2, 5, 6, 9}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {1, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {1, 9}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 5, 7}.


Revised: The value 7 is removed from the domain of node (0, 6), Now the domain is {9, 2, 5}.


End of Binary Constraints, Checks done for cell: (0,1).


Go deep in the search tree parent cell (0,1) with value 7 ,current depth:21


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [9, 3]


Trying value 9 for cell (0, 2), current depth :22


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {9, 3}.


The domain of cell (0, 2) is reduced to 9.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 5}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {2, 5}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 7, 8}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 3, 6, 7, 8}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 5, 6, 7}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 5}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {2, 5}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 9}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {1}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 0),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 5, 6}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 7}.


Revised: The value 9 is removed from the domain of node (5, 2), Now the domain is {8, 5, 7}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 9}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {1}.


Domain of (2, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(2, 0) for AC- check


Add to the Queue (8, 0),(2, 0) for AC- check


Add to the Queue (2, 2),(2, 0) for AC- check


Add to the Queue (1, 0),(2, 0) for AC- check


Add to the Queue (2, 5),(2, 0) for AC- check


Add to the Queue (2, 8),(2, 0) for AC- check


Add to the Queue (3, 0),(2, 0) for AC- check


Add to the Queue (5, 0),(2, 0) for AC- check


Add to the Queue (0, 1),(2, 0) for AC- check


Add to the Queue (2, 4),(2, 0) for AC- check


Add to the Queue (1, 2),(2, 0) for AC- check


Add to the Queue (2, 1),(2, 0) for AC- check


Add to the Queue (2, 7),(2, 0) for AC- check


Add to the Queue (7, 0),(2, 0) for AC- check


Add to the Queue (0, 0),(2, 0) for AC- check


Add to the Queue (1, 1),(2, 0) for AC- check


Add to the Queue (2, 3),(2, 0) for AC- check


Add to the Queue (2, 6),(2, 0) for AC- check


Add to the Queue (6, 0),(2, 0) for AC- check


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 5}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {2, 5}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 3, 6}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {8, 3, 6}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {2, 4, 5, 6, 9}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4, 5}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 6, 7}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6, 9}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 9, 6, 7}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {3, 4, 5}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {2, 3, 6}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {2, 5, 6, 9}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (2, 1) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (0,2).


Undo operation ,current depth : 22.


Remove the assigment from the board ,(0,2)=0.


No inferences made from cell (0,2) to remove it.


Trying value 3 for cell (0, 2), current depth :22


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {9, 3}.


The domain of cell (0, 2) is reduced to 3.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 5}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {1, 5, 7, 8}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 6, 7, 8}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 6, 7, 9}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 5}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 9}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6, 9}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 7}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 9}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 5}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 3, 6}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {8, 9, 6}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 3 ,current depth:22


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [9, 1]


Trying value 9 for cell (2, 0), current depth :23


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {1, 9}.


The domain of cell (2, 0) is reduced to 9.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 7, 8}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 9, 7}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {1, 2, 7}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {8, 9, 6, 7}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {8, 6, 7}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 4, 9}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {1, 2, 4}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 4, 7}.


Revised: The value 9 is removed from the domain of node (5, 0), Now the domain is {8, 4, 7}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 9}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {1}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {8, 9, 6, 7}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {8, 6, 7}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 8}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {8, 9, 6, 7}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {8, 6, 7}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 7, 8}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 4, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {2, 4, 5, 6, 9}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4, 5}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 6, 7}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6, 9}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 6, 7}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {3, 4, 5}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {2, 3, 6}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {2, 5, 6, 9}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {8, 6, 7}.


End of Binary Constraints, Checks done for cell: (2,0).


After make inferences we see that the domain of cell (2, 1) is {1}


Adding to board in cell :(2, 1),value :1


Go deep in the search tree parent cell (2,0) with value 9 ,current depth:23


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [2, 5, 9]


Trying value 2 for cell (0, 6), current depth :24


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {9, 2, 5}.


The domain of cell (0, 6) is reduced to 2.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (4, 6), Now the domain is {8, 6, 7}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {2, 5, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {5, 6, 7, 9}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 5}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {9, 5}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 6, 7}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {2, 4, 5, 6, 9}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {4, 5, 6, 9}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 5}.


Revised: The value 2 is removed from the domain of node (0, 7), Now the domain is {9, 5}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {8, 6, 7}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {4, 6, 8, 9}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {8, 6, 7}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 4, 5, 7}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 2 ,current depth:24


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [5, 9]


Trying value 5 for cell (0, 7), current depth :25


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {9, 5}.


The domain of cell (0, 7) is reduced to 5.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 9}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {1, 2, 6, 9}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 5, 7}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {8, 9, 7}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {9, 5}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {9}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {8, 6, 7}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 8, 9}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {8, 6, 7}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 7, 8}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 7, 8}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {8, 6, 7}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {8}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 6, 7}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 7, 8}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 5, 6, 7}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {1}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 6, 7}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {4, 5, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {4, 5, 7, 8}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {8, 6, 7}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {2, 4, 6, 8}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {9}


Adding to board in cell :(0, 8),value :9


Go deep in the search tree parent cell (0,7) with value 5 ,current depth:25


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [6, 7, 8]


Trying value 6 for cell (2, 6), current depth :26


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {8, 6, 7}.


The domain of cell (2, 6) is reduced to 6.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {8, 7}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 6), Now the domain is {9, 5, 7}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {8, 7}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 5, 6}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {9, 4, 5}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {8, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 7), Now the domain is {8, 7}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 9, 4, 6}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {8, 9, 4}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 4, 5, 7}.


End of Binary Constraints, Checks done for cell: (2,6).


Go deep in the search tree parent cell (2,6) with value 6 ,current depth:26


MRV cell is (2, 7)


Attempting to fill cell (2, 7) with domain values: [7, 8]


Trying value 7 for cell (2, 7), current depth :27


Applying uniaray constraint.


Orginal domain of cell (2, 7) before reduction {8, 7}.


The domain of cell (2, 7) is reduced to 7.


Applying Binary constraint.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 9}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {8, 9}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {8, 7}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {8}.


Domain of (2, 8) is one value ,we need to add AC constraint.


Add to the Queue (2, 2),(2, 8) for AC- check


Add to the Queue (1, 6),(2, 8) for AC- check


Add to the Queue (0, 8),(2, 8) for AC- check


Add to the Queue (2, 5),(2, 8) for AC- check


Add to the Queue (6, 8),(2, 8) for AC- check


Add to the Queue (4, 8),(2, 8) for AC- check


Add to the Queue (8, 8),(2, 8) for AC- check


Add to the Queue (2, 4),(2, 8) for AC- check


Add to the Queue (0, 7),(2, 8) for AC- check


Add to the Queue (2, 1),(2, 8) for AC- check


Add to the Queue (1, 8),(2, 8) for AC- check


Add to the Queue (3, 8),(2, 8) for AC- check


Add to the Queue (5, 8),(2, 8) for AC- check


Add to the Queue (2, 0),(2, 8) for AC- check


Add to the Queue (0, 6),(2, 8) for AC- check


Add to the Queue (2, 3),(2, 8) for AC- check


Add to the Queue (1, 7),(2, 8) for AC- check


Add to the Queue (2, 6),(2, 8) for AC- check


Add to the Queue (7, 8),(2, 8) for AC- check


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 8, 9}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 1, 3, 7}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {8, 1, 3}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 8}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {1, 2, 6, 9}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {5}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 7, 8}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {1, 4, 5, 7}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 6, 7}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {8, 4, 5, 7}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {4, 5, 7}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 2, 4, 6}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2, 4, 6}.


End of Binary Constraints, Checks done for cell: (2,7).


After make inferences we see that the domain of cell (2, 8) is {8}


Adding to board in cell :(2, 8),value :8


Go deep in the search tree parent cell (2,7) with value 7 ,current depth:27


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [7, 8]


Trying value 7 for cell (4, 6), current depth :28


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {8, 7}.


The domain of cell (4, 6) is reduced to 7.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 8}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 9}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 9}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 5, 7}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {9, 5}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {8, 1, 6}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 5}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 9, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {2, 3, 6}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 2, 6}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {4, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {4, 5}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 4, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {8, 4, 5}.


End of Binary Constraints, Checks done for cell: (4,6).


Go deep in the search tree parent cell (4,6) with value 7 ,current depth:28


MRV cell is (5, 7)


Attempting to fill cell (5, 7) with domain values: [8, 9]


Trying value 8 for cell (5, 7), current depth :29


Applying uniaray constraint.


Orginal domain of cell (5, 7) before reduction {8, 9}.


The domain of cell (5, 7) is reduced to 8.


Applying Binary constraint.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 9}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {9, 4, 5}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 9}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {8, 4, 7}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {4, 7}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 5}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {7}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 1, 3}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {1, 3}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 2, 6}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 7}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {9, 5, 7}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {4, 5}.


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6, 9}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (5,7).


Go deep in the search tree parent cell (5,7) with value 8 ,current depth:29


MRV cell is (5, 0)


Attempting to fill cell (5, 0) with domain values: [4, 7]


Trying value 4 for cell (5, 0), current depth :30


Applying uniaray constraint.


Orginal domain of cell (5, 0) before reduction {4, 7}.


The domain of cell (5, 0) is reduced to 4.


Applying Binary constraint.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 3}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {2, 4, 5, 6, 9}.


Revised: The value 4 is removed from the domain of node (3, 1), Now the domain is {2, 5, 6, 9}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {9, 4, 5}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {9, 5}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 7}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 6}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 4}.


Revised: The value 4 is removed from the domain of node (3, 0), Now the domain is {1, 2}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 2, 3, 4}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {8, 2, 3}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6, 9}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {2, 3, 6}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {9, 5, 7}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {4, 5}.


Revised: The value 4 is removed from the domain of node (5, 8), Now the domain is {5}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (5, 7),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 7, 8}.


Revised: The value 4 is removed from the domain of node (6, 0), Now the domain is {1, 3, 7, 8}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 9}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {9, 5}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {9}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (5, 8) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 7}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {1, 4, 7}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 5}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {9, 4}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 5, 6, 7}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {9, 5, 7}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {9, 7}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6}.


Revised: The value 5 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 6}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 3}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {2, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {2, 5, 6}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6, 9}.


Revised: The value 9 is removed from the domain of node (7, 1), Now the domain is {2, 3, 4, 6}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 6}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {1, 2}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 5}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6, 9}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 5, 6}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {2, 3, 6}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {9, 7}.


Revised: The value 9 is removed from the domain of node (5, 2), Now the domain is {7}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {9, 2, 5, 6}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {2, 5, 6}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 3}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {2, 5, 6}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {8, 1, 5}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 6}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {1, 2}.


Processing (5, 2) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 5, 6, 9}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {2, 3, 6}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 6}.


End of Binary Constraints, Checks done for cell: (5,0).


After make inferences we see that the domain of cell (5, 1) is {9}


After make inferences we see that the domain of cell (5, 2) is {7}


After make inferences we see that the domain of cell (5, 8) is {5}


Adding to board in cell :(5, 1),value :9


Adding to board in cell :(5, 2),value :7


Adding to board in cell :(5, 8),value :5


Go deep in the search tree parent cell (5,0) with value 4 ,current depth:30


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [1, 2]


Trying value 1 for cell (3, 0), current depth :31


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {1, 2}.


The domain of cell (3, 0) is reduced to 1.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 3}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {8, 2, 3}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {2, 5, 6}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {2, 6, 9}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 7}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 7}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {8, 1, 6}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {8, 6}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {9, 4}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 2, 3}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {1, 5, 6}.


Revised: The value 1 is removed from the domain of node (3, 2), Now the domain is {5, 6}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {2, 3, 6}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 6}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {2, 4, 6}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 1, 3, 7}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {8, 3, 7}.


End of Binary Constraints, Checks done for cell: (3,0).


Go deep in the search tree parent cell (3,0) with value 1 ,current depth:31


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [6, 5]


Trying value 6 for cell (3, 2), current depth :32


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {5, 6}.


The domain of cell (3, 2) is reduced to 6.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 3}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {2, 5, 6}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {2, 5}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {9, 2, 6}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {9, 2}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 5}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {8, 6}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {8}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (4, 7),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {9, 4}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 6, 9}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {1, 5, 9}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {2, 3, 6}.


Revised: The value 6 is removed from the domain of node (4, 1), Now the domain is {2, 3}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {2, 4, 6}.


Revised: The value 6 is removed from the domain of node (3, 8), Now the domain is {2, 4}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 9, 6}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {8, 9}.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 3}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {2, 3}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {2, 5}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 5}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {1, 5}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 9}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {2, 3}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 9}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {9}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (8, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 5}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {9, 2, 3, 6}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 5}.


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 5}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {8, 2, 3}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {8, 9, 4}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {8, 4}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {2, 5, 6}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {8, 3, 7}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6}.


End of Binary Constraints, Checks done for cell: (3,2).


After make inferences we see that the domain of cell (4, 2) is {8}


After make inferences we see that the domain of cell (7, 2) is {9}


Adding to board in cell :(4, 2),value :8


Adding to board in cell :(7, 2),value :9


Go deep in the search tree parent cell (3,2) with value 6 ,current depth:32


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [2, 5]


Trying value 2 for cell (3, 1), current depth :33


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {2, 5}.


The domain of cell (3, 1) is reduced to 2.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {2, 3}.


Revised: The value 2 is removed from the domain of node (4, 0), Now the domain is {3}.


Domain of (4, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 0) for AC- check


Add to the Queue (4, 6),(4, 0) for AC- check


Add to the Queue (5, 1),(4, 0) for AC- check


Add to the Queue (8, 0),(4, 0) for AC- check


Add to the Queue (1, 0),(4, 0) for AC- check


Add to the Queue (4, 2),(4, 0) for AC- check


Add to the Queue (3, 0),(4, 0) for AC- check


Add to the Queue (4, 5),(4, 0) for AC- check


Add to the Queue (5, 0),(4, 0) for AC- check


Add to the Queue (4, 8),(4, 0) for AC- check


Add to the Queue (7, 0),(4, 0) for AC- check


Add to the Queue (3, 2),(4, 0) for AC- check


Add to the Queue (4, 1),(4, 0) for AC- check


Add to the Queue (4, 7),(4, 0) for AC- check


Add to the Queue (5, 2),(4, 0) for AC- check


Add to the Queue (4, 4),(4, 0) for AC- check


Add to the Queue (0, 0),(4, 0) for AC- check


Add to the Queue (2, 0),(4, 0) for AC- check


Add to the Queue (6, 0),(4, 0) for AC- check


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9, 2}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {9}.


Domain of (3, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 7) for AC- check


Add to the Queue (4, 6),(3, 7) for AC- check


Add to the Queue (5, 7),(3, 7) for AC- check


Add to the Queue (7, 7),(3, 7) for AC- check


Add to the Queue (3, 0),(3, 7) for AC- check


Add to the Queue (3, 3),(3, 7) for AC- check


Add to the Queue (5, 6),(3, 7) for AC- check


Add to the Queue (4, 8),(3, 7) for AC- check


Add to the Queue (3, 6),(3, 7) for AC- check


Add to the Queue (0, 7),(3, 7) for AC- check


Add to the Queue (2, 7),(3, 7) for AC- check


Add to the Queue (6, 7),(3, 7) for AC- check


Add to the Queue (3, 2),(3, 7) for AC- check


Add to the Queue (4, 7),(3, 7) for AC- check


Add to the Queue (3, 5),(3, 7) for AC- check


Add to the Queue (3, 8),(3, 7) for AC- check


Add to the Queue (5, 8),(3, 7) for AC- check


Add to the Queue (8, 7),(3, 7) for AC- check


Add to the Queue (1, 7),(3, 7) for AC- check


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {3, 4, 6}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {9, 4}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 5}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {2, 3}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {3}.


Domain of (4, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 1) for AC- check


Add to the Queue (4, 3),(4, 1) for AC- check


Add to the Queue (4, 6),(4, 1) for AC- check


Add to the Queue (5, 1),(4, 1) for AC- check


Add to the Queue (7, 1),(4, 1) for AC- check


Add to the Queue (4, 2),(4, 1) for AC- check


Add to the Queue (3, 0),(4, 1) for AC- check


Add to the Queue (4, 5),(4, 1) for AC- check


Add to the Queue (5, 0),(4, 1) for AC- check


Add to the Queue (4, 8),(4, 1) for AC- check


Add to the Queue (0, 1),(4, 1) for AC- check


Add to the Queue (2, 1),(4, 1) for AC- check


Add to the Queue (6, 1),(4, 1) for AC- check


Add to the Queue (3, 2),(4, 1) for AC- check


Add to the Queue (4, 7),(4, 1) for AC- check


Add to the Queue (5, 2),(4, 1) for AC- check


Add to the Queue (4, 4),(4, 1) for AC- check


Add to the Queue (8, 1),(4, 1) for AC- check


Add to the Queue (1, 1),(4, 1) for AC- check


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {2, 4}.


Revised: The value 2 is removed from the domain of node (3, 8), Now the domain is {4}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 7),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (3, 6),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {2, 5, 6}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {5, 6}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 2, 3}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {8, 2}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {3}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,1).


Undo operation ,current depth : 33.


Remove the assigment from the board ,(3,1)=0.


No inferences made from cell (3,1) to remove it.


Trying value 5 for cell (3, 1), current depth :33


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {2, 5}.


The domain of cell (3, 1) is reduced to 5.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {2, 3}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9, 2}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {9, 4}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 5}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {3, 4}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {2, 3}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {2, 4}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {2, 5, 6}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {2, 6}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 5 ,current depth:33


MRV cell is (3, 6)


Attempting to fill cell (3, 6) with domain values: [4, 9]


Trying value 4 for cell (3, 6), current depth :34


Applying uniaray constraint.


Orginal domain of cell (3, 6) before reduction {9, 4}.


The domain of cell (3, 6) is reduced to 4.


Applying Binary constraint.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {9, 2}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 5}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Revised: The value 4 is removed from the domain of node (7, 6), Now the domain is {8}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (8, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {2, 4}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {2}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 1),(3, 8) for AC- check


Add to the Queue (3, 7),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 4, 5}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {8, 5}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (7, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 5}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 7}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {8, 2, 3}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 3}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6, 9}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 5}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {5}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6}.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {9, 2}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {9}.


Domain of (3, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 7) for AC- check


Add to the Queue (3, 1),(3, 7) for AC- check


Add to the Queue (4, 6),(3, 7) for AC- check


Add to the Queue (5, 7),(3, 7) for AC- check


Add to the Queue (7, 7),(3, 7) for AC- check


Add to the Queue (3, 0),(3, 7) for AC- check


Add to the Queue (3, 3),(3, 7) for AC- check


Add to the Queue (5, 6),(3, 7) for AC- check


Add to the Queue (4, 8),(3, 7) for AC- check


Add to the Queue (3, 6),(3, 7) for AC- check


Add to the Queue (0, 7),(3, 7) for AC- check


Add to the Queue (2, 7),(3, 7) for AC- check


Add to the Queue (6, 7),(3, 7) for AC- check


Add to the Queue (3, 2),(3, 7) for AC- check


Add to the Queue (4, 7),(3, 7) for AC- check


Add to the Queue (3, 5),(3, 7) for AC- check


Add to the Queue (5, 8),(3, 7) for AC- check


Add to the Queue (8, 7),(3, 7) for AC- check


Add to the Queue (1, 7),(3, 7) for AC- check


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 7}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {1, 6}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1, 6, 7}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 6}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {4, 6}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {9, 5}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {9}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(8, 6) for AC- check


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {1, 5}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (6, 8),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 4),(6, 2) for AC- check


Add to the Queue (6, 7),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (7, 2),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 7}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 6, 7}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {3, 4}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6, 9}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {8, 3, 7}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {6}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {3}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {7}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {7}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1, 2, 6}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 6) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {1, 5}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {3}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 6, 7}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {2}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {6}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 7}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {4, 7}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 5}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {5}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (7, 2),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {3, 4}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {2, 3}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {3}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {8, 3, 7}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {6}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {3}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {3}.


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {1, 6, 7}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {2}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {3, 4}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {2, 3}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6}.


Processing (8, 2) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {8, 3, 7}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6}.


Revised: The value 3 is removed from the domain of node (7, 7), Now the domain is {2, 6}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {4, 7}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 6, 7}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {7}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {3, 4}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {4}.


Domain of (6, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(6, 1) for AC- check


Add to the Queue (5, 1),(6, 1) for AC- check


Add to the Queue (8, 0),(6, 1) for AC- check


Add to the Queue (6, 2),(6, 1) for AC- check


Add to the Queue (7, 1),(6, 1) for AC- check


Add to the Queue (6, 5),(6, 1) for AC- check


Add to the Queue (6, 8),(6, 1) for AC- check


Add to the Queue (8, 2),(6, 1) for AC- check


Add to the Queue (0, 1),(6, 1) for AC- check


Add to the Queue (2, 1),(6, 1) for AC- check


Add to the Queue (7, 0),(6, 1) for AC- check


Add to the Queue (6, 4),(6, 1) for AC- check


Add to the Queue (4, 1),(6, 1) for AC- check


Add to the Queue (8, 1),(6, 1) for AC- check


Add to the Queue (1, 1),(6, 1) for AC- check


Add to the Queue (7, 2),(6, 1) for AC- check


Add to the Queue (6, 0),(6, 1) for AC- check


Add to the Queue (6, 6),(6, 1) for AC- check


Add to the Queue (6, 3),(6, 1) for AC- check


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {8, 7}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {6}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 4, 6}.


Revised: The value 4 is removed from the domain of node (7, 1), Now the domain is {2, 3, 6}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {4, 7}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {7}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {2, 3}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {2, 3}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {8, 7}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {6}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {2, 6}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {1, 6}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {2}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {8, 7}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {8}.


Domain of (6, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(6, 0) for AC- check


Add to the Queue (8, 0),(6, 0) for AC- check


Add to the Queue (1, 0),(6, 0) for AC- check


Add to the Queue (6, 2),(6, 0) for AC- check


Add to the Queue (7, 1),(6, 0) for AC- check


Add to the Queue (6, 5),(6, 0) for AC- check


Add to the Queue (3, 0),(6, 0) for AC- check


Add to the Queue (5, 0),(6, 0) for AC- check


Add to the Queue (8, 2),(6, 0) for AC- check


Add to the Queue (6, 1),(6, 0) for AC- check


Add to the Queue (7, 0),(6, 0) for AC- check


Add to the Queue (6, 4),(6, 0) for AC- check


Add to the Queue (6, 7),(6, 0) for AC- check


Add to the Queue (0, 0),(6, 0) for AC- check


Add to the Queue (8, 1),(6, 0) for AC- check


Add to the Queue (2, 0),(6, 0) for AC- check


Add to the Queue (7, 2),(6, 0) for AC- check


Add to the Queue (6, 6),(6, 0) for AC- check


Add to the Queue (6, 3),(6, 0) for AC- check


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {6}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {2, 3}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 6}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {9}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3}.


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {6}.


End of Binary Constraints, Checks done for cell: (3,6).


After make inferences we see that the domain of cell (3, 7) is {9}


After make inferences we see that the domain of cell (3, 8) is {2}


After make inferences we see that the domain of cell (6, 0) is {8}


After make inferences we see that the domain of cell (6, 1) is {4}


After make inferences we see that the domain of cell (6, 2) is {1}


After make inferences we see that the domain of cell (6, 6) is {5}


After make inferences we see that the domain of cell (6, 7) is {3}


After make inferences we see that the domain of cell (6, 8) is {7}


After make inferences we see that the domain of cell (7, 6) is {8}


After make inferences we see that the domain of cell (8, 2) is {5}


After make inferences we see that the domain of cell (8, 6) is {9}


Adding to board in cell :(3, 7),value :9


Adding to board in cell :(3, 8),value :2


Adding to board in cell :(6, 0),value :8


Adding to board in cell :(6, 1),value :4


Adding to board in cell :(6, 2),value :1


Adding to board in cell :(6, 6),value :5


Adding to board in cell :(6, 7),value :3


Adding to board in cell :(6, 8),value :7


Adding to board in cell :(7, 6),value :8


Adding to board in cell :(8, 2),value :5


Adding to board in cell :(8, 6),value :9


Go deep in the search tree parent cell (3,6) with value 4 ,current depth:34


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [2, 3]


Trying value 2 for cell (4, 0), current depth :35


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {2, 3}.


The domain of cell (4, 0) is reduced to 2.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 7}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {7}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (5, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {3}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (7, 7),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (6, 0),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {2, 3}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {3}.


Domain of (4, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 1) for AC- check


Add to the Queue (3, 1),(4, 1) for AC- check


Add to the Queue (4, 6),(4, 1) for AC- check


Add to the Queue (5, 1),(4, 1) for AC- check


Add to the Queue (7, 1),(4, 1) for AC- check


Add to the Queue (4, 2),(4, 1) for AC- check


Add to the Queue (3, 0),(4, 1) for AC- check


Add to the Queue (4, 5),(4, 1) for AC- check


Add to the Queue (5, 0),(4, 1) for AC- check


Add to the Queue (4, 8),(4, 1) for AC- check


Add to the Queue (0, 1),(4, 1) for AC- check


Add to the Queue (2, 1),(4, 1) for AC- check


Add to the Queue (6, 1),(4, 1) for AC- check


Add to the Queue (3, 2),(4, 1) for AC- check


Add to the Queue (4, 7),(4, 1) for AC- check


Add to the Queue (5, 2),(4, 1) for AC- check


Add to the Queue (4, 4),(4, 1) for AC- check


Add to the Queue (8, 1),(4, 1) for AC- check


Add to the Queue (1, 1),(4, 1) for AC- check


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 6}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (8, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {3}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {7}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {2, 3, 6}.


Revised: The value 3 is removed from the domain of node (7, 1), Now the domain is {2, 6}.


Processing (7, 0) <---- (7, 7) ,Domain of node (7, 7) is {2, 6}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {6}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {9}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (7, 0) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {2, 6}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {6}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


End of Binary Constraints, Checks done for cell: (4,0).


After make inferences we see that the domain of cell (4, 1) is {3}


After make inferences we see that the domain of cell (7, 0) is {3}


After make inferences we see that the domain of cell (8, 0) is {7}


Adding to board in cell :(4, 1),value :3


Adding to board in cell :(7, 0),value :3


Adding to board in cell :(8, 0),value :7


Go deep in the search tree parent cell (4,0) with value 2 ,current depth:35


MRV cell is (4, 7)


Attempting to fill cell (4, 7) with domain values: [6, 1]


Trying value 6 for cell (4, 7), current depth :36


Applying uniaray constraint.


Orginal domain of cell (4, 7) before reduction {1, 6}.


The domain of cell (4, 7) is reduced to 6.


Applying Binary constraint.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 6}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {2}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {7}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {3}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {2}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 6}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 2}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {2, 6}.


Revised: The value 2 is removed from the domain of node (7, 1), Now the domain is {6}.


Domain of (7, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(7, 1) for AC- check


Add to the Queue (5, 1),(7, 1) for AC- check


Add to the Queue (8, 0),(7, 1) for AC- check


Add to the Queue (7, 4),(7, 1) for AC- check


Add to the Queue (6, 2),(7, 1) for AC- check


Add to the Queue (8, 2),(7, 1) for AC- check


Add to the Queue (0, 1),(7, 1) for AC- check


Add to the Queue (2, 1),(7, 1) for AC- check


Add to the Queue (6, 1),(7, 1) for AC- check


Add to the Queue (7, 0),(7, 1) for AC- check


Add to the Queue (7, 3),(7, 1) for AC- check


Add to the Queue (7, 6),(7, 1) for AC- check


Add to the Queue (4, 1),(7, 1) for AC- check


Add to the Queue (8, 1),(7, 1) for AC- check


Add to the Queue (1, 1),(7, 1) for AC- check


Add to the Queue (7, 2),(7, 1) for AC- check


Add to the Queue (6, 0),(7, 1) for AC- check


Add to the Queue (7, 5),(7, 1) for AC- check


Add to the Queue (7, 8),(7, 1) for AC- check


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {7}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (8, 1),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {5}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (4, 8) <---- (4, 6) ,Domain of node (4, 6) is {7}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {8}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 6}.


Revised: The value 1 is removed from the domain of node (8, 8), Now the domain is {6}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Add to the Queue (7, 8),(8, 8) for AC- check


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {3}.


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {2}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {7}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {3}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {2, 6}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {2}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {1}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {4, 6}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {4}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {7}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {8}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {3}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {6}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {5}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {7}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {6}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 7) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {4}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {7}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {3}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {2}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {2}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (8, 8) <---- (7, 8) ,Domain of node (7, 8) is {4}.


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {5}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {7}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {8}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {5}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {3}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {6}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {1}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {3}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 1) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {8}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {9}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {5}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {6}.


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {3}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {7}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {3}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {2}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {5}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {9}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {1}.


End of Binary Constraints, Checks done for cell: (4,7).


After make inferences we see that the domain of cell (4, 8) is {1}


After make inferences we see that the domain of cell (7, 1) is {6}


After make inferences we see that the domain of cell (7, 7) is {2}


After make inferences we see that the domain of cell (7, 8) is {4}


After make inferences we see that the domain of cell (8, 1) is {2}


After make inferences we see that the domain of cell (8, 7) is {1}


After make inferences we see that the domain of cell (8, 8) is {6}


Adding to board in cell :(4, 8),value :1


Adding to board in cell :(7, 1),value :6


Adding to board in cell :(7, 7),value :2


Adding to board in cell :(7, 8),value :4


Adding to board in cell :(8, 1),value :2


Adding to board in cell :(8, 7),value :1


Adding to board in cell :(8, 8),value :6


Go deep in the search tree parent cell (4,7) with value 6 ,current depth:36


MRV cell is None


End of applying Backtracking.


after make cell (7,1) = 5


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (1, 0) is reduced to 5.


The domain of cell (1, 7) is reduced to 4.


The domain of cell (2, 2) is reduced to 4.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


The domain of cell (5, 6) is reduced to 3.


The domain of cell (6, 4) is reduced to 2.


The domain of cell (7, 1) is reduced to 5.


Apply Binary constraint to the Initial Board


All posible arcs to (1,0) are [(4, 0), (8, 0), (0, 2), (2, 2), (1, 6), (1, 3), (3, 0), (5, 0), (0, 1), (1, 2), (2, 1), (1, 5), (1, 8), (7, 0), (0, 0), (1, 1), (2, 0), (1, 4), (1, 7), (6, 0)]


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


All posible arcs to (1,7) are [(3, 7), (5, 7), (1, 0), (1, 6), (0, 8), (1, 3), (2, 8), (7, 7), (0, 7), (1, 2), (2, 7), (1, 5), (1, 8), (6, 7), (4, 7), (8, 7), (1, 1), (1, 4), (0, 6), (2, 6)]


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (5,6) are [(3, 7), (5, 4), (4, 6), (5, 1), (5, 7), (8, 6), (1, 6), (5, 0), (4, 8), (3, 6), (5, 3), (7, 6), (4, 7), (5, 2), (3, 8), (5, 5), (5, 8), (0, 6), (2, 6), (6, 6)]


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


All posible arcs to (6,4) are [(3, 4), (5, 4), (8, 3), (7, 4), (6, 2), (6, 5), (6, 8), (8, 5), (2, 4), (0, 4), (6, 1), (7, 3), (6, 7), (4, 4), (8, 4), (1, 4), (6, 0), (6, 6), (7, 5), (6, 3)]


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (7,1) are [(3, 1), (5, 1), (8, 0), (7, 4), (6, 2), (7, 7), (8, 2), (0, 1), (2, 1), (6, 1), (7, 0), (7, 3), (7, 6), (4, 1), (8, 1), (1, 1), (7, 2), (6, 0), (7, 5), (7, 8)]


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (1, 0): {5}, (1, 1): {1, 2, 3, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 6, 7, 8, 9}, (1, 3): {2, 3, 6, 7, 8, 9}, (1, 4): {1, 3, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 6, 7, 8, 9}, (1, 6): {1, 2, 6, 7, 8, 9}, (1, 7): {4}, (1, 8): {1, 2, 3, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (3, 3): {2, 3, 5, 6, 7, 8, 9}, (3, 4): {3, 5, 6, 7, 8, 9}, (3, 5): {2, 3, 5, 6, 7, 8, 9}, (3, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (3, 7): {1, 2, 5, 6, 7, 8, 9}, (3, 8): {1, 2, 4, 5, 6, 7, 8, 9}, (4, 0): {1, 2, 3, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 5, 6, 7, 8, 9}, (4, 7): {1, 2, 5, 6, 7, 8, 9}, (4, 8): {1, 2, 5, 6, 7, 8, 9}, (5, 0): {2, 4, 6, 7, 8, 9}, (5, 1): {2, 4, 6, 7, 8, 9}, (5, 2): {2, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {5, 6, 7, 8, 9}, (5, 5): {2, 5, 6, 7, 8, 9}, (5, 6): {3}, (5, 7): {2, 5, 6, 7, 8, 9}, (5, 8): {2, 4, 5, 6, 7, 8, 9}, (6, 0): {1, 3, 4, 6, 7, 8, 9}, (6, 1): {1, 3, 4, 6, 7, 8, 9}, (6, 2): {1, 3, 6, 7, 8, 9}, (6, 3): {3, 4, 5, 6, 7, 8, 9}, (6, 4): {2}, (6, 5): {1, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 3, 5, 6, 7, 8, 9}, (6, 8): {1, 3, 4, 5, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (7, 1): {5}, (7, 2): {1, 2, 3, 6, 7, 8, 9}, (7, 3): {3, 4, 6, 7, 8, 9}, (7, 4): {1, 3, 4, 6, 7, 8, 9}, (7, 5): {1, 3, 6, 7, 8, 9}, (7, 6): {1, 2, 4, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 6, 7, 8, 9}, (8, 3): {3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 5, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [6, 7, 8, 9, 5]


Trying value 6 for cell (5, 4), current depth :0


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {5, 6, 7, 8, 9}.


The domain of cell (5, 4) is reduced to 6.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 4), Now the domain is {3, 5, 7, 8, 9}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {2, 4, 7, 8, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 7), Now the domain is {2, 5, 7, 8, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {2, 4, 7, 8, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {2, 5, 7, 8, 9}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {3, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7, 8, 9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {2, 4, 5, 7, 8, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 3, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 6 ,current depth:0


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [7, 8, 9, 3, 1]


Trying value 7 for cell (1, 4), current depth :1


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {1, 3, 7, 8, 9}.


The domain of cell (1, 4) is reduced to 7.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 4), Now the domain is {3, 5, 8, 9}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 8, 9}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 8, 9}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 8, 9}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 4), Now the domain is {3, 5, 8, 9}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 8, 9}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 8, 9}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 8, 9}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,4).


Go deep in the search tree parent cell (1,4) with value 7 ,current depth:1


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [8, 9, 5, 3]


Trying value 8 for cell (3, 4), current depth :2


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {8, 9, 3, 5}.


The domain of cell (3, 4) is reduced to 8.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 7, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 7, 9}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 9}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 7, 9}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 3, 5}.


Revised: The value 8 is removed from the domain of node (4, 4), Now the domain is {9, 3, 5}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 7, 9}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7, 9}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 8 ,current depth:2


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [9, 5, 3]


Trying value 9 for cell (4, 4), current depth :3


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {9, 3, 5}.


The domain of cell (4, 4) is reduced to 9.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7, 9}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 9}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 7, 9}.


Revised: The value 9 is removed from the domain of node (3, 3), Now the domain is {2, 3, 5, 7}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 9}.


Revised: The value 9 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 7, 9}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {2, 3, 5, 7}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {9, 2, 5, 7}.


Revised: The value 9 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 9 ,current depth:3


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [3, 1, 5]


Trying value 3 for cell (2, 4), current depth :4


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {1, 3, 5}.


The domain of cell (2, 4) is reduced to 3.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 5), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 5), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {2, 6, 8, 9}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4}.


Revised: The value 3 is removed from the domain of node (7, 4), Now the domain is {1, 4}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 8, 9}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 3 ,current depth:4


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [1, 4]


Trying value 1 for cell (7, 4), current depth :5


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {1, 4}.


The domain of cell (7, 4) is reduced to 1.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {4, 5}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {4, 5}.


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (7,4).


Go deep in the search tree parent cell (7,4) with value 1 ,current depth:5


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [5, 4]


Trying value 5 for cell (0, 4), current depth :6


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {4, 5}.


The domain of cell (0, 4) is reduced to 5.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 5), Now the domain is {1, 2, 6, 8, 9}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {1, 2, 6, 8, 9}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2, 6}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 8, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {4, 5}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {4}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (7, 4),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {2, 4, 6, 8, 9}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {2, 6, 8, 9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,4).


After make inferences we see that the domain of cell (8, 4) is {4}


Adding to board in cell :(8, 4),value :4


Go deep in the search tree parent cell (0,4) with value 5 ,current depth:6


MRV cell is (5, 5)


Attempting to fill cell (5, 5) with domain values: [2, 7, 5]


Trying value 2 for cell (5, 5), current depth :7


Applying uniaray constraint.


Orginal domain of cell (5, 5) before reduction {2, 5, 7}.


The domain of cell (5, 5) is reduced to 2.


Applying Binary constraint.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {3, 5, 7}.


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {4, 7, 8, 9}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {2, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {5, 7, 8, 9}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 5), Now the domain is {1, 6, 8, 9}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {1, 6, 8, 9}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 5, 7}.


Revised: The value 2 is removed from the domain of node (3, 3), Now the domain is {3, 5, 7}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {4, 7, 8, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 5), Now the domain is {1, 6, 8, 9}.


Processing (5, 5) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 5, 7}.


Revised: The value 2 is removed from the domain of node (3, 5), Now the domain is {3, 5, 7}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {5, 7, 8, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 5, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {4, 5, 7, 8, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,5).


Go deep in the search tree parent cell (5,5) with value 2 ,current depth:7


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [7, 5, 3]


Trying value 7 for cell (3, 3), current depth :8


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {3, 5, 7}.


The domain of cell (3, 3) is reduced to 7.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {3, 5, 7}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {3, 5}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 6, 9}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 7), Now the domain is {1, 2, 5, 6, 9}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {3, 5, 6, 8, 9}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2, 6}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 9}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 5, 6, 9}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {3, 6, 8, 9}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 9}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {3, 5, 7}.


Revised: The value 7 is removed from the domain of node (3, 5), Now the domain is {3, 5}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 5, 6, 9}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 6, 8, 9}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {8, 9, 2, 6}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {3, 5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 7 ,current depth:8


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [5, 3]


Trying value 5 for cell (3, 5), current depth :9


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {3, 5}.


The domain of cell (3, 5) is reduced to 5.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {3, 5}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {3}.


Domain of (4, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 3) for AC- check


Add to the Queue (3, 4),(4, 3) for AC- check


Add to the Queue (5, 4),(4, 3) for AC- check


Add to the Queue (4, 6),(4, 3) for AC- check


Add to the Queue (8, 3),(4, 3) for AC- check


Add to the Queue (1, 3),(4, 3) for AC- check


Add to the Queue (4, 2),(4, 3) for AC- check


Add to the Queue (4, 5),(4, 3) for AC- check


Add to the Queue (3, 3),(4, 3) for AC- check


Add to the Queue (4, 8),(4, 3) for AC- check


Add to the Queue (5, 3),(4, 3) for AC- check


Add to the Queue (7, 3),(4, 3) for AC- check


Add to the Queue (4, 1),(4, 3) for AC- check


Add to the Queue (4, 7),(4, 3) for AC- check


Add to the Queue (4, 4),(4, 3) for AC- check


Add to the Queue (5, 5),(4, 3) for AC- check


Add to the Queue (0, 3),(4, 3) for AC- check


Add to the Queue (2, 3),(4, 3) for AC- check


Add to the Queue (6, 3),(4, 3) for AC- check


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 9}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 5, 6, 9}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {1, 2, 6, 9}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {8, 1, 6, 9}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {8, 1, 6, 9}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {3, 6, 7, 8, 9}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 9}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 5, 6, 9}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 6, 9}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {3, 6, 7, 8, 9}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {8, 1, 6, 9}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 9}.


Revised: The value 5 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 6, 9}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 5, 6, 9}.


Revised: The value 5 is removed from the domain of node (3, 8), Now the domain is {1, 2, 4, 6, 9}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 7, 8}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {5, 6, 8, 9}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2, 6}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9, 3, 6}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {8, 9, 6}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 3) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 6, 8, 9}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {8, 9, 2, 6}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {5, 6, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,5).


After make inferences we see that the domain of cell (4, 3) is {3}


Adding to board in cell :(4, 3),value :3


Go deep in the search tree parent cell (3,5) with value 5 ,current depth:9


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [6, 8, 9]


Trying value 6 for cell (7, 3), current depth :10


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {8, 9, 6}.


The domain of cell (7, 3) is reduced to 6.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5, 6}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {8, 9, 5}.


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {8, 9, 2, 6}.


Revised: The value 6 is removed from the domain of node (1, 3), Now the domain is {8, 9, 2}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {2, 3, 7, 8, 9}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {3, 7, 8, 9}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {3, 7, 8, 9}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 7, 8, 9}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {2, 4, 7, 8, 9}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 3), Now the domain is {2, 4, 8, 9}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {8, 9, 2, 6}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {8, 9, 2}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {2, 3, 7, 8, 9}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 5), Now the domain is {3, 7, 8, 9}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {8, 9, 5}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (7,3).


Go deep in the search tree parent cell (7,3) with value 6 ,current depth:10


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [8, 9, 2]


Trying value 8 for cell (1, 3), current depth :11


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {8, 9, 2}.


The domain of cell (1, 3) is reduced to 8.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {9, 5}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {8, 1, 6, 9}.


Revised: The value 8 is removed from the domain of node (0, 5), Now the domain is {1, 6, 9}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 9}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {8, 1, 6, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 6, 9}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 9}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {8, 1, 6, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {1, 6, 9}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 9}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 9}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {8, 9, 2, 4}.


Revised: The value 8 is removed from the domain of node (0, 3), Now the domain is {9, 2, 4}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {9, 2}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5}.


Revised: The value 8 is removed from the domain of node (6, 3), Now the domain is {9, 5}.


End of Binary Constraints, Checks done for cell: (1,3).


Go deep in the search tree parent cell (1,3) with value 8 ,current depth:11


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [9, 2]


Trying value 9 for cell (2, 3), current depth :12


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {9, 2}.


The domain of cell (2, 3) is reduced to 9.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {5}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (7, 3),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 6, 9}.


Revised: The value 9 is removed from the domain of node (0, 5), Now the domain is {1, 6}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 6, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {1, 6}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 7, 8}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 6, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {1, 6}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 2, 4}.


Revised: The value 9 is removed from the domain of node (0, 3), Now the domain is {2, 4}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 7, 8}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {9, 5}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {5}.


Domain of (6, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(6, 3) for AC- check


Add to the Queue (8, 3),(6, 3) for AC- check


Add to the Queue (1, 3),(6, 3) for AC- check


Add to the Queue (7, 4),(6, 3) for AC- check


Add to the Queue (6, 2),(6, 3) for AC- check


Add to the Queue (6, 5),(6, 3) for AC- check


Add to the Queue (6, 8),(6, 3) for AC- check


Add to the Queue (3, 3),(6, 3) for AC- check


Add to the Queue (5, 3),(6, 3) for AC- check


Add to the Queue (8, 5),(6, 3) for AC- check


Add to the Queue (6, 1),(6, 3) for AC- check


Add to the Queue (6, 4),(6, 3) for AC- check


Add to the Queue (7, 3),(6, 3) for AC- check


Add to the Queue (6, 7),(6, 3) for AC- check


Add to the Queue (8, 4),(6, 3) for AC- check


Add to the Queue (0, 3),(6, 3) for AC- check


Add to the Queue (6, 0),(6, 3) for AC- check


Add to the Queue (6, 6),(6, 3) for AC- check


Add to the Queue (7, 5),(6, 3) for AC- check


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {8, 9, 3, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {8, 9, 3, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {8, 9, 3, 7}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Revised: The value 5 is removed from the domain of node (6, 3), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (2,3).


Undo operation ,current depth : 12.


Remove the assigment from the board ,(2,3)=0.


No inferences made from cell (2,3) to remove it.


Trying value 2 for cell (2, 3), current depth :12


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {9, 2}.


The domain of cell (2, 3) is reduced to 2.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 6, 9}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 6, 9}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {1, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 1), Now the domain is {1, 6, 7, 8, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {1, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 6, 9}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 2, 4}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {9, 4}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 0), Now the domain is {1, 6, 7, 8, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {1, 5, 6, 7, 8, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {9, 5}.


End of Binary Constraints, Checks done for cell: (2,3).


Go deep in the search tree parent cell (2,3) with value 2 ,current depth:12


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [9, 4]


Trying value 9 for cell (0, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {9, 4}.


The domain of cell (0, 3) is reduced to 9.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {5}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (7, 3),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 6, 9}.


Revised: The value 9 is removed from the domain of node (0, 5), Now the domain is {1, 6}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 6, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {1, 6}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 6, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {1, 6}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {1, 2, 6, 7, 8}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {9, 5}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {5}.


Domain of (6, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(6, 3) for AC- check


Add to the Queue (8, 3),(6, 3) for AC- check


Add to the Queue (1, 3),(6, 3) for AC- check


Add to the Queue (7, 4),(6, 3) for AC- check


Add to the Queue (6, 2),(6, 3) for AC- check


Add to the Queue (6, 5),(6, 3) for AC- check


Add to the Queue (6, 8),(6, 3) for AC- check


Add to the Queue (3, 3),(6, 3) for AC- check


Add to the Queue (5, 3),(6, 3) for AC- check


Add to the Queue (8, 5),(6, 3) for AC- check


Add to the Queue (6, 1),(6, 3) for AC- check


Add to the Queue (6, 4),(6, 3) for AC- check


Add to the Queue (7, 3),(6, 3) for AC- check


Add to the Queue (6, 7),(6, 3) for AC- check


Add to the Queue (8, 4),(6, 3) for AC- check


Add to the Queue (2, 3),(6, 3) for AC- check


Add to the Queue (6, 0),(6, 3) for AC- check


Add to the Queue (6, 6),(6, 3) for AC- check


Add to the Queue (7, 5),(6, 3) for AC- check


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {8, 9, 3, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {8, 9, 3, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {8, 9, 3, 7}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Revised: The value 5 is removed from the domain of node (6, 3), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (0,3).


Undo operation ,current depth : 13.


Remove the assigment from the board ,(0,3)=0.


No inferences made from cell (0,3) to remove it.


Trying value 4 for cell (0, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {9, 4}.


The domain of cell (0, 3) is reduced to 4.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 6, 9}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 6, 9}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 6, 9}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {9, 5}.


End of Binary Constraints, Checks done for cell: (0,3).


Go deep in the search tree parent cell (0,3) with value 4 ,current depth:13


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [9, 5]


Trying value 9 for cell (6, 3), current depth :14


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {9, 5}.


The domain of cell (6, 3) is reduced to 9.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {9, 5}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {5}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (7, 3),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 8}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {8, 9, 3, 7}.


Revised: The value 9 is removed from the domain of node (6, 5), Now the domain is {8, 3, 7}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 5, 6, 7, 8}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {8, 9, 3, 7}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {8, 3, 7}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 8}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 8}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 8}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {8, 9, 3, 7}.


Revised: The value 9 is removed from the domain of node (7, 5), Now the domain is {8, 3, 7}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


End of Binary Constraints, Checks done for cell: (6,3).


After make inferences we see that the domain of cell (8, 3) is {5}


Adding to board in cell :(8, 3),value :5


Go deep in the search tree parent cell (6,3) with value 9 ,current depth:14


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [1, 6, 9]


Trying value 1 for cell (0, 5), current depth :15


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {1, 6, 9}.


The domain of cell (0, 5) is reduced to 1.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 6, 9}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {6, 9}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 6, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {6, 9}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 1 ,current depth:15


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [6, 9]


Trying value 6 for cell (1, 5), current depth :16


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {9, 6}.


The domain of cell (1, 5) is reduced to 6.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 9}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 9}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {9, 6}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {9}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 9}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 9}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 9}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {1, 5, 6, 7, 8}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {1, 6, 7, 8}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {1, 5, 6, 7, 8}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {1, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {1, 6, 7, 8}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {1, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {1, 5, 6, 7, 8}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


End of Binary Constraints, Checks done for cell: (1,5).


After make inferences we see that the domain of cell (2, 5) is {9}


Adding to board in cell :(2, 5),value :9


Go deep in the search tree parent cell (1,5) with value 6 ,current depth:16


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [1, 2, 9]


Trying value 1 for cell (1, 6), current depth :17


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {1, 2, 9}.


The domain of cell (1, 6) is reduced to 1.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 5, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {2, 5, 6, 7, 8}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 6, 7, 8, 9}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 6, 7, 8, 9}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {1, 5, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (2, 8), Now the domain is {5, 6, 7, 8}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {2, 4, 6, 9}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 6, 7, 8, 9}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 9}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {2, 3, 9}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 5, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {5, 6, 7, 8}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 9}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {2, 3, 9}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 7, 8, 9}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 9}.


Revised: The value 1 is removed from the domain of node (1, 1), Now the domain is {2, 3, 9}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {2, 6, 7, 8, 9}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 5, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (2, 6), Now the domain is {5, 6, 7, 8}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {4, 5, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 1 ,current depth:17


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [2, 9, 3]


Trying value 2 for cell (1, 1), current depth :18


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {9, 2, 3}.


The domain of cell (1, 1) is reduced to 2.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 9}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 6, 9}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 4, 7}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {3, 6, 7, 8, 9}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 1), Now the domain is {3, 6, 7, 8, 9}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {9, 2, 3}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {9, 3}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {8, 1, 6, 7}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {9, 2, 3}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {9, 3}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {1, 6, 7, 8}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 0), Now the domain is {3, 6, 7, 8, 9}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 1, 6, 7}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 2 ,current depth:18


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [9, 3]


Trying value 9 for cell (1, 2), current depth :19


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {9, 3}.


The domain of cell (1, 2) is reduced to 9.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {3, 6, 7, 8}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {3, 6, 7, 8}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 1, 6, 7}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {9, 3}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {3}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (1, 7),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 6, 9}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 6}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 5, 7}.


Revised: The value 9 is removed from the domain of node (5, 2), Now the domain is {8, 5, 7}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {3, 6, 7, 8}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 1, 6, 7}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {2, 3, 7, 8}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {2, 6, 7, 8, 9}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {8}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 6, 7}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 4, 5, 6, 7, 8}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {2, 6, 7, 8, 9}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 6, 7}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 6, 9}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {4, 5, 7, 8, 9}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {7}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {2, 6, 7, 8, 9}.


Processing (1, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 6, 7}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {2, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,2).


After make inferences we see that the domain of cell (1, 8) is {3}


Adding to board in cell :(1, 8),value :3


Go deep in the search tree parent cell (1,2) with value 9 ,current depth:19


MRV cell is (5, 2)


Attempting to fill cell (5, 2) with domain values: [7, 8, 5]


Trying value 7 for cell (5, 2), current depth :20


Applying uniaray constraint.


Orginal domain of cell (5, 2) before reduction {8, 5, 7}.


The domain of cell (5, 2) is reduced to 7.


Applying Binary constraint.


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 0), Now the domain is {1, 2, 6, 8}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 6, 9}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {8, 9, 4}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 5, 7}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {8, 9, 5}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 2), Now the domain is {8, 3, 6}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 8}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 8}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 9}.


Processing (5, 2) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (5, 0), Now the domain is {8, 9, 4}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 8}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 6}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {8, 1, 6}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {4, 5, 8, 9}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {8, 2, 3}.


End of Binary Constraints, Checks done for cell: (5,2).


Go deep in the search tree parent cell (5,2) with value 7 ,current depth:20


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [8, 6, 3]


Trying value 8 for cell (0, 2), current depth :21


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {8, 3, 6}.


The domain of cell (0, 2) is reduced to 8.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {2, 6, 7, 9}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {8, 1, 3, 6}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 8}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 8}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 6, 7}.


Revised: The value 8 is removed from the domain of node (0, 1), Now the domain is {3, 6, 7}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 7), Now the domain is {2, 6, 7, 9}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 1, 6, 7}.


Revised: The value 8 is removed from the domain of node (2, 1), Now the domain is {1, 6, 7}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 6}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 6, 7}.


Revised: The value 8 is removed from the domain of node (0, 0), Now the domain is {3, 6, 7}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 1, 6, 7}.


Revised: The value 8 is removed from the domain of node (2, 0), Now the domain is {1, 6, 7}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 6), Now the domain is {2, 6, 7, 9}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 3}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {2, 3}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 8 ,current depth:21


MRV cell is (7, 2)


Attempting to fill cell (7, 2) with domain values: [3, 2]


Trying value 3 for cell (7, 2), current depth :22


Applying uniaray constraint.


Orginal domain of cell (7, 2) before reduction {2, 3}.


The domain of cell (7, 2) is reduced to 3.


Applying Binary constraint.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 0), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {1, 6}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 7), Now the domain is {2, 7, 8, 9}.


Processing (7, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6}.


Processing (7, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6}.


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {1, 4, 6, 7, 8}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {2, 4, 7, 8, 9}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 7, 8, 9}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 6}.


Revised: The value 3 is removed from the domain of node (3, 2), Now the domain is {1, 2, 6}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {1, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {1, 6, 7, 8, 9}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {1, 4, 6, 7, 8}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {8, 7}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (7,2).


Go deep in the search tree parent cell (7,2) with value 3 ,current depth:22


MRV cell is (6, 2)


Attempting to fill cell (6, 2) with domain values: [6, 1]


Trying value 6 for cell (6, 2), current depth :23


Applying uniaray constraint.


Orginal domain of cell (6, 2) before reduction {1, 6}.


The domain of cell (6, 2) is reduced to 6.


Applying Binary constraint.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {1, 2, 7, 8, 9}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (6, 2) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (6, 8), Now the domain is {1, 4, 5, 7, 8}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6}.


Revised: The value 6 is removed from the domain of node (8, 2), Now the domain is {1, 2}.


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {1, 4, 7, 8}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {2, 4, 7, 8, 9}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 7, 8}.


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 6}.


Revised: The value 6 is removed from the domain of node (3, 2), Now the domain is {1, 2}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {1, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {1, 7, 8, 9}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {1, 4, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {1, 4, 7, 8}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {4, 5, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {4, 5, 7, 8}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {9}.


End of Binary Constraints, Checks done for cell: (6,2).


Go deep in the search tree parent cell (6,2) with value 6 ,current depth:23


MRV cell is (3, 2)


Attempting to fill cell (3, 2) with domain values: [1, 2]


Trying value 1 for cell (3, 2), current depth :24


Applying uniaray constraint.


Orginal domain of cell (3, 2) before reduction {1, 2}.


The domain of cell (3, 2) is reduced to 1.


Applying Binary constraint.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 6}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {8, 2, 6}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {3, 4, 6, 9}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 7), Now the domain is {2, 6, 9}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 4}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {2, 5}.


Processing (3, 2) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 6, 9}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 4}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {9, 2, 4, 6}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {2}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (6, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (7, 2),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 1, 6}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {8, 6}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {1, 2, 4, 6, 9}.


Revised: The value 1 is removed from the domain of node (3, 8), Now the domain is {2, 4, 6, 9}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {1, 7, 8, 9}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {6, 7, 8, 9}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {2, 5}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {5}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (4, 7),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1, 6, 7, 8, 9}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {8, 1, 4, 7}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {4, 7, 8, 9}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {8, 1, 9, 7}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (8, 2) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {8, 1, 4, 7}.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 6}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {3, 4, 6, 9}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {2, 6, 7, 8}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 4}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 6, 9}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 4}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 6}.


Processing (4, 2) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 5, 6, 7, 8}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {3}.


End of Binary Constraints, Checks done for cell: (3,2).


After make inferences we see that the domain of cell (4, 2) is {5}


After make inferences we see that the domain of cell (8, 2) is {2}


Adding to board in cell :(4, 2),value :5


Adding to board in cell :(8, 2),value :2


Go deep in the search tree parent cell (3,2) with value 1 ,current depth:24


MRV cell is (4, 1)


Attempting to fill cell (4, 1) with domain values: [8, 6]


Trying value 8 for cell (4, 1), current depth :25


Applying uniaray constraint.


Orginal domain of cell (4, 1) before reduction {8, 6}.


The domain of cell (4, 1) is reduced to 8.


Applying Binary constraint.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 6}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {2, 6}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4, 6}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {8, 2, 6, 7}.


Revised: The value 8 is removed from the domain of node (4, 6), Now the domain is {2, 6, 7}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (5, 1), Now the domain is {9, 4}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 6, 9}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 4}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {9, 4}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {3, 6, 7}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 6, 7}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {8, 1, 4, 7}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {1, 4, 7}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 7}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {8, 1, 9, 7}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {1, 9, 7}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


End of Binary Constraints, Checks done for cell: (4,1).


Go deep in the search tree parent cell (4,1) with value 8 ,current depth:25


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [6, 2]


Trying value 6 for cell (4, 0), current depth :26


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {2, 6}.


The domain of cell (4, 0) is reduced to 6.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4, 6}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {9, 3, 4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {2, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {2, 7}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 1, 9, 7}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4, 6, 9}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4, 9}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2, 7}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {1, 2, 7}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {3, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 0), Now the domain is {3, 7}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 0), Now the domain is {1, 7}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 1, 4, 7}.


End of Binary Constraints, Checks done for cell: (4,0).


Go deep in the search tree parent cell (4,0) with value 6 ,current depth:26


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [7, 3]


Trying value 7 for cell (0, 0), current depth :27


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {3, 7}.


The domain of cell (0, 0) is reduced to 7.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 1, 9, 7}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {8, 1, 9}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {9, 2, 6}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 3, 4}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {3, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 1), Now the domain is {3, 6}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {9, 2, 6}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 6, 7}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {1, 6}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {8, 9, 4}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 7}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {1}.


Domain of (2, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(2, 0) for AC- check


Add to the Queue (8, 0),(2, 0) for AC- check


Add to the Queue (0, 2),(2, 0) for AC- check


Add to the Queue (2, 2),(2, 0) for AC- check


Add to the Queue (1, 0),(2, 0) for AC- check


Add to the Queue (2, 5),(2, 0) for AC- check


Add to the Queue (2, 8),(2, 0) for AC- check


Add to the Queue (3, 0),(2, 0) for AC- check


Add to the Queue (5, 0),(2, 0) for AC- check


Add to the Queue (0, 1),(2, 0) for AC- check


Add to the Queue (2, 4),(2, 0) for AC- check


Add to the Queue (1, 2),(2, 0) for AC- check


Add to the Queue (2, 1),(2, 0) for AC- check


Add to the Queue (2, 7),(2, 0) for AC- check


Add to the Queue (7, 0),(2, 0) for AC- check


Add to the Queue (1, 1),(2, 0) for AC- check


Add to the Queue (2, 3),(2, 0) for AC- check


Add to the Queue (2, 6),(2, 0) for AC- check


Add to the Queue (6, 0),(2, 0) for AC- check


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 6), Now the domain is {9, 2, 6}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 1, 4, 7}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {8, 1, 4}.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 1, 9}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {8, 9}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 6, 7}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 3, 4}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {3, 6}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 6}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {6}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 6, 7}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 6, 7}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 1, 4}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {8, 4}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {8, 5, 7}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {3, 6}.


Revised: The value 6 is removed from the domain of node (0, 1), Now the domain is {3}.


Domain of (0, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(0, 1) for AC- check


Add to the Queue (5, 1),(0, 1) for AC- check


Add to the Queue (0, 2),(0, 1) for AC- check


Add to the Queue (0, 5),(0, 1) for AC- check


Add to the Queue (2, 2),(0, 1) for AC- check


Add to the Queue (1, 0),(0, 1) for AC- check


Add to the Queue (0, 8),(0, 1) for AC- check


Add to the Queue (7, 1),(0, 1) for AC- check


Add to the Queue (0, 7),(0, 1) for AC- check


Add to the Queue (1, 2),(0, 1) for AC- check


Add to the Queue (0, 4),(0, 1) for AC- check


Add to the Queue (6, 1),(0, 1) for AC- check


Add to the Queue (4, 1),(0, 1) for AC- check


Add to the Queue (0, 0),(0, 1) for AC- check


Add to the Queue (8, 1),(0, 1) for AC- check


Add to the Queue (1, 1),(0, 1) for AC- check


Add to the Queue (0, 3),(0, 1) for AC- check


Add to the Queue (2, 0),(0, 1) for AC- check


Add to the Queue (0, 6),(0, 1) for AC- check


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 7), Now the domain is {8, 5, 7}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 7}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9, 7}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {7}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 6), Now the domain is {8, 5, 7}.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4}.


Revised: The value 3 is removed from the domain of node (3, 1), Now the domain is {9, 4}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 7}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {7}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9, 7}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


End of Binary Constraints, Checks done for cell: (0,0).


After make inferences we see that the domain of cell (0, 1) is {3}


After make inferences we see that the domain of cell (2, 0) is {1}


After make inferences we see that the domain of cell (2, 1) is {6}


Adding to board in cell :(0, 1),value :3


Adding to board in cell :(2, 0),value :1


Adding to board in cell :(2, 1),value :6


Go deep in the search tree parent cell (0,0) with value 7 ,current depth:27


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [9, 4]


Trying value 9 for cell (3, 1), current depth :28


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {9, 4}.


The domain of cell (3, 1) is reduced to 9.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9, 2, 6}.


Revised: The value 9 is removed from the domain of node (3, 7), Now the domain is {2, 6}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {4}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 3, 4}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {2, 3, 4}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Revised: The value 9 is removed from the domain of node (5, 0), Now the domain is {4}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {9, 2, 4, 6}.


Revised: The value 9 is removed from the domain of node (3, 6), Now the domain is {2, 4, 6}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 7}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {9, 2, 4, 6}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {2, 4, 6}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9, 7}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {1, 7}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 5}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {2, 3, 4}.


Revised: The value 4 is removed from the domain of node (3, 0), Now the domain is {2, 3}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,1).


Undo operation ,current depth : 28.


Remove the assigment from the board ,(3,1)=0.


No inferences made from cell (3,1) to remove it.


Trying value 4 for cell (3, 1), current depth :28


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {9, 4}.


The domain of cell (3, 1) is reduced to 4.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9, 2, 6}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {9}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 3, 4}.


Revised: The value 4 is removed from the domain of node (3, 0), Now the domain is {9, 2, 3}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {9, 2, 4, 6}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {9, 2, 6}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 7}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {1, 7}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {9, 2, 4, 6}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {9, 2, 6}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9, 7}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {8, 5}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 3}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {2, 3}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Revised: The value 9 is removed from the domain of node (5, 0), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,1).


Undo operation ,current depth : 28.


Remove the assigment from the board ,(3,1)=0.


No inferences made from cell (3,1) to remove it.


Backtracking... No valid value found for cell (3, 1) , current depth: 28.


Undo operation ,current depth : 27.


Remove the assigment from the board ,(0,0)=0.


Inference items :dict_items([((0, 1), 3), ((2, 0), 1), ((2, 1), 6)])


Remove the inferences from the board


Undo the thing that inference tell us, make cell (0,1)=0 


Undo the thing that inference tell us, make cell (2,0)=0 


Undo the thing that inference tell us, make cell (2,1)=0 


Trying value 3 for cell (0, 0), current depth :27


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {3, 7}.


The domain of cell (0, 0) is reduced to 3.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 1, 9, 7}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6, 7}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 3, 4}.


Revised: The value 3 is removed from the domain of node (3, 0), Now the domain is {9, 2, 4}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {3, 6, 7}.


Revised: The value 3 is removed from the domain of node (0, 1), Now the domain is {6, 7}.


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6, 7}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 6, 7}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 7}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6, 7}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 1, 4, 7}.


End of Binary Constraints, Checks done for cell: (0,0).


Go deep in the search tree parent cell (0,0) with value 3 ,current depth:27


MRV cell is (0, 1)


Attempting to fill cell (0, 1) with domain values: [7, 6]


Trying value 7 for cell (0, 1), current depth :28


Applying uniaray constraint.


Orginal domain of cell (0, 1) before reduction {6, 7}.


The domain of cell (0, 1) is reduced to 7.


Applying Binary constraint.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {9, 2, 6}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {9, 2, 6}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 6, 7}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {1, 6}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4, 7}.


Revised: The value 7 is removed from the domain of node (6, 1), Now the domain is {1, 4}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (0, 1) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9, 7}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {1, 9}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {1, 7}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {1}.


Domain of (2, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(2, 0) for AC- check


Add to the Queue (8, 0),(2, 0) for AC- check


Add to the Queue (0, 2),(2, 0) for AC- check


Add to the Queue (2, 2),(2, 0) for AC- check


Add to the Queue (1, 0),(2, 0) for AC- check


Add to the Queue (2, 5),(2, 0) for AC- check


Add to the Queue (2, 8),(2, 0) for AC- check


Add to the Queue (3, 0),(2, 0) for AC- check


Add to the Queue (5, 0),(2, 0) for AC- check


Add to the Queue (2, 4),(2, 0) for AC- check


Add to the Queue (1, 2),(2, 0) for AC- check


Add to the Queue (2, 1),(2, 0) for AC- check


Add to the Queue (2, 7),(2, 0) for AC- check


Add to the Queue (7, 0),(2, 0) for AC- check


Add to the Queue (0, 0),(2, 0) for AC- check


Add to the Queue (1, 1),(2, 0) for AC- check


Add to the Queue (2, 3),(2, 0) for AC- check


Add to the Queue (2, 6),(2, 0) for AC- check


Add to the Queue (6, 0),(2, 0) for AC- check


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (0, 6), Now the domain is {9, 2, 6}.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 1, 9, 7}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {8, 9, 7}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 6, 7}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 4}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 6}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {6}.


Domain of (2, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(2, 1) for AC- check


Add to the Queue (5, 1),(2, 1) for AC- check


Add to the Queue (0, 2),(2, 1) for AC- check


Add to the Queue (2, 2),(2, 1) for AC- check


Add to the Queue (1, 0),(2, 1) for AC- check


Add to the Queue (2, 5),(2, 1) for AC- check


Add to the Queue (2, 8),(2, 1) for AC- check


Add to the Queue (7, 1),(2, 1) for AC- check


Add to the Queue (0, 1),(2, 1) for AC- check


Add to the Queue (2, 4),(2, 1) for AC- check


Add to the Queue (1, 2),(2, 1) for AC- check


Add to the Queue (2, 7),(2, 1) for AC- check


Add to the Queue (6, 1),(2, 1) for AC- check


Add to the Queue (4, 1),(2, 1) for AC- check


Add to the Queue (8, 1),(2, 1) for AC- check


Add to the Queue (0, 0),(2, 1) for AC- check


Add to the Queue (1, 1),(2, 1) for AC- check


Add to the Queue (2, 3),(2, 1) for AC- check


Add to the Queue (2, 6),(2, 1) for AC- check


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 6, 7}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 6, 7}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 1, 4, 7}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {8, 4, 7}.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {8, 5, 7}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 7), Now the domain is {8, 5, 7}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 6), Now the domain is {8, 5, 7}.


End of Binary Constraints, Checks done for cell: (0,1).


After make inferences we see that the domain of cell (2, 0) is {1}


After make inferences we see that the domain of cell (2, 1) is {6}


Adding to board in cell :(2, 0),value :1


Adding to board in cell :(2, 1),value :6


Go deep in the search tree parent cell (0,1) with value 7 ,current depth:28


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [2, 7]


Trying value 2 for cell (4, 6), current depth :29


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {2, 7}.


The domain of cell (4, 6) is reduced to 2.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {9, 2, 6}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {9, 6}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 5}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 9, 6, 7}.


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 7}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {1, 7}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9, 2, 4, 6}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {9, 4, 6}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {4, 7, 8, 9}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 7}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 7}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {9, 2, 4, 6}.


Revised: The value 2 is removed from the domain of node (3, 8), Now the domain is {9, 4, 6}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {8, 9, 4, 5}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


Revised: The value 2 is removed from the domain of node (0, 6), Now the domain is {9, 6}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 7}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 4, 5, 7}.


End of Binary Constraints, Checks done for cell: (4,6).


Go deep in the search tree parent cell (4,6) with value 2 ,current depth:29


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [9, 6]


Trying value 9 for cell (0, 6), current depth :30


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {9, 6}.


The domain of cell (0, 6) is reduced to 9.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 9, 6, 7}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {8, 6, 7}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {2, 6}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 7}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {9, 4, 6}.


Revised: The value 9 is removed from the domain of node (3, 6), Now the domain is {4, 6}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {2, 6}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 7}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 9, 4, 7}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {8, 4, 7}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 7}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 4, 5, 7}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 9 ,current depth:30


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [6, 2]


Trying value 6 for cell (0, 7), current depth :31


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {2, 6}.


The domain of cell (0, 7) is reduced to 6.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {9, 6}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {9}.


Domain of (3, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 7) for AC- check


Add to the Queue (3, 1),(3, 7) for AC- check


Add to the Queue (4, 6),(3, 7) for AC- check


Add to the Queue (5, 7),(3, 7) for AC- check


Add to the Queue (7, 7),(3, 7) for AC- check


Add to the Queue (3, 0),(3, 7) for AC- check


Add to the Queue (3, 3),(3, 7) for AC- check


Add to the Queue (5, 6),(3, 7) for AC- check


Add to the Queue (4, 8),(3, 7) for AC- check


Add to the Queue (3, 6),(3, 7) for AC- check


Add to the Queue (2, 7),(3, 7) for AC- check


Add to the Queue (6, 7),(3, 7) for AC- check


Add to the Queue (3, 2),(3, 7) for AC- check


Add to the Queue (4, 7),(3, 7) for AC- check


Add to the Queue (3, 5),(3, 7) for AC- check


Add to the Queue (3, 8),(3, 7) for AC- check


Add to the Queue (5, 8),(3, 7) for AC- check


Add to the Queue (8, 7),(3, 7) for AC- check


Add to the Queue (1, 7),(3, 7) for AC- check


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 5}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {2, 6}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {2}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 7}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 9, 2, 7}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 7}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 7, 8}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 7}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 3, 7, 8, 9}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 7}.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {3, 4}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {8, 5}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 9, 2, 7}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {8, 2, 7}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {9, 2, 4}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {2, 4}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 7}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {4, 6}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 7}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 7, 8}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 7}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {9, 4, 6}.


Revised: The value 9 is removed from the domain of node (3, 8), Now the domain is {4, 6}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {8, 9, 4, 5}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {8, 4, 5}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1, 3, 7, 8}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {8}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 7}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 7, 8}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 7}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 6, 7, 8, 9}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 7}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {4, 6}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {8, 4, 5}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 7}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {4, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {2}


After make inferences we see that the domain of cell (3, 7) is {9}


Adding to board in cell :(0, 8),value :2


Adding to board in cell :(3, 7),value :9


Go deep in the search tree parent cell (0,7) with value 6 ,current depth:31


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [4, 2]


Trying value 4 for cell (3, 0), current depth :32


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {2, 4}.


The domain of cell (3, 0) is reduced to 4.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {3, 4}.


Revised: The value 4 is removed from the domain of node (3, 1), Now the domain is {3}.


Domain of (3, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(3, 1) for AC- check


Add to the Queue (3, 4),(3, 1) for AC- check


Add to the Queue (3, 7),(3, 1) for AC- check


Add to the Queue (5, 1),(3, 1) for AC- check


Add to the Queue (7, 1),(3, 1) for AC- check


Add to the Queue (4, 2),(3, 1) for AC- check


Add to the Queue (3, 3),(3, 1) for AC- check


Add to the Queue (5, 0),(3, 1) for AC- check


Add to the Queue (3, 6),(3, 1) for AC- check


Add to the Queue (0, 1),(3, 1) for AC- check


Add to the Queue (2, 1),(3, 1) for AC- check


Add to the Queue (6, 1),(3, 1) for AC- check


Add to the Queue (3, 2),(3, 1) for AC- check


Add to the Queue (4, 1),(3, 1) for AC- check


Add to the Queue (3, 5),(3, 1) for AC- check


Add to the Queue (5, 2),(3, 1) for AC- check


Add to the Queue (3, 8),(3, 1) for AC- check


Add to the Queue (8, 1),(3, 1) for AC- check


Add to the Queue (1, 1),(3, 1) for AC- check


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {9}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 9, 7}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {4, 6}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {6}.


Domain of (3, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 6) for AC- check


Add to the Queue (3, 1),(3, 6) for AC- check


Add to the Queue (3, 7),(3, 6) for AC- check


Add to the Queue (4, 6),(3, 6) for AC- check


Add to the Queue (5, 7),(3, 6) for AC- check


Add to the Queue (8, 6),(3, 6) for AC- check


Add to the Queue (1, 6),(3, 6) for AC- check


Add to the Queue (3, 3),(3, 6) for AC- check


Add to the Queue (5, 6),(3, 6) for AC- check


Add to the Queue (4, 8),(3, 6) for AC- check


Add to the Queue (7, 6),(3, 6) for AC- check


Add to the Queue (3, 2),(3, 6) for AC- check


Add to the Queue (4, 7),(3, 6) for AC- check


Add to the Queue (3, 5),(3, 6) for AC- check


Add to the Queue (3, 8),(3, 6) for AC- check


Add to the Queue (5, 8),(3, 6) for AC- check


Add to the Queue (0, 6),(3, 6) for AC- check


Add to the Queue (2, 6),(3, 6) for AC- check


Add to the Queue (6, 6),(3, 6) for AC- check


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {8, 9, 7}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {4, 6}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {6}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 1),(3, 8) for AC- check


Add to the Queue (3, 7),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (3, 6),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 4, 7}.


Revised: The value 4 is removed from the domain of node (6, 0), Now the domain is {8, 7}.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {6}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {3}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {8, 5}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Revised: The value 9 is removed from the domain of node (5, 0), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,0).


Undo operation ,current depth : 32.


Remove the assigment from the board ,(3,0)=0.


No inferences made from cell (3,0) to remove it.


Trying value 2 for cell (3, 0), current depth :32


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {2, 4}.


The domain of cell (3, 0) is reduced to 2.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {3, 4}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 9, 7}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {4, 6}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {4, 6}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 4, 7}.


End of Binary Constraints, Checks done for cell: (3,0).


Go deep in the search tree parent cell (3,0) with value 2 ,current depth:32


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [4, 3]


Trying value 4 for cell (3, 1), current depth :33


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {3, 4}.


The domain of cell (3, 1) is reduced to 4.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {9}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {4, 6}.


Revised: The value 4 is removed from the domain of node (3, 6), Now the domain is {6}.


Domain of (3, 6) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 6) for AC- check


Add to the Queue (3, 7),(3, 6) for AC- check


Add to the Queue (4, 6),(3, 6) for AC- check


Add to the Queue (5, 7),(3, 6) for AC- check


Add to the Queue (8, 6),(3, 6) for AC- check


Add to the Queue (1, 6),(3, 6) for AC- check


Add to the Queue (3, 0),(3, 6) for AC- check


Add to the Queue (3, 3),(3, 6) for AC- check


Add to the Queue (5, 6),(3, 6) for AC- check


Add to the Queue (4, 8),(3, 6) for AC- check


Add to the Queue (7, 6),(3, 6) for AC- check


Add to the Queue (3, 2),(3, 6) for AC- check


Add to the Queue (4, 7),(3, 6) for AC- check


Add to the Queue (3, 5),(3, 6) for AC- check


Add to the Queue (3, 8),(3, 6) for AC- check


Add to the Queue (5, 8),(3, 6) for AC- check


Add to the Queue (0, 6),(3, 6) for AC- check


Add to the Queue (2, 6),(3, 6) for AC- check


Add to the Queue (6, 6),(3, 6) for AC- check


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {1}.


Domain of (6, 1) is one value ,we need to add AC constraint.


Add to the Queue (5, 1),(6, 1) for AC- check


Add to the Queue (8, 0),(6, 1) for AC- check


Add to the Queue (6, 2),(6, 1) for AC- check


Add to the Queue (7, 1),(6, 1) for AC- check


Add to the Queue (6, 5),(6, 1) for AC- check


Add to the Queue (6, 8),(6, 1) for AC- check


Add to the Queue (8, 2),(6, 1) for AC- check


Add to the Queue (0, 1),(6, 1) for AC- check


Add to the Queue (2, 1),(6, 1) for AC- check


Add to the Queue (7, 0),(6, 1) for AC- check


Add to the Queue (6, 4),(6, 1) for AC- check


Add to the Queue (6, 7),(6, 1) for AC- check


Add to the Queue (4, 1),(6, 1) for AC- check


Add to the Queue (8, 1),(6, 1) for AC- check


Add to the Queue (1, 1),(6, 1) for AC- check


Add to the Queue (7, 2),(6, 1) for AC- check


Add to the Queue (6, 0),(6, 1) for AC- check


Add to the Queue (6, 6),(6, 1) for AC- check


Add to the Queue (6, 3),(6, 1) for AC- check


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {4, 6}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {6}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 7),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (3, 6),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {8, 5}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Revised: The value 9 is removed from the domain of node (5, 0), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (3,1).


Undo operation ,current depth : 33.


Remove the assigment from the board ,(3,1)=0.


No inferences made from cell (3,1) to remove it.


Trying value 3 for cell (3, 1), current depth :33


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {3, 4}.


The domain of cell (3, 1) is reduced to 3.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {4, 6}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {4, 6}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 3 ,current depth:33


MRV cell is (3, 6)


Attempting to fill cell (3, 6) with domain values: [4, 6]


Trying value 4 for cell (3, 6), current depth :34


Applying uniaray constraint.


Orginal domain of cell (3, 6) before reduction {4, 6}.


The domain of cell (3, 6) is reduced to 4.


Applying Binary constraint.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {3}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 5}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 6, 7}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 7}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4, 7}.


Revised: The value 4 is removed from the domain of node (7, 6), Now the domain is {8, 7}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 7}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {4, 6}.


Revised: The value 4 is removed from the domain of node (3, 8), Now the domain is {6}.


Domain of (3, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(3, 8) for AC- check


Add to the Queue (3, 1),(3, 8) for AC- check


Add to the Queue (3, 7),(3, 8) for AC- check


Add to the Queue (4, 6),(3, 8) for AC- check


Add to the Queue (5, 7),(3, 8) for AC- check


Add to the Queue (0, 8),(3, 8) for AC- check


Add to the Queue (2, 8),(3, 8) for AC- check


Add to the Queue (6, 8),(3, 8) for AC- check


Add to the Queue (3, 0),(3, 8) for AC- check


Add to the Queue (3, 3),(3, 8) for AC- check


Add to the Queue (5, 6),(3, 8) for AC- check


Add to the Queue (4, 8),(3, 8) for AC- check


Add to the Queue (8, 8),(3, 8) for AC- check


Add to the Queue (1, 8),(3, 8) for AC- check


Add to the Queue (3, 2),(3, 8) for AC- check


Add to the Queue (4, 7),(3, 8) for AC- check


Add to the Queue (3, 5),(3, 8) for AC- check


Add to the Queue (5, 8),(3, 8) for AC- check


Add to the Queue (7, 8),(3, 8) for AC- check


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {8, 4, 5}.


Revised: The value 4 is removed from the domain of node (5, 8), Now the domain is {8, 5}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 7}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 4, 5, 7}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {8, 5, 7}.


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {8}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {3}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {8, 5}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 7}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 7, 8}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {7}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 7}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {1, 7, 8, 9}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 7}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {8, 5}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 9, 4, 7}.


End of Binary Constraints, Checks done for cell: (3,6).


After make inferences we see that the domain of cell (3, 8) is {6}


Adding to board in cell :(3, 8),value :6


Go deep in the search tree parent cell (3,6) with value 4 ,current depth:34


MRV cell is (4, 7)


Attempting to fill cell (4, 7) with domain values: [7, 1]


Trying value 7 for cell (4, 7), current depth :35


Applying uniaray constraint.


Orginal domain of cell (4, 7) before reduction {1, 7}.


The domain of cell (4, 7) is reduced to 7.


Applying Binary constraint.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 5}.


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 2, 7}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {8, 2}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 7}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {8, 5, 7}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {8, 5}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 7, 8}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 8}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {8, 5}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {8, 1, 3, 7}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {8, 1, 3}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (4, 8) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {8, 5}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 7}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 5, 7, 8}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {4, 5, 7, 8}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {8, 1, 9, 7}.


Revised: The value 1 is removed from the domain of node (8, 8), Now the domain is {8, 9, 7}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {8, 5}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 9, 4, 7}.


End of Binary Constraints, Checks done for cell: (4,7).


After make inferences we see that the domain of cell (4, 8) is {1}


Adding to board in cell :(4, 8),value :1


Go deep in the search tree parent cell (4,7) with value 7 ,current depth:35


MRV cell is (2, 7)


Attempting to fill cell (2, 7) with domain values: [8, 5]


Trying value 8 for cell (2, 7), current depth :36


Applying uniaray constraint.


Orginal domain of cell (2, 7) before reduction {8, 5}.


The domain of cell (2, 7) is reduced to 8.


Applying Binary constraint.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 5}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {5}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (4, 6),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (5, 6),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (4, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {8, 5, 7}.


Revised: The value 8 is removed from the domain of node (2, 8), Now the domain is {5, 7}.


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 2}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {2}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (5, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {8, 1, 3, 5}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {7}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {8, 1, 3}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 3}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 7) <---- (2, 6) ,Domain of node (2, 6) is {8, 5, 7}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {5, 7}.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {7}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {8, 5}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {8}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (7, 7) <---- (5, 7) ,Domain of node (5, 7) is {5}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {8, 6, 7}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {8, 4, 5, 7}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {8, 9, 7}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {8, 7}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {7}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {8, 5, 7}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {8, 7}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {8, 9, 4, 7}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {5, 7}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {8, 4, 5, 7}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {4, 5, 7}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {9, 4}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {8, 9, 7}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {9, 7}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {7}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {8, 9, 4, 7}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {9, 4, 7}.


End of Binary Constraints, Checks done for cell: (2,7).


After make inferences we see that the domain of cell (5, 7) is {5}


After make inferences we see that the domain of cell (5, 8) is {8}


After make inferences we see that the domain of cell (7, 7) is {2}


Adding to board in cell :(5, 7),value :5


Adding to board in cell :(5, 8),value :8


Adding to board in cell :(7, 7),value :2


Go deep in the search tree parent cell (2,7) with value 8 ,current depth:36


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [7, 5]


Trying value 7 for cell (2, 6), current depth :37


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {5, 7}.


The domain of cell (2, 6) is reduced to 7.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 6, 7}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {8, 6}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {5, 7}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {5}.


Domain of (2, 8) is one value ,we need to add AC constraint.


Add to the Queue (2, 2),(2, 8) for AC- check


Add to the Queue (1, 6),(2, 8) for AC- check


Add to the Queue (0, 8),(2, 8) for AC- check


Add to the Queue (2, 5),(2, 8) for AC- check


Add to the Queue (6, 8),(2, 8) for AC- check


Add to the Queue (4, 8),(2, 8) for AC- check


Add to the Queue (8, 8),(2, 8) for AC- check


Add to the Queue (2, 4),(2, 8) for AC- check


Add to the Queue (0, 7),(2, 8) for AC- check


Add to the Queue (2, 1),(2, 8) for AC- check


Add to the Queue (2, 7),(2, 8) for AC- check


Add to the Queue (1, 8),(2, 8) for AC- check


Add to the Queue (3, 8),(2, 8) for AC- check


Add to the Queue (5, 8),(2, 8) for AC- check


Add to the Queue (2, 0),(2, 8) for AC- check


Add to the Queue (0, 6),(2, 8) for AC- check


Add to the Queue (2, 3),(2, 8) for AC- check


Add to the Queue (1, 7),(2, 8) for AC- check


Add to the Queue (7, 8),(2, 8) for AC- check


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {8}.


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 7}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {8}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (8, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {8, 5}.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {4, 5, 7}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {4, 7}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (2, 8) <---- (2, 7) ,Domain of node (2, 7) is {8}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {2}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {9, 4, 7}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (7, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 6}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {6}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(8, 6) for AC- check


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {4, 7}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {8, 9, 4, 7}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {9, 4, 7}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {8, 5}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {5}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {8, 7}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {7}.


Domain of (7, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(7, 5) for AC- check


Add to the Queue (0, 5),(7, 5) for AC- check


Add to the Queue (2, 5),(7, 5) for AC- check


Add to the Queue (7, 4),(7, 5) for AC- check


Add to the Queue (7, 1),(7, 5) for AC- check


Add to the Queue (7, 7),(7, 5) for AC- check


Add to the Queue (6, 5),(7, 5) for AC- check


Add to the Queue (4, 5),(7, 5) for AC- check


Add to the Queue (8, 5),(7, 5) for AC- check


Add to the Queue (1, 5),(7, 5) for AC- check


Add to the Queue (7, 0),(7, 5) for AC- check


Add to the Queue (6, 4),(7, 5) for AC- check


Add to the Queue (7, 3),(7, 5) for AC- check


Add to the Queue (3, 5),(7, 5) for AC- check


Add to the Queue (5, 5),(7, 5) for AC- check


Add to the Queue (8, 4),(7, 5) for AC- check


Add to the Queue (7, 2),(7, 5) for AC- check


Add to the Queue (6, 3),(7, 5) for AC- check


Add to the Queue (7, 8),(7, 5) for AC- check


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {9, 4, 7}.


Processing (8, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {8, 9, 7}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {4, 7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {1, 9}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {7}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {9, 4, 7}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {1}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {4, 7}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {4}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {9}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {7}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {8, 4, 7}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {9}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {9, 4, 7}.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3, 7}.


Revised: The value 7 is removed from the domain of node (6, 5), Now the domain is {8, 3}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {8, 3, 7}.


Revised: The value 7 is removed from the domain of node (8, 5), Now the domain is {8, 3}.


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {9, 4}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {9}.


Processing (7, 5) <---- (7, 8) ,Domain of node (7, 8) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (7, 8), Now the domain is {9, 4}.


End of Binary Constraints, Checks done for cell: (2,6).


After make inferences we see that the domain of cell (2, 8) is {5}


After make inferences we see that the domain of cell (6, 6) is {5}


After make inferences we see that the domain of cell (7, 5) is {7}


After make inferences we see that the domain of cell (7, 6) is {8}


After make inferences we see that the domain of cell (8, 6) is {6}


Adding to board in cell :(2, 8),value :5


Adding to board in cell :(6, 6),value :5


Adding to board in cell :(7, 5),value :7


Adding to board in cell :(7, 6),value :8


Adding to board in cell :(8, 6),value :6


Go deep in the search tree parent cell (2,6) with value 7 ,current depth:37


MRV cell is (5, 0)


Attempting to fill cell (5, 0) with domain values: [4, 9]


Trying value 4 for cell (5, 0), current depth :38


Applying uniaray constraint.


Orginal domain of cell (5, 0) before reduction {9, 4}.


The domain of cell (5, 0) is reduced to 4.


Applying Binary constraint.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {3}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {9, 4}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {9}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {5}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 9, 7}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {9, 4}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {9}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (7, 7),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (6, 0),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 4, 7}.


Revised: The value 4 is removed from the domain of node (6, 0), Now the domain is {8, 7}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {3}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {6}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {5}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {1}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {7}.


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 9}.


Revised: The value 9 is removed from the domain of node (8, 1), Now the domain is {1}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (6, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {8, 9, 7}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {8, 7}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 0) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {1}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (7, 0) <---- (6, 0) ,Domain of node (6, 0) is {8, 7}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {9, 4}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {4}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (6, 8),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {3}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {8, 7}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {8, 3}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (8, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 4}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {4}.


Domain of (6, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(6, 1) for AC- check


Add to the Queue (5, 1),(6, 1) for AC- check


Add to the Queue (8, 0),(6, 1) for AC- check


Add to the Queue (6, 2),(6, 1) for AC- check


Add to the Queue (7, 1),(6, 1) for AC- check


Add to the Queue (6, 5),(6, 1) for AC- check


Add to the Queue (6, 8),(6, 1) for AC- check


Add to the Queue (8, 2),(6, 1) for AC- check


Add to the Queue (0, 1),(6, 1) for AC- check


Add to the Queue (2, 1),(6, 1) for AC- check


Add to the Queue (7, 0),(6, 1) for AC- check


Add to the Queue (6, 4),(6, 1) for AC- check


Add to the Queue (6, 7),(6, 1) for AC- check


Add to the Queue (4, 1),(6, 1) for AC- check


Add to the Queue (1, 1),(6, 1) for AC- check


Add to the Queue (7, 2),(6, 1) for AC- check


Add to the Queue (6, 0),(6, 1) for AC- check


Add to the Queue (6, 6),(6, 1) for AC- check


Add to the Queue (6, 3),(6, 1) for AC- check


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 1) <---- (8, 7) ,Domain of node (8, 7) is {1, 3}.


Revised: The value 1 is removed from the domain of node (8, 7), Now the domain is {3}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {8, 7}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {5}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (7, 8) <---- (6, 8) ,Domain of node (6, 8) is {4, 7}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {7}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (6, 1),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {3}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {9}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {8, 7}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {8, 3}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {7}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {6}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {8}.


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {2}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {8, 7}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {9}.


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {8, 7}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {5}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {8, 3}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {8}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 2),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (7, 5),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {8}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3}.


Revised: The value 3 is removed from the domain of node (6, 7), Now the domain is {1}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (6, 2),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {7}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {4}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {5}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {8, 3}.


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {9, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {9}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Add to the Queue (7, 8),(8, 8) for AC- check


Processing (6, 8) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {1}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {8, 7}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {8}.


Domain of (6, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(6, 0) for AC- check


Add to the Queue (8, 0),(6, 0) for AC- check


Add to the Queue (1, 0),(6, 0) for AC- check


Add to the Queue (6, 2),(6, 0) for AC- check


Add to the Queue (7, 1),(6, 0) for AC- check


Add to the Queue (6, 5),(6, 0) for AC- check


Add to the Queue (3, 0),(6, 0) for AC- check


Add to the Queue (5, 0),(6, 0) for AC- check


Add to the Queue (8, 2),(6, 0) for AC- check


Add to the Queue (6, 1),(6, 0) for AC- check


Add to the Queue (7, 0),(6, 0) for AC- check


Add to the Queue (6, 4),(6, 0) for AC- check


Add to the Queue (6, 7),(6, 0) for AC- check


Add to the Queue (0, 0),(6, 0) for AC- check


Add to the Queue (8, 1),(6, 0) for AC- check


Add to the Queue (2, 0),(6, 0) for AC- check


Add to the Queue (7, 2),(6, 0) for AC- check


Add to the Queue (6, 6),(6, 0) for AC- check


Add to the Queue (6, 3),(6, 0) for AC- check


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {9}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {8, 7}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {7}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(8, 0) for AC- check


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (5, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {8, 3}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {3}.


Domain of (6, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(6, 5) for AC- check


Add to the Queue (0, 5),(6, 5) for AC- check


Add to the Queue (2, 5),(6, 5) for AC- check


Add to the Queue (7, 4),(6, 5) for AC- check


Add to the Queue (6, 2),(6, 5) for AC- check


Add to the Queue (6, 8),(6, 5) for AC- check


Add to the Queue (4, 5),(6, 5) for AC- check


Add to the Queue (1, 5),(6, 5) for AC- check


Add to the Queue (6, 1),(6, 5) for AC- check


Add to the Queue (6, 4),(6, 5) for AC- check


Add to the Queue (7, 3),(6, 5) for AC- check


Add to the Queue (6, 7),(6, 5) for AC- check


Add to the Queue (3, 5),(6, 5) for AC- check


Add to the Queue (5, 5),(6, 5) for AC- check


Add to the Queue (8, 4),(6, 5) for AC- check


Add to the Queue (6, 0),(6, 5) for AC- check


Add to the Queue (6, 6),(6, 5) for AC- check


Add to the Queue (7, 5),(6, 5) for AC- check


Add to the Queue (6, 3),(6, 5) for AC- check


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {9}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {1}.


Processing (8, 5) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {9}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {9}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {5}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (6, 7) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {6}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {9}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {8}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {7}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {9}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {4}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {7}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {2}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {5}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {2}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {8}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {1}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {8}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {6}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {1}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {8}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (8, 8) <---- (7, 8) ,Domain of node (7, 8) is {4}.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (6, 0) <---- (8, 0) ,Domain of node (8, 0) is {7}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {1}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {1}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {9}.


Processing (8, 0) <---- (4, 0) ,Domain of node (4, 0) is {6}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {6}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {2}.


Processing (8, 0) <---- (5, 0) ,Domain of node (5, 0) is {4}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {2}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {9}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {9}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {1}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {3}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {3}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {1}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {3}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {6}.


Processing (6, 5) <---- (6, 8) ,Domain of node (6, 8) is {7}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {6}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {4}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {6}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {1}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {5}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {2}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {8}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {7}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {9}.


End of Binary Constraints, Checks done for cell: (5,0).


After make inferences we see that the domain of cell (5, 1) is {9}


After make inferences we see that the domain of cell (6, 0) is {8}


After make inferences we see that the domain of cell (6, 1) is {4}


After make inferences we see that the domain of cell (6, 5) is {3}


After make inferences we see that the domain of cell (6, 7) is {1}


After make inferences we see that the domain of cell (6, 8) is {7}


After make inferences we see that the domain of cell (7, 0) is {9}


After make inferences we see that the domain of cell (7, 8) is {4}


After make inferences we see that the domain of cell (8, 0) is {7}


After make inferences we see that the domain of cell (8, 1) is {1}


After make inferences we see that the domain of cell (8, 5) is {8}


After make inferences we see that the domain of cell (8, 7) is {3}


After make inferences we see that the domain of cell (8, 8) is {9}


Adding to board in cell :(5, 1),value :9


Adding to board in cell :(6, 0),value :8


Adding to board in cell :(6, 1),value :4


Adding to board in cell :(6, 5),value :3


Adding to board in cell :(6, 7),value :1


Adding to board in cell :(6, 8),value :7


Adding to board in cell :(7, 0),value :9


Adding to board in cell :(7, 8),value :4


Adding to board in cell :(8, 0),value :7


Adding to board in cell :(8, 1),value :1


Adding to board in cell :(8, 5),value :8


Adding to board in cell :(8, 7),value :3


Adding to board in cell :(8, 8),value :9


Go deep in the search tree parent cell (5,0) with value 4 ,current depth:38


MRV cell is None


End of applying Backtracking.


after make cell (3,8) = 5


Start applying backtrack , to see if we can know that the puzzle isnot solved


Apply uniary constraint to the Initial Board


The domain of cell (1, 0) is reduced to 5.


The domain of cell (1, 7) is reduced to 4.


The domain of cell (2, 2) is reduced to 4.


The domain of cell (3, 8) is reduced to 5.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


The domain of cell (5, 6) is reduced to 3.


The domain of cell (6, 4) is reduced to 2.


The domain of cell (7, 1) is reduced to 5.


Apply Binary constraint to the Initial Board


All posible arcs to (1,0) are [(4, 0), (8, 0), (0, 2), (2, 2), (1, 6), (1, 3), (3, 0), (5, 0), (0, 1), (1, 2), (2, 1), (1, 5), (1, 8), (7, 0), (0, 0), (1, 1), (2, 0), (1, 4), (1, 7), (6, 0)]


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


All posible arcs to (1,7) are [(3, 7), (5, 7), (1, 0), (1, 6), (0, 8), (1, 3), (2, 8), (7, 7), (0, 7), (1, 2), (2, 7), (1, 5), (1, 8), (6, 7), (4, 7), (8, 7), (1, 1), (1, 4), (0, 6), (2, 6)]


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (3,8) are [(3, 4), (3, 1), (3, 7), (4, 6), (5, 7), (0, 8), (2, 8), (6, 8), (3, 0), (3, 3), (5, 6), (4, 8), (3, 6), (8, 8), (1, 8), (3, 2), (4, 7), (3, 5), (5, 8), (7, 8)]


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (5,6) are [(3, 7), (5, 4), (4, 6), (5, 1), (5, 7), (8, 6), (1, 6), (5, 0), (4, 8), (3, 6), (5, 3), (7, 6), (4, 7), (5, 2), (3, 8), (5, 5), (5, 8), (0, 6), (2, 6), (6, 6)]


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {2, 6, 7, 8, 9}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


All posible arcs to (6,4) are [(3, 4), (5, 4), (8, 3), (7, 4), (6, 2), (6, 5), (6, 8), (8, 5), (2, 4), (0, 4), (6, 1), (7, 3), (6, 7), (4, 4), (8, 4), (1, 4), (6, 0), (6, 6), (7, 5), (6, 3)]


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {3, 6, 7, 8, 9}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (7,1) are [(3, 1), (5, 1), (8, 0), (7, 4), (6, 2), (7, 7), (8, 2), (0, 1), (2, 1), (6, 1), (7, 0), (7, 3), (7, 6), (4, 1), (8, 1), (1, 1), (7, 2), (6, 0), (7, 5), (7, 8)]


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 6, 7, 8, 9}, (1, 0): {5}, (1, 1): {1, 2, 3, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 6, 7, 8, 9}, (1, 3): {2, 3, 6, 7, 8, 9}, (1, 4): {1, 3, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 6, 7, 8, 9}, (1, 6): {1, 2, 6, 7, 8, 9}, (1, 7): {4}, (1, 8): {1, 2, 3, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 6, 7, 8, 9}, (3, 3): {2, 3, 6, 7, 8, 9}, (3, 4): {3, 6, 7, 8, 9}, (3, 5): {2, 3, 6, 7, 8, 9}, (3, 6): {1, 2, 4, 6, 7, 8, 9}, (3, 7): {1, 2, 6, 7, 8, 9}, (3, 8): {5}, (4, 0): {1, 2, 3, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 6, 7, 8, 9}, (4, 7): {1, 2, 6, 7, 8, 9}, (4, 8): {1, 2, 6, 7, 8, 9}, (5, 0): {2, 4, 6, 7, 8, 9}, (5, 1): {2, 4, 6, 7, 8, 9}, (5, 2): {2, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {5, 6, 7, 8, 9}, (5, 5): {2, 5, 6, 7, 8, 9}, (5, 6): {3}, (5, 7): {2, 6, 7, 8, 9}, (5, 8): {2, 4, 6, 7, 8, 9}, (6, 0): {1, 3, 4, 6, 7, 8, 9}, (6, 1): {1, 3, 4, 6, 7, 8, 9}, (6, 2): {1, 3, 6, 7, 8, 9}, (6, 3): {3, 4, 5, 6, 7, 8, 9}, (6, 4): {2}, (6, 5): {1, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 3, 5, 6, 7, 8, 9}, (6, 8): {1, 3, 4, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (7, 1): {5}, (7, 2): {1, 2, 3, 6, 7, 8, 9}, (7, 3): {3, 4, 6, 7, 8, 9}, (7, 4): {1, 3, 4, 6, 7, 8, 9}, (7, 5): {1, 3, 6, 7, 8, 9}, (7, 6): {1, 2, 4, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 6, 7, 8, 9}, (8, 3): {3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [6, 7, 8, 9, 3]


Trying value 6 for cell (3, 4), current depth :0


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {3, 6, 7, 8, 9}.


The domain of cell (3, 4) is reduced to 6.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {1, 2, 7, 8, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 4), Now the domain is {5, 7, 8, 9}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 7, 8, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {3, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7, 8, 9}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 3, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 6 ,current depth:0


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [7, 8, 9, 5]


Trying value 7 for cell (5, 4), current depth :1


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {8, 9, 5, 7}.


The domain of cell (5, 4) is reduced to 7.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 8, 9}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 8, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {2, 6, 8, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 3), Now the domain is {2, 3, 8, 9}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 8, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 8, 9}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 5), Now the domain is {2, 3, 8, 9}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 8, 9}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 4), Now the domain is {3, 5, 8, 9}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 5), Now the domain is {2, 5, 8, 9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 8, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 3, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 7 ,current depth:1


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [8, 9, 3, 1]


Trying value 8 for cell (1, 4), current depth :2


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {8, 1, 3, 9}.


The domain of cell (1, 4) is reduced to 8.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 7, 9}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 7, 9}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 9}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 9}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 3, 5}.


Revised: The value 8 is removed from the domain of node (4, 4), Now the domain is {9, 3, 5}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,4).


Go deep in the search tree parent cell (1,4) with value 8 ,current depth:2


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [9, 3, 5]


Trying value 9 for cell (4, 4), current depth :3


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {9, 3, 5}.


The domain of cell (4, 4) is reduced to 9.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 8}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 9}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 2, 3}.


Revised: The value 9 is removed from the domain of node (3, 3), Now the domain is {8, 2, 3}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 9}.


Revised: The value 9 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {8, 9, 2, 3}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {8, 2, 3}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {8, 9, 2, 5}.


Revised: The value 9 is removed from the domain of node (5, 5), Now the domain is {8, 2, 5}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 9 ,current depth:3


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [3, 1, 5]


Trying value 3 for cell (2, 4), current depth :4


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {1, 3, 5}.


The domain of cell (2, 4) is reduced to 3.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 5), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 5), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {2, 6, 7, 9}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4}.


Revised: The value 3 is removed from the domain of node (7, 4), Now the domain is {1, 4}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 3 ,current depth:4


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [1, 4]


Trying value 1 for cell (7, 4), current depth :5


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {1, 4}.


The domain of cell (7, 4) is reduced to 1.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {4, 5}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {4, 5}.


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (7,4).


Go deep in the search tree parent cell (7,4) with value 1 ,current depth:5


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [5, 4]


Trying value 5 for cell (0, 4), current depth :6


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {4, 5}.


The domain of cell (0, 4) is reduced to 5.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {9, 2, 6, 7}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {4, 5}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {4}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (7, 4),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {2, 4, 6, 7, 9}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {2, 6, 7, 9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,4).


After make inferences we see that the domain of cell (8, 4) is {4}


Adding to board in cell :(8, 4),value :4


Go deep in the search tree parent cell (0,4) with value 5 ,current depth:6


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [2, 8, 3]


Trying value 2 for cell (3, 3), current depth :7


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {8, 2, 3}.


The domain of cell (3, 3) is reduced to 2.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {8, 2, 3, 5}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {8, 3, 5}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 7, 8, 9}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (1, 3), Now the domain is {9, 6, 7}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {1, 4, 7, 8, 9}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 3, 7, 8, 9}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {8, 2, 3}.


Revised: The value 2 is removed from the domain of node (3, 5), Now the domain is {8, 3}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (5, 5), Now the domain is {8, 5}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {4, 6, 7, 9}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (2, 3), Now the domain is {9, 6, 7}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 2 ,current depth:7


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [8, 3]


Trying value 8 for cell (3, 5), current depth :8


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {8, 3}.


The domain of cell (3, 5) is reduced to 8.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {8, 3, 5}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {3, 5}.


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 7, 9}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 9, 7}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 9, 7}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 6, 7, 9}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 6, 7, 9}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 7, 9}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {1, 4, 7, 9}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 2), Now the domain is {1, 3, 7, 9}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {5}.


Domain of (5, 5) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 5) for AC- check


Add to the Queue (4, 3),(5, 5) for AC- check


Add to the Queue (5, 4),(5, 5) for AC- check


Add to the Queue (5, 1),(5, 5) for AC- check


Add to the Queue (5, 7),(5, 5) for AC- check


Add to the Queue (0, 5),(5, 5) for AC- check


Add to the Queue (2, 5),(5, 5) for AC- check


Add to the Queue (6, 5),(5, 5) for AC- check


Add to the Queue (4, 5),(5, 5) for AC- check


Add to the Queue (3, 3),(5, 5) for AC- check


Add to the Queue (5, 0),(5, 5) for AC- check


Add to the Queue (5, 6),(5, 5) for AC- check


Add to the Queue (5, 3),(5, 5) for AC- check


Add to the Queue (8, 5),(5, 5) for AC- check


Add to the Queue (1, 5),(5, 5) for AC- check


Add to the Queue (5, 2),(5, 5) for AC- check


Add to the Queue (4, 4),(5, 5) for AC- check


Add to the Queue (5, 8),(5, 5) for AC- check


Add to the Queue (7, 5),(5, 5) for AC- check


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7, 9}.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {3, 5}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {3}.


Domain of (4, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 3) for AC- check


Add to the Queue (3, 4),(4, 3) for AC- check


Add to the Queue (5, 4),(4, 3) for AC- check


Add to the Queue (4, 6),(4, 3) for AC- check


Add to the Queue (8, 3),(4, 3) for AC- check


Add to the Queue (1, 3),(4, 3) for AC- check


Add to the Queue (4, 2),(4, 3) for AC- check


Add to the Queue (4, 5),(4, 3) for AC- check


Add to the Queue (3, 3),(4, 3) for AC- check


Add to the Queue (4, 8),(4, 3) for AC- check


Add to the Queue (5, 3),(4, 3) for AC- check


Add to the Queue (7, 3),(4, 3) for AC- check


Add to the Queue (4, 1),(4, 3) for AC- check


Add to the Queue (4, 7),(4, 3) for AC- check


Add to the Queue (3, 5),(4, 3) for AC- check


Add to the Queue (4, 4),(4, 3) for AC- check


Add to the Queue (0, 3),(4, 3) for AC- check


Add to the Queue (2, 3),(4, 3) for AC- check


Add to the Queue (6, 3),(4, 3) for AC- check


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 8, 9}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 2, 6}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 6, 7, 9}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 6, 7, 9}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {3, 6, 7, 9}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 8, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {3, 6, 7, 9}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {2, 6, 8, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 8, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 9}.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {5, 6, 7, 8, 9}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {9, 6, 7}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {6, 7, 8, 9}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 4, 6, 7}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {9, 6, 7}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,5).


After make inferences we see that the domain of cell (4, 3) is {3}


After make inferences we see that the domain of cell (5, 5) is {5}


Adding to board in cell :(4, 3),value :3


Adding to board in cell :(5, 5),value :5


Go deep in the search tree parent cell (3,5) with value 8 ,current depth:8


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [6, 7, 9]


Trying value 6 for cell (1, 3), current depth :9


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {9, 6, 7}.


The domain of cell (1, 3) is reduced to 6.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {5, 7, 8, 9}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (0, 5), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 7, 9}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 5), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 7, 9}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {8, 9, 7}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 7, 9}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 3), Now the domain is {9, 4, 7}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {9, 7}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {5, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,3).


Go deep in the search tree parent cell (1,3) with value 6 ,current depth:9


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [7, 9]


Trying value 7 for cell (2, 3), current depth :10


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {9, 7}.


The domain of cell (2, 3) is reduced to 7.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5, 7}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {8, 9, 5}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 9, 7}.


Revised: The value 7 is removed from the domain of node (0, 5), Now the domain is {1, 2, 9}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {1, 2, 9}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 2, 9}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {8, 9}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 3), Now the domain is {9, 4}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {8, 9, 5}.


End of Binary Constraints, Checks done for cell: (2,3).


Go deep in the search tree parent cell (2,3) with value 7 ,current depth:10


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [9, 4]


Trying value 9 for cell (0, 3), current depth :11


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {9, 4}.


The domain of cell (0, 3) is reduced to 9.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {8, 5}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 9}.


Revised: The value 9 is removed from the domain of node (0, 5), Now the domain is {1, 2}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {1, 2}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {1, 2}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {8}.


Domain of (7, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(7, 3) for AC- check


Add to the Queue (8, 3),(7, 3) for AC- check


Add to the Queue (1, 3),(7, 3) for AC- check


Add to the Queue (7, 4),(7, 3) for AC- check


Add to the Queue (7, 1),(7, 3) for AC- check


Add to the Queue (7, 7),(7, 3) for AC- check


Add to the Queue (6, 5),(7, 3) for AC- check


Add to the Queue (3, 3),(7, 3) for AC- check


Add to the Queue (5, 3),(7, 3) for AC- check


Add to the Queue (8, 5),(7, 3) for AC- check


Add to the Queue (7, 0),(7, 3) for AC- check


Add to the Queue (6, 4),(7, 3) for AC- check


Add to the Queue (7, 6),(7, 3) for AC- check


Add to the Queue (8, 4),(7, 3) for AC- check


Add to the Queue (2, 3),(7, 3) for AC- check


Add to the Queue (7, 2),(7, 3) for AC- check


Add to the Queue (7, 5),(7, 3) for AC- check


Add to the Queue (6, 3),(7, 3) for AC- check


Add to the Queue (7, 8),(7, 3) for AC- check


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {1, 2, 6, 7, 8}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {8, 5}.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {5}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 7, 9}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {9, 3, 6, 7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {9, 3, 6, 7}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 9}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {2, 3, 6, 7, 9}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {9, 3, 6, 7}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5}.


Revised: The value 8 is removed from the domain of node (6, 3), Now the domain is {5}.


Domain of (6, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(6, 3) for AC- check


Add to the Queue (8, 3),(6, 3) for AC- check


Add to the Queue (1, 3),(6, 3) for AC- check


Add to the Queue (7, 4),(6, 3) for AC- check


Add to the Queue (6, 2),(6, 3) for AC- check


Add to the Queue (6, 5),(6, 3) for AC- check


Add to the Queue (6, 8),(6, 3) for AC- check


Add to the Queue (3, 3),(6, 3) for AC- check


Add to the Queue (5, 3),(6, 3) for AC- check


Add to the Queue (8, 5),(6, 3) for AC- check


Add to the Queue (6, 1),(6, 3) for AC- check


Add to the Queue (6, 4),(6, 3) for AC- check


Add to the Queue (6, 7),(6, 3) for AC- check


Add to the Queue (8, 4),(6, 3) for AC- check


Add to the Queue (0, 3),(6, 3) for AC- check


Add to the Queue (2, 3),(6, 3) for AC- check


Add to the Queue (6, 0),(6, 3) for AC- check


Add to the Queue (6, 6),(6, 3) for AC- check


Add to the Queue (7, 5),(6, 3) for AC- check


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {9, 3, 6, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {9, 3, 6, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {9}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {9, 3, 6, 7}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Revised: The value 5 is removed from the domain of node (6, 3), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (0,3).


Undo operation ,current depth : 11.


Remove the assigment from the board ,(0,3)=0.


No inferences made from cell (0,3) to remove it.


Trying value 4 for cell (0, 3), current depth :11


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {9, 4}.


The domain of cell (0, 3) is reduced to 4.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 9}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5}.


End of Binary Constraints, Checks done for cell: (0,3).


Go deep in the search tree parent cell (0,3) with value 4 ,current depth:11


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [9, 8]


Trying value 9 for cell (7, 3), current depth :12


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {8, 9}.


The domain of cell (7, 3) is reduced to 9.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {8, 5}.


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 7, 8}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (6, 5), Now the domain is {3, 6, 7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {3, 6, 7}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 8}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 8}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {2, 3, 6, 7, 8}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {8, 5}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (7,3).


Go deep in the search tree parent cell (7,3) with value 9 ,current depth:12


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [8, 5]


Trying value 8 for cell (6, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {8, 5}.


The domain of cell (6, 3) is reduced to 8.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {5}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (7, 3),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 9}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


End of Binary Constraints, Checks done for cell: (6,3).


After make inferences we see that the domain of cell (8, 3) is {5}


Adding to board in cell :(8, 3),value :5


Go deep in the search tree parent cell (6,3) with value 8 ,current depth:13


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [1, 2, 9]


Trying value 1 for cell (0, 5), current depth :14


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {1, 2, 9}.


The domain of cell (0, 5) is reduced to 1.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {2, 9}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {2, 9}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 1 ,current depth:14


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [2, 9]


Trying value 2 for cell (1, 5), current depth :15


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {9, 2}.


The domain of cell (1, 5) is reduced to 2.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 9, 7}.


Revised: The value 2 is removed from the domain of node (1, 6), Now the domain is {1, 9, 7}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {9, 2}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {9}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {1, 3, 7, 9}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {1, 3, 7, 9}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 1), Now the domain is {1, 3, 7, 9}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {1, 2, 6, 8}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 8}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 8}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 8}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 8}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


End of Binary Constraints, Checks done for cell: (1,5).


After make inferences we see that the domain of cell (2, 5) is {9}


Adding to board in cell :(2, 5),value :9


Go deep in the search tree parent cell (1,5) with value 2 ,current depth:15


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [7, 1, 9]


Trying value 7 for cell (1, 6), current depth :16


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {1, 9, 7}.


The domain of cell (1, 6) is reduced to 7.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {1, 2, 6, 8}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 8, 9}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {2, 3, 6, 8, 9}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2, 6}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 9, 7}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {1, 4, 9}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {2, 3, 6, 8, 9}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 2), Now the domain is {1, 3, 9}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 3, 9}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 8}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 1), Now the domain is {1, 3, 9}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 6), Now the domain is {2, 6, 8, 9}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 7 ,current depth:16


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [1, 9, 3]


Trying value 1 for cell (1, 1), current depth :17


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {1, 3, 9}.


The domain of cell (1, 1) is reduced to 1.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 7, 9}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {3, 4, 7, 9}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 8, 9}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {1, 3, 9}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {3, 9}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {8, 1, 2, 6}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {8, 2, 6}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {3, 4, 6, 7, 9}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {1, 3, 9}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {3, 9}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {2, 6, 7, 8}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 1, 2, 6}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is {8, 2, 6}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 1 ,current depth:17


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [9, 3]


Trying value 9 for cell (1, 2), current depth :18


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {9, 3}.


The domain of cell (1, 2) is reduced to 9.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 8}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 8}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 2, 6}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {9, 3}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {3}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (1, 7),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 9, 7}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 3, 7}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 2, 6}.


Revised: The value 9 is removed from the domain of node (5, 2), Now the domain is {8, 2, 6}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 8}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 2, 6}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {2, 6, 8, 9}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2, 6}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 4, 6, 7, 9}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {2, 6, 8, 9}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 8, 9}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {8, 9, 2, 6}.


Processing (1, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {2, 4, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,2).


After make inferences we see that the domain of cell (1, 8) is {3}


Adding to board in cell :(1, 8),value :3


Go deep in the search tree parent cell (1,2) with value 9 ,current depth:18


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [6, 2, 8]


Trying value 6 for cell (2, 0), current depth :19


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {8, 2, 6}.


The domain of cell (2, 0) is reduced to 6.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (4, 0), Now the domain is {1, 2, 7, 8}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (0, 2), Now the domain is {2, 3, 7, 8}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2, 6}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {8, 1, 2}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7, 9}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {2, 4, 8, 9}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (0, 1), Now the domain is {2, 3, 7, 8}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {8, 2}.


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8}.


Revised: The value 6 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 8}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 7, 8}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (0, 0), Now the domain is {2, 3, 7, 8}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8}.


Revised: The value 6 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 8}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 7, 9}.


End of Binary Constraints, Checks done for cell: (2,0).


Go deep in the search tree parent cell (2,0) with value 6 ,current depth:19


MRV cell is (2, 1)


Attempting to fill cell (2, 1) with domain values: [2, 8]


Trying value 2 for cell (2, 1), current depth :20


Applying uniaray constraint.


Orginal domain of cell (2, 1) before reduction {8, 2}.


The domain of cell (2, 1) is reduced to 2.


Applying Binary constraint.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4, 7}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {4, 6, 8, 9}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {8, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {8, 3, 7}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {8, 1}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {8, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (0, 1), Now the domain is {8, 3, 7}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 1, 2, 5}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {8, 1, 5}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 7, 9}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {8, 6, 7}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {3, 6, 7, 8, 9}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {8, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (0, 0), Now the domain is {8, 3, 7}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (2, 1) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {8, 1, 2, 5}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {8, 1, 5}.


End of Binary Constraints, Checks done for cell: (2,1).


Go deep in the search tree parent cell (2,1) with value 2 ,current depth:20


MRV cell is (2, 8)


Attempting to fill cell (2, 8) with domain values: [8, 1]


Trying value 8 for cell (2, 8), current depth :21


Applying uniaray constraint.


Orginal domain of cell (2, 8) before reduction {8, 1}.


The domain of cell (2, 8) is reduced to 8.


Applying Binary constraint.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {8, 9, 2, 6}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {9, 2, 6}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7, 9}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {8, 9, 2, 6}.


Revised: The value 8 is removed from the domain of node (0, 7), Now the domain is {9, 2, 6}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (2, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 1, 5}.


Revised: The value 8 is removed from the domain of node (2, 7), Now the domain is {1, 5}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 9}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {8, 9, 2, 6}.


Revised: The value 8 is removed from the domain of node (0, 6), Now the domain is {9, 2, 6}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {8, 1, 5}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {1, 5}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2, 4, 6, 7}.


End of Binary Constraints, Checks done for cell: (2,8).


Go deep in the search tree parent cell (2,8) with value 8 ,current depth:21


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [1, 5]


Trying value 1 for cell (2, 6), current depth :22


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {1, 5}.


The domain of cell (2, 6) is reduced to 1.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 1, 2, 6}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {8, 2, 6}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 6, 8, 9}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 9}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {4, 9}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 5}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {5}.


Domain of (2, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(2, 7) for AC- check


Add to the Queue (5, 7),(2, 7) for AC- check


Add to the Queue (2, 2),(2, 7) for AC- check


Add to the Queue (1, 6),(2, 7) for AC- check


Add to the Queue (0, 8),(2, 7) for AC- check


Add to the Queue (2, 5),(2, 7) for AC- check


Add to the Queue (2, 8),(2, 7) for AC- check


Add to the Queue (7, 7),(2, 7) for AC- check


Add to the Queue (0, 7),(2, 7) for AC- check


Add to the Queue (2, 4),(2, 7) for AC- check


Add to the Queue (2, 1),(2, 7) for AC- check


Add to the Queue (1, 8),(2, 7) for AC- check


Add to the Queue (6, 7),(2, 7) for AC- check


Add to the Queue (4, 7),(2, 7) for AC- check


Add to the Queue (8, 7),(2, 7) for AC- check


Add to the Queue (2, 0),(2, 7) for AC- check


Add to the Queue (0, 6),(2, 7) for AC- check


Add to the Queue (2, 3),(2, 7) for AC- check


Add to the Queue (1, 7),(2, 7) for AC- check


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4, 6}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {4, 5, 6, 9}.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 9, 7}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 2, 6}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 6, 7, 9}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (2,6).


After make inferences we see that the domain of cell (2, 7) is {5}


Adding to board in cell :(2, 7),value :5


Go deep in the search tree parent cell (2,6) with value 1 ,current depth:22


MRV cell is (3, 6)


Attempting to fill cell (3, 6) with domain values: [9, 4]


Trying value 9 for cell (3, 6), current depth :23


Applying uniaray constraint.


Orginal domain of cell (3, 6) before reduction {9, 4}.


The domain of cell (3, 6) is reduced to 9.


Applying Binary constraint.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4, 7}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {3, 4, 7}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 9, 7}.


Revised: The value 9 is removed from the domain of node (3, 7), Now the domain is {1, 7}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 2, 6}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 2, 6}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {8, 2, 6}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 9, 2, 6}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {8, 2, 6}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7, 9}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 7}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4, 6}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 7}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {9, 2, 4, 6}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {2, 6}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5, 6}.


Revised: The value 9 is removed from the domain of node (6, 6), Now the domain is {4, 5, 6}.


End of Binary Constraints, Checks done for cell: (3,6).


Go deep in the search tree parent cell (3,6) with value 9 ,current depth:23


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [6, 2]


Trying value 6 for cell (0, 6), current depth :24


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {2, 6}.


The domain of cell (0, 6) is reduced to 6.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {8, 2}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (8, 6), Now the domain is {8, 2}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {9, 2}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {9, 2}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4, 6}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {8, 2, 4}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {4, 5}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 6 ,current depth:24


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [2, 9]


Trying value 2 for cell (0, 7), current depth :25


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {9, 2}.


The domain of cell (0, 7) is reduced to 2.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 7}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {8, 6}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {9, 2}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {9}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {3, 6, 7, 8}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 7, 9}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 6, 7, 8}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {1, 4, 6, 7}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {9}


Adding to board in cell :(0, 8),value :9


Go deep in the search tree parent cell (0,7) with value 2 ,current depth:25


MRV cell is (3, 7)


Attempting to fill cell (3, 7) with domain values: [7, 1]


Trying value 7 for cell (3, 7), current depth :26


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {1, 7}.


The domain of cell (3, 7) is reduced to 7.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {3, 4, 7}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {3, 4}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {8, 3, 6}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {1, 3, 6, 9}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 7}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 3}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {8, 1, 6}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 8, 9}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (3,7).


Go deep in the search tree parent cell (3,7) with value 7 ,current depth:26


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [4, 3]


Trying value 4 for cell (3, 1), current depth :27


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {3, 4}.


The domain of cell (3, 1) is reduced to 4.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 7}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 4, 6}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {8, 9, 6}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4}.


Revised: The value 4 is removed from the domain of node (3, 0), Now the domain is {1, 3}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2, 4}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {8, 9, 2}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 7, 9}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {3, 6, 7, 9}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1, 3}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {3, 6, 7, 8, 9}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 4 ,current depth:27


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [1, 3]


Trying value 1 for cell (3, 0), current depth :28


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {1, 3}.


The domain of cell (3, 0) is reduced to 1.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 7}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {8, 2, 7}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {2, 5, 6, 7, 8}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7, 8}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {1, 3}.


Revised: The value 1 is removed from the domain of node (3, 2), Now the domain is {3}.


Domain of (3, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(3, 2) for AC- check


Add to the Queue (3, 4),(3, 2) for AC- check


Add to the Queue (3, 1),(3, 2) for AC- check


Add to the Queue (3, 7),(3, 2) for AC- check


Add to the Queue (5, 1),(3, 2) for AC- check


Add to the Queue (0, 2),(3, 2) for AC- check


Add to the Queue (2, 2),(3, 2) for AC- check


Add to the Queue (6, 2),(3, 2) for AC- check


Add to the Queue (4, 2),(3, 2) for AC- check


Add to the Queue (3, 3),(3, 2) for AC- check


Add to the Queue (5, 0),(3, 2) for AC- check


Add to the Queue (3, 6),(3, 2) for AC- check


Add to the Queue (8, 2),(3, 2) for AC- check


Add to the Queue (1, 2),(3, 2) for AC- check


Add to the Queue (4, 1),(3, 2) for AC- check


Add to the Queue (3, 5),(3, 2) for AC- check


Add to the Queue (5, 2),(3, 2) for AC- check


Add to the Queue (3, 8),(3, 2) for AC- check


Add to the Queue (7, 2),(3, 2) for AC- check


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {3, 4, 7, 9}.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 7}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (0, 2), Now the domain is {8, 7}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {1, 6, 7}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {2, 5, 6, 7, 8}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6, 7, 8}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {2, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,0).


After make inferences we see that the domain of cell (3, 2) is {3}


Adding to board in cell :(3, 2),value :3


Go deep in the search tree parent cell (3,0) with value 1 ,current depth:28


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [7, 8]


Trying value 7 for cell (0, 2), current depth :29


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {8, 7}.


The domain of cell (0, 2) is reduced to 7.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {1, 6}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {2, 5, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {2, 5, 6, 8}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6, 8}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Revised: The value 7 is removed from the domain of node (0, 1), Now the domain is {8, 3}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Revised: The value 7 is removed from the domain of node (0, 0), Now the domain is {8, 3}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {8, 2, 6}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 7 ,current depth:29


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [8, 3]


Trying value 8 for cell (0, 0), current depth :30


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {8, 3}.


The domain of cell (0, 0) is reduced to 8.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 7}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {2, 7}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {2, 3, 7, 9}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {9, 2}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {8, 3}.


Revised: The value 8 is removed from the domain of node (0, 1), Now the domain is {3}.


Domain of (0, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(0, 1) for AC- check


Add to the Queue (5, 1),(0, 1) for AC- check


Add to the Queue (0, 2),(0, 1) for AC- check


Add to the Queue (0, 5),(0, 1) for AC- check


Add to the Queue (2, 2),(0, 1) for AC- check


Add to the Queue (1, 0),(0, 1) for AC- check


Add to the Queue (0, 8),(0, 1) for AC- check


Add to the Queue (7, 1),(0, 1) for AC- check


Add to the Queue (0, 7),(0, 1) for AC- check


Add to the Queue (1, 2),(0, 1) for AC- check


Add to the Queue (0, 4),(0, 1) for AC- check


Add to the Queue (2, 1),(0, 1) for AC- check


Add to the Queue (6, 1),(0, 1) for AC- check


Add to the Queue (4, 1),(0, 1) for AC- check


Add to the Queue (8, 1),(0, 1) for AC- check


Add to the Queue (1, 1),(0, 1) for AC- check


Add to the Queue (0, 3),(0, 1) for AC- check


Add to the Queue (2, 0),(0, 1) for AC- check


Add to the Queue (0, 6),(0, 1) for AC- check


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7, 8}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 7}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {9, 6, 7}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {6, 7, 8, 9}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {6}.


End of Binary Constraints, Checks done for cell: (0,0).


After make inferences we see that the domain of cell (0, 1) is {3}


Adding to board in cell :(0, 1),value :3


Go deep in the search tree parent cell (0,0) with value 8 ,current depth:30


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [2, 7]


Trying value 2 for cell (4, 0), current depth :31


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {2, 7}.


The domain of cell (4, 0) is reduced to 2.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Revised: The value 2 is removed from the domain of node (4, 6), Now the domain is {8}.


Domain of (4, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 6) for AC- check


Add to the Queue (3, 7),(4, 6) for AC- check


Add to the Queue (5, 7),(4, 6) for AC- check


Add to the Queue (8, 6),(4, 6) for AC- check


Add to the Queue (1, 6),(4, 6) for AC- check


Add to the Queue (4, 2),(4, 6) for AC- check


Add to the Queue (4, 5),(4, 6) for AC- check


Add to the Queue (5, 6),(4, 6) for AC- check


Add to the Queue (4, 8),(4, 6) for AC- check


Add to the Queue (3, 6),(4, 6) for AC- check


Add to the Queue (7, 6),(4, 6) for AC- check


Add to the Queue (4, 1),(4, 6) for AC- check


Add to the Queue (4, 7),(4, 6) for AC- check


Add to the Queue (4, 4),(4, 6) for AC- check


Add to the Queue (3, 8),(4, 6) for AC- check


Add to the Queue (5, 8),(4, 6) for AC- check


Add to the Queue (0, 6),(4, 6) for AC- check


Add to the Queue (2, 6),(4, 6) for AC- check


Add to the Queue (6, 6),(4, 6) for AC- check


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {9, 3, 7}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5, 6}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {8, 5, 6}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {1, 6}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {3, 4, 7}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {8, 6}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {6}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (5, 6),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (2, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (4, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 2}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {2}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {8, 5, 6}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {5, 6}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {2, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {6, 7}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 6}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {8, 6}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 7}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {3, 7}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {5, 6}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {3, 4, 7}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {6, 7}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 6}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {3, 4, 7}.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {8, 6}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {8}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 6}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {8, 3}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {1, 3, 9}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {1}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (4, 8),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {8, 6}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {8}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 1),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {2, 4}.


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 3, 8, 9}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {3, 7}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 3}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {8, 1, 2, 6}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {8, 1, 6}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1, 6, 7}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 9}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {4}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {8, 9, 6, 7}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 8, 9}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {4, 6, 7}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5, 6}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 6, 7}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {6, 7}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {8}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (4,0).


Undo operation ,current depth : 31.


Remove the assigment from the board ,(4,0)=0.


No inferences made from cell (4,0) to remove it.


Trying value 7 for cell (4, 0), current depth :31


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {2, 7}.


The domain of cell (4, 0) is reduced to 7.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {9, 2, 3}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5, 6}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {8, 6}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {9, 3, 4}.


End of Binary Constraints, Checks done for cell: (4,0).


Go deep in the search tree parent cell (4,0) with value 7 ,current depth:31


MRV cell is (4, 1)


Attempting to fill cell (4, 1) with domain values: [6, 8]


Trying value 6 for cell (4, 1), current depth :32


Applying uniaray constraint.


Orginal domain of cell (4, 1) before reduction {8, 6}.


The domain of cell (4, 1) is reduced to 6.


Applying Binary constraint.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {8, 9}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {8, 2, 5}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {9, 7}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {8, 1}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {8, 2}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {8, 9, 7}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


End of Binary Constraints, Checks done for cell: (4,1).


Go deep in the search tree parent cell (4,1) with value 6 ,current depth:32


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [2, 8]


Trying value 2 for cell (4, 6), current depth :33


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {8, 2}.


The domain of cell (4, 6) is reduced to 2.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 2}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {8}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {8, 5}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {1}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {8, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {4, 6}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 6}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {3, 6}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {8, 1, 2, 6}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {4}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {8, 9, 7}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {9, 7}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 9}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {4, 6, 7}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {8, 5}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 8), Now the domain is {2, 6, 7}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 8) <---- (4, 7) ,Domain of node (4, 7) is {8, 1}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {8}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {4, 6}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {4, 6, 7}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {6, 7}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {2, 3}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {5}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {2, 6, 7}.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {6}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (4, 6),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (5, 6),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (2, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {8, 5}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {5}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {4, 6}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {3}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {1, 3, 9}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {4, 6}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {4}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 3, 9}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {2, 3}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {2}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (6, 0),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 9}.


Revised: The value 3 is removed from the domain of node (6, 7), Now the domain is {1, 9}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 9}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {1, 9}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {6, 7}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {9, 3}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {1, 6}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {8, 6}.


Processing (7, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {6, 7}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {6, 7}.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {8}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {3}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(8, 0) for AC- check


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {3, 4}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {2}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (8, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {6, 7}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {1, 9}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {4}.


Domain of (6, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(6, 0) for AC- check


Add to the Queue (1, 0),(6, 0) for AC- check


Add to the Queue (6, 2),(6, 0) for AC- check


Add to the Queue (7, 1),(6, 0) for AC- check


Add to the Queue (6, 5),(6, 0) for AC- check


Add to the Queue (6, 8),(6, 0) for AC- check


Add to the Queue (3, 0),(6, 0) for AC- check


Add to the Queue (5, 0),(6, 0) for AC- check


Add to the Queue (8, 2),(6, 0) for AC- check


Add to the Queue (6, 1),(6, 0) for AC- check


Add to the Queue (7, 0),(6, 0) for AC- check


Add to the Queue (6, 4),(6, 0) for AC- check


Add to the Queue (6, 7),(6, 0) for AC- check


Add to the Queue (0, 0),(6, 0) for AC- check


Add to the Queue (8, 1),(6, 0) for AC- check


Add to the Queue (2, 0),(6, 0) for AC- check


Add to the Queue (7, 2),(6, 0) for AC- check


Add to the Queue (6, 6),(6, 0) for AC- check


Add to the Queue (6, 3),(6, 0) for AC- check


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 2) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {8}.


End of Binary Constraints, Checks done for cell: (4,6).


After make inferences we see that the domain of cell (4, 2) is {5}


After make inferences we see that the domain of cell (4, 7) is {8}


After make inferences we see that the domain of cell (4, 8) is {1}


After make inferences we see that the domain of cell (5, 0) is {9}


After make inferences we see that the domain of cell (5, 1) is {8}


After make inferences we see that the domain of cell (5, 2) is {2}


After make inferences we see that the domain of cell (5, 7) is {6}


After make inferences we see that the domain of cell (5, 8) is {4}


After make inferences we see that the domain of cell (6, 0) is {4}


After make inferences we see that the domain of cell (6, 6) is {5}


After make inferences we see that the domain of cell (7, 0) is {2}


After make inferences we see that the domain of cell (7, 6) is {4}


After make inferences we see that the domain of cell (7, 7) is {3}


After make inferences we see that the domain of cell (8, 0) is {3}


After make inferences we see that the domain of cell (8, 6) is {8}


Adding to board in cell :(4, 2),value :5


Adding to board in cell :(4, 7),value :8


Adding to board in cell :(4, 8),value :1


Adding to board in cell :(5, 0),value :9


Adding to board in cell :(5, 1),value :8


Adding to board in cell :(5, 2),value :2


Adding to board in cell :(5, 7),value :6


Adding to board in cell :(5, 8),value :4


Adding to board in cell :(6, 0),value :4


Adding to board in cell :(6, 6),value :5


Adding to board in cell :(7, 0),value :2


Adding to board in cell :(7, 6),value :4


Adding to board in cell :(7, 7),value :3


Adding to board in cell :(8, 0),value :3


Adding to board in cell :(8, 6),value :8


Go deep in the search tree parent cell (4,6) with value 2 ,current depth:33


MRV cell is (6, 1)


Attempting to fill cell (6, 1) with domain values: [7, 9]


Trying value 7 for cell (6, 1), current depth :34


Applying uniaray constraint.


Orginal domain of cell (6, 1) before reduction {9, 7}.


The domain of cell (6, 1) is reduced to 7.


Applying Binary constraint.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {8}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 5), Now the domain is {3, 6}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Revised: The value 7 is removed from the domain of node (6, 8), Now the domain is {6}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {9}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {1}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 4),(6, 2) for AC- check


Add to the Queue (6, 7),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (7, 2),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 6),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {3, 6}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {3}.


Domain of (6, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(6, 5) for AC- check


Add to the Queue (0, 5),(6, 5) for AC- check


Add to the Queue (2, 5),(6, 5) for AC- check


Add to the Queue (7, 4),(6, 5) for AC- check


Add to the Queue (6, 2),(6, 5) for AC- check


Add to the Queue (4, 5),(6, 5) for AC- check


Add to the Queue (8, 5),(6, 5) for AC- check


Add to the Queue (1, 5),(6, 5) for AC- check


Add to the Queue (6, 1),(6, 5) for AC- check


Add to the Queue (6, 4),(6, 5) for AC- check


Add to the Queue (7, 3),(6, 5) for AC- check


Add to the Queue (6, 7),(6, 5) for AC- check


Add to the Queue (3, 5),(6, 5) for AC- check


Add to the Queue (5, 5),(6, 5) for AC- check


Add to the Queue (8, 4),(6, 5) for AC- check


Add to the Queue (6, 0),(6, 5) for AC- check


Add to the Queue (6, 6),(6, 5) for AC- check


Add to the Queue (7, 5),(6, 5) for AC- check


Add to the Queue (6, 3),(6, 5) for AC- check


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {2, 7}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {1, 9}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {6, 7}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {7}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {8}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {2, 7}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 1) <---- (8, 7) ,Domain of node (8, 7) is {1, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {6}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (7, 2),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {9}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {6, 7}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {2}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {6, 7}.


Revised: The value 7 is removed from the domain of node (7, 5), Now the domain is {6}.


Domain of (7, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(7, 5) for AC- check


Add to the Queue (0, 5),(7, 5) for AC- check


Add to the Queue (2, 5),(7, 5) for AC- check


Add to the Queue (7, 4),(7, 5) for AC- check


Add to the Queue (7, 1),(7, 5) for AC- check


Add to the Queue (7, 7),(7, 5) for AC- check


Add to the Queue (6, 5),(7, 5) for AC- check


Add to the Queue (4, 5),(7, 5) for AC- check


Add to the Queue (8, 5),(7, 5) for AC- check


Add to the Queue (1, 5),(7, 5) for AC- check


Add to the Queue (7, 0),(7, 5) for AC- check


Add to the Queue (6, 4),(7, 5) for AC- check


Add to the Queue (7, 3),(7, 5) for AC- check


Add to the Queue (7, 6),(7, 5) for AC- check


Add to the Queue (3, 5),(7, 5) for AC- check


Add to the Queue (5, 5),(7, 5) for AC- check


Add to the Queue (8, 4),(7, 5) for AC- check


Add to the Queue (7, 2),(7, 5) for AC- check


Add to the Queue (6, 3),(7, 5) for AC- check


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {6}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {6}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {7}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {7}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (7, 5),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {8}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (4, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {6}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {7}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {6}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {6}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {8}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 5) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {7}.


End of Binary Constraints, Checks done for cell: (6,1).


After make inferences we see that the domain of cell (6, 2) is {1}


After make inferences we see that the domain of cell (6, 5) is {3}


After make inferences we see that the domain of cell (6, 7) is {9}


After make inferences we see that the domain of cell (6, 8) is {6}


After make inferences we see that the domain of cell (7, 2) is {8}


After make inferences we see that the domain of cell (7, 5) is {6}


After make inferences we see that the domain of cell (7, 8) is {7}


After make inferences we see that the domain of cell (8, 1) is {9}


After make inferences we see that the domain of cell (8, 2) is {6}


After make inferences we see that the domain of cell (8, 5) is {7}


After make inferences we see that the domain of cell (8, 7) is {1}


After make inferences we see that the domain of cell (8, 8) is {2}


Adding to board in cell :(6, 2),value :1


Adding to board in cell :(6, 5),value :3


Adding to board in cell :(6, 7),value :9


Adding to board in cell :(6, 8),value :6


Adding to board in cell :(7, 2),value :8


Adding to board in cell :(7, 5),value :6


Adding to board in cell :(7, 8),value :7


Adding to board in cell :(8, 1),value :9


Adding to board in cell :(8, 2),value :6


Adding to board in cell :(8, 5),value :7


Adding to board in cell :(8, 7),value :1


Adding to board in cell :(8, 8),value :2


Go deep in the search tree parent cell (6,1) with value 7 ,current depth:34


MRV cell is None


End of applying Backtracking.


AI Start Solving


Apply uniary constraint to the Initial Board


The domain of cell (1, 0) is reduced to 5.


The domain of cell (1, 7) is reduced to 4.


The domain of cell (2, 2) is reduced to 4.


The domain of cell (3, 8) is reduced to 5.


The domain of cell (4, 5) is reduced to 4.


The domain of cell (5, 3) is reduced to 1.


The domain of cell (5, 6) is reduced to 3.


The domain of cell (6, 4) is reduced to 2.


The domain of cell (7, 1) is reduced to 5.


Apply Binary constraint to the Initial Board


All posible arcs to (1,0) are [(4, 0), (8, 0), (0, 2), (2, 2), (1, 6), (1, 3), (3, 0), (5, 0), (0, 1), (1, 2), (2, 1), (1, 5), (1, 8), (7, 0), (0, 0), (1, 1), (2, 0), (1, 4), (1, 7), (6, 0)]


Processing (1, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 0) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (1, 0) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 0), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


All posible arcs to (1,7) are [(3, 7), (5, 7), (1, 0), (1, 6), (0, 8), (1, 3), (2, 8), (7, 7), (0, 7), (1, 2), (2, 7), (1, 5), (1, 8), (6, 7), (4, 7), (8, 7), (1, 1), (1, 4), (0, 6), (2, 6)]


Processing (1, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 7) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 3), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (1, 4), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (1, 7) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (1, 7) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 6), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (2,2) are [(0, 2), (1, 0), (2, 5), (2, 8), (6, 2), (4, 2), (8, 2), (0, 1), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (5, 2), (0, 0), (1, 1), (2, 0), (2, 3), (2, 6), (7, 2)]


Processing (2, 2) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 2) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (2, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (2, 2) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (3,8) are [(3, 4), (3, 1), (3, 7), (4, 6), (5, 7), (0, 8), (2, 8), (6, 8), (3, 0), (3, 3), (5, 6), (4, 8), (3, 6), (8, 8), (1, 8), (3, 2), (4, 7), (3, 5), (5, 8), (7, 8)]


Processing (3, 8) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (2, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 6), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (3, 8) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (3, 8) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 8), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


All posible arcs to (4,5) are [(4, 0), (3, 4), (4, 3), (5, 4), (4, 6), (0, 5), (2, 5), (6, 5), (4, 2), (3, 3), (4, 8), (5, 3), (8, 5), (1, 5), (4, 1), (4, 7), (3, 5), (4, 4), (5, 5), (7, 5)]


Processing (4, 5) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 4), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 3), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 6), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 3), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 5) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (3, 5), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (4, 5) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (4, 4), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (5, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (4, 5) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 5), Now the domain is {1, 2, 3, 5, 6, 7, 8, 9}.


All posible arcs to (5,3) are [(3, 4), (4, 3), (5, 4), (5, 1), (5, 7), (8, 3), (1, 3), (4, 5), (3, 3), (5, 0), (5, 6), (7, 3), (3, 5), (5, 2), (4, 4), (5, 5), (5, 8), (0, 3), (2, 3), (6, 3)]


Processing (5, 3) <---- (3, 4) ,Domain of node (3, 4) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 4), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 3) ,Domain of node (4, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 4) ,Domain of node (5, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 1) ,Domain of node (5, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 1), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 7) ,Domain of node (5, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (8, 3) ,Domain of node (8, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (1, 3) ,Domain of node (1, 3) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 3) <---- (3, 3) ,Domain of node (3, 3) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 3), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 0) ,Domain of node (5, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 3) <---- (7, 3) ,Domain of node (7, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (3, 5) ,Domain of node (3, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (3, 5), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 2) ,Domain of node (5, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 2), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (4, 4) ,Domain of node (4, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (4, 4), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 5) ,Domain of node (5, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 5), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (5, 8) ,Domain of node (5, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (5, 8), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (5, 3) <---- (0, 3) ,Domain of node (0, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (2, 3) ,Domain of node (2, 3) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 8, 9}.


Processing (5, 3) <---- (6, 3) ,Domain of node (6, 3) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 3), Now the domain is {2, 3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (5,6) are [(3, 7), (5, 4), (4, 6), (5, 1), (5, 7), (8, 6), (1, 6), (5, 0), (4, 8), (3, 6), (5, 3), (7, 6), (4, 7), (5, 2), (3, 8), (5, 5), (5, 8), (0, 6), (2, 6), (6, 6)]


Processing (5, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 7), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 4) ,Domain of node (5, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 4), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 1) ,Domain of node (5, 1) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 1), Now the domain is {2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 7) ,Domain of node (5, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 7), Now the domain is {2, 6, 7, 8, 9}.


Processing (5, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 0) ,Domain of node (5, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 6) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 2) ,Domain of node (5, 2) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 6) <---- (5, 5) ,Domain of node (5, 5) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 5), Now the domain is {2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (5, 6) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (5, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 6), Now the domain is {1, 2, 4, 5, 6, 7, 8, 9}.


All posible arcs to (6,4) are [(3, 4), (5, 4), (8, 3), (7, 4), (6, 2), (6, 5), (6, 8), (8, 5), (2, 4), (0, 4), (6, 1), (7, 3), (6, 7), (4, 4), (8, 4), (1, 4), (6, 0), (6, 6), (7, 5), (6, 3)]


Processing (6, 4) <---- (3, 4) ,Domain of node (3, 4) is {2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 4), Now the domain is {3, 6, 7, 8, 9}.


Processing (6, 4) <---- (5, 4) ,Domain of node (5, 4) is {2, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 4), Now the domain is {5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 3) ,Domain of node (8, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 2) ,Domain of node (6, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 2), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 8) ,Domain of node (6, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 1) ,Domain of node (6, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 3) ,Domain of node (7, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 7) ,Domain of node (6, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (4, 4) ,Domain of node (4, 4) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (4, 4), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (1, 4), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 0) ,Domain of node (6, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 6) ,Domain of node (6, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (7, 5), Now the domain is {1, 3, 5, 6, 7, 8, 9}.


Processing (6, 4) <---- (6, 3) ,Domain of node (6, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (6, 3), Now the domain is {3, 4, 5, 6, 7, 8, 9}.


All posible arcs to (7,1) are [(3, 1), (5, 1), (8, 0), (7, 4), (6, 2), (7, 7), (8, 2), (0, 1), (2, 1), (6, 1), (7, 0), (7, 3), (7, 6), (4, 1), (8, 1), (1, 1), (7, 2), (6, 0), (7, 5), (7, 8)]


Processing (7, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 3), Now the domain is {3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 6), Now the domain is {1, 2, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 2), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (7, 5), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (7, 1) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Intiall assigment to board before we start backtrack : {}.


Domains : {(0, 0): {1, 2, 3, 6, 7, 8, 9}, (0, 1): {1, 2, 3, 6, 7, 8, 9}, (0, 2): {1, 2, 3, 6, 7, 8, 9}, (0, 3): {2, 3, 4, 5, 6, 7, 8, 9}, (0, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (0, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 6): {1, 2, 5, 6, 7, 8, 9}, (0, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (0, 8): {1, 2, 3, 6, 7, 8, 9}, (1, 0): {5}, (1, 1): {1, 2, 3, 6, 7, 8, 9}, (1, 2): {1, 2, 3, 6, 7, 8, 9}, (1, 3): {2, 3, 6, 7, 8, 9}, (1, 4): {1, 3, 6, 7, 8, 9}, (1, 5): {1, 2, 3, 6, 7, 8, 9}, (1, 6): {1, 2, 6, 7, 8, 9}, (1, 7): {4}, (1, 8): {1, 2, 3, 6, 7, 8, 9}, (2, 0): {1, 2, 3, 6, 7, 8, 9}, (2, 1): {1, 2, 3, 6, 7, 8, 9}, (2, 2): {4}, (2, 3): {2, 3, 5, 6, 7, 8, 9}, (2, 4): {1, 3, 5, 6, 7, 8, 9}, (2, 5): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 6): {1, 2, 5, 6, 7, 8, 9}, (2, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (2, 8): {1, 2, 3, 6, 7, 8, 9}, (3, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (3, 1): {1, 2, 3, 4, 6, 7, 8, 9}, (3, 2): {1, 2, 3, 6, 7, 8, 9}, (3, 3): {2, 3, 6, 7, 8, 9}, (3, 4): {3, 6, 7, 8, 9}, (3, 5): {2, 3, 6, 7, 8, 9}, (3, 6): {1, 2, 4, 6, 7, 8, 9}, (3, 7): {1, 2, 6, 7, 8, 9}, (3, 8): {5}, (4, 0): {1, 2, 3, 6, 7, 8, 9}, (4, 1): {1, 2, 3, 6, 7, 8, 9}, (4, 2): {1, 2, 3, 5, 6, 7, 8, 9}, (4, 3): {2, 3, 5, 6, 7, 8, 9}, (4, 4): {3, 5, 6, 7, 8, 9}, (4, 5): {4}, (4, 6): {1, 2, 6, 7, 8, 9}, (4, 7): {1, 2, 6, 7, 8, 9}, (4, 8): {1, 2, 6, 7, 8, 9}, (5, 0): {2, 4, 6, 7, 8, 9}, (5, 1): {2, 4, 6, 7, 8, 9}, (5, 2): {2, 5, 6, 7, 8, 9}, (5, 3): {1}, (5, 4): {5, 6, 7, 8, 9}, (5, 5): {2, 5, 6, 7, 8, 9}, (5, 6): {3}, (5, 7): {2, 6, 7, 8, 9}, (5, 8): {2, 4, 6, 7, 8, 9}, (6, 0): {1, 3, 4, 6, 7, 8, 9}, (6, 1): {1, 3, 4, 6, 7, 8, 9}, (6, 2): {1, 3, 6, 7, 8, 9}, (6, 3): {3, 4, 5, 6, 7, 8, 9}, (6, 4): {2}, (6, 5): {1, 3, 5, 6, 7, 8, 9}, (6, 6): {1, 4, 5, 6, 7, 8, 9}, (6, 7): {1, 3, 5, 6, 7, 8, 9}, (6, 8): {1, 3, 4, 6, 7, 8, 9}, (7, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (7, 1): {5}, (7, 2): {1, 2, 3, 6, 7, 8, 9}, (7, 3): {3, 4, 6, 7, 8, 9}, (7, 4): {1, 3, 4, 6, 7, 8, 9}, (7, 5): {1, 3, 6, 7, 8, 9}, (7, 6): {1, 2, 4, 6, 7, 8, 9}, (7, 7): {1, 2, 3, 6, 7, 8, 9}, (7, 8): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 0): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 1): {1, 2, 3, 4, 6, 7, 8, 9}, (8, 2): {1, 2, 3, 6, 7, 8, 9}, (8, 3): {3, 4, 5, 6, 7, 8, 9}, (8, 4): {1, 3, 4, 5, 6, 7, 8, 9}, (8, 5): {1, 3, 5, 6, 7, 8, 9}, (8, 6): {1, 2, 4, 5, 6, 7, 8, 9}, (8, 7): {1, 2, 3, 5, 6, 7, 8, 9}, (8, 8): {1, 2, 3, 4, 6, 7, 8, 9}}


Start of backtracking


MRV cell is (3, 4)


Attempting to fill cell (3, 4) with domain values: [6, 7, 8, 9, 3]


Trying value 6 for cell (3, 4), current depth :0


Applying uniaray constraint.


Orginal domain of cell (3, 4) before reduction {3, 6, 7, 8, 9}.


The domain of cell (3, 4) is reduced to 6.


Applying Binary constraint.


Processing (3, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 1), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 7), Now the domain is {1, 2, 7, 8, 9}.


Processing (3, 4) <---- (5, 4) ,Domain of node (5, 4) is {5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 4), Now the domain is {5, 7, 8, 9}.


Processing (3, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 0), Now the domain is {1, 2, 3, 4, 7, 8, 9}.


Processing (3, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 3), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 6), Now the domain is {1, 2, 4, 7, 8, 9}.


Processing (3, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 7, 8, 9}.


Processing (3, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (3, 4) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 2), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (3, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (3, 5), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (4, 4), Now the domain is {3, 5, 7, 8, 9}.


Processing (3, 4) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 5), Now the domain is {2, 5, 7, 8, 9}.


Processing (3, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 7, 8, 9}.


Processing (3, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (1, 4), Now the domain is {1, 3, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,4).


Go deep in the search tree parent cell (3,4) with value 6 ,current depth:0


MRV cell is (5, 4)


Attempting to fill cell (5, 4) with domain values: [7, 8, 9, 5]


Trying value 7 for cell (5, 4), current depth :1


Applying uniaray constraint.


Orginal domain of cell (5, 4) before reduction {8, 9, 5, 7}.


The domain of cell (5, 4) is reduced to 7.


Applying Binary constraint.


Processing (5, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 8, 9}.


Processing (5, 4) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 1), Now the domain is {2, 4, 6, 8, 9}.


Processing (5, 4) <---- (5, 7) ,Domain of node (5, 7) is {2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 7), Now the domain is {2, 6, 8, 9}.


Processing (5, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 8, 9}.


Processing (5, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 4) <---- (3, 3) ,Domain of node (3, 3) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 3), Now the domain is {2, 3, 8, 9}.


Processing (5, 4) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 0), Now the domain is {2, 4, 6, 8, 9}.


Processing (5, 4) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 8, 9}.


Processing (5, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (5, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (5, 4) <---- (3, 5) ,Domain of node (3, 5) is {2, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (3, 5), Now the domain is {2, 3, 8, 9}.


Processing (5, 4) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 2), Now the domain is {2, 5, 6, 8, 9}.


Processing (5, 4) <---- (4, 4) ,Domain of node (4, 4) is {3, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (4, 4), Now the domain is {3, 5, 8, 9}.


Processing (5, 4) <---- (5, 5) ,Domain of node (5, 5) is {2, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 5), Now the domain is {2, 5, 8, 9}.


Processing (5, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 8, 9}.


Processing (5, 4) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 8, 9}.


Processing (5, 4) <---- (1, 4) ,Domain of node (1, 4) is {1, 3, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (1, 4), Now the domain is {1, 3, 8, 9}.


End of Binary Constraints, Checks done for cell: (5,4).


Go deep in the search tree parent cell (5,4) with value 7 ,current depth:1


MRV cell is (1, 4)


Attempting to fill cell (1, 4) with domain values: [8, 9, 3, 1]


Trying value 8 for cell (1, 4), current depth :2


Applying uniaray constraint.


Orginal domain of cell (1, 4) before reduction {8, 1, 3, 9}.


The domain of cell (1, 4) is reduced to 8.


Applying Binary constraint.


Processing (1, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (1, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (1, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 4) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 6), Now the domain is {1, 2, 6, 7, 9}.


Processing (1, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 5), Now the domain is {1, 2, 3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 3), Now the domain is {2, 3, 6, 7, 9}.


Processing (1, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4, 9}.


Processing (1, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5, 9}.


Processing (1, 4) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (1, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 5), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (1, 4) <---- (4, 4) ,Domain of node (4, 4) is {8, 9, 3, 5}.


Revised: The value 8 is removed from the domain of node (4, 4), Now the domain is {9, 3, 5}.


Processing (1, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5, 9}.


Processing (1, 4) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 6, 7, 9}.


Processing (1, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (0, 3), Now the domain is {2, 3, 4, 5, 6, 7, 9}.


Processing (1, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (2, 3), Now the domain is {2, 3, 5, 6, 7, 9}.


Processing (1, 4) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,4).


Go deep in the search tree parent cell (1,4) with value 8 ,current depth:2


MRV cell is (4, 4)


Attempting to fill cell (4, 4) with domain values: [9, 3, 5]


Trying value 9 for cell (4, 4), current depth :3


Applying uniaray constraint.


Orginal domain of cell (4, 4) before reduction {9, 3, 5}.


The domain of cell (4, 4) is reduced to 9.


Applying Binary constraint.


Processing (4, 4) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 4) <---- (4, 3) ,Domain of node (4, 3) is {2, 3, 5, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 3), Now the domain is {2, 3, 5, 8}.


Processing (4, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (4, 4) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 6), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4, 9}.


Revised: The value 9 is removed from the domain of node (7, 4), Now the domain is {1, 3, 4}.


Processing (4, 4) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 2), Now the domain is {1, 2, 3, 5, 6, 7, 8}.


Processing (4, 4) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 4) <---- (3, 3) ,Domain of node (3, 3) is {8, 9, 2, 3}.


Revised: The value 9 is removed from the domain of node (3, 3), Now the domain is {8, 2, 3}.


Processing (4, 4) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 4) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 4) <---- (2, 4) ,Domain of node (2, 4) is {1, 3, 5, 9}.


Revised: The value 9 is removed from the domain of node (2, 4), Now the domain is {1, 3, 5}.


Processing (4, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (0, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (4, 4) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (4, 4) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (4, 7), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 4) <---- (3, 5) ,Domain of node (3, 5) is {8, 9, 2, 3}.


Revised: The value 9 is removed from the domain of node (3, 5), Now the domain is {8, 2, 3}.


Processing (4, 4) <---- (5, 5) ,Domain of node (5, 5) is {8, 9, 2, 5}.


Revised: The value 9 is removed from the domain of node (5, 5), Now the domain is {8, 2, 5}.


Processing (4, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5, 9}.


Revised: The value 9 is removed from the domain of node (8, 4), Now the domain is {1, 3, 4, 5}.


Processing (4, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


End of Binary Constraints, Checks done for cell: (4,4).


Go deep in the search tree parent cell (4,4) with value 9 ,current depth:3


MRV cell is (2, 4)


Attempting to fill cell (2, 4) with domain values: [3, 1, 5]


Trying value 3 for cell (2, 4), current depth :4


Applying uniaray constraint.


Orginal domain of cell (2, 4) before reduction {1, 3, 5}.


The domain of cell (2, 4) is reduced to 3.


Applying Binary constraint.


Processing (2, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (2, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (2, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 5), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 5), Now the domain is {1, 2, 5, 6, 7, 9}.


Processing (2, 4) <---- (1, 3) ,Domain of node (1, 3) is {2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (1, 3), Now the domain is {2, 6, 7, 9}.


Processing (2, 4) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (7, 4) ,Domain of node (7, 4) is {1, 3, 4}.


Revised: The value 3 is removed from the domain of node (7, 4), Now the domain is {1, 4}.


Processing (2, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (0, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 3, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (1, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (2, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (2, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 3, 4, 5}.


Revised: The value 3 is removed from the domain of node (8, 4), Now the domain is {1, 4, 5}.


Processing (2, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 3, 4, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (0, 3), Now the domain is {2, 4, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (2, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 3, 5, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (2, 3), Now the domain is {2, 5, 6, 7, 9}.


Processing (2, 4) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (2,4).


Go deep in the search tree parent cell (2,4) with value 3 ,current depth:4


MRV cell is (7, 4)


Attempting to fill cell (7, 4) with domain values: [1, 4]


Trying value 1 for cell (7, 4), current depth :5


Applying uniaray constraint.


Orginal domain of cell (7, 4) before reduction {1, 4}.


The domain of cell (7, 4) is reduced to 1.


Applying Binary constraint.


Processing (7, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (7, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (7, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 4) <---- (7, 7) ,Domain of node (7, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 5) ,Domain of node (6, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (6, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (8, 5) ,Domain of node (8, 5) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 5), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (7, 4) <---- (0, 4) ,Domain of node (0, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (0, 4), Now the domain is {4, 5}.


Processing (7, 4) <---- (7, 0) ,Domain of node (7, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 6) ,Domain of node (7, 6) is {1, 2, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 8, 9}.


Processing (7, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (7, 4) <---- (8, 4) ,Domain of node (8, 4) is {1, 4, 5}.


Revised: The value 1 is removed from the domain of node (8, 4), Now the domain is {4, 5}.


Processing (7, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (7, 4) <---- (7, 2) ,Domain of node (7, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 2), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 5) ,Domain of node (7, 5) is {1, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7, 8, 9}.


Processing (7, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Processing (7, 4) <---- (7, 8) ,Domain of node (7, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (7,4).


Go deep in the search tree parent cell (7,4) with value 1 ,current depth:5


MRV cell is (0, 4)


Attempting to fill cell (0, 4) with domain values: [5, 4]


Trying value 5 for cell (0, 4), current depth :6


Applying uniaray constraint.


Orginal domain of cell (0, 4) before reduction {4, 5}.


The domain of cell (0, 4) is reduced to 5.


Applying Binary constraint.


Processing (0, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (0, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (0, 4) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 4) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (2, 5), Now the domain is {1, 2, 6, 7, 9}.


Processing (0, 4) <---- (1, 3) ,Domain of node (1, 3) is {9, 2, 6, 7}.


Processing (0, 4) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (0, 4) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 4) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Processing (0, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (0, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (0, 4) <---- (8, 4) ,Domain of node (8, 4) is {4, 5}.


Revised: The value 5 is removed from the domain of node (8, 4), Now the domain is {4}.


Domain of (8, 4) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(8, 4) for AC- check


Add to the Queue (5, 4),(8, 4) for AC- check


Add to the Queue (8, 0),(8, 4) for AC- check


Add to the Queue (8, 3),(8, 4) for AC- check


Add to the Queue (8, 6),(8, 4) for AC- check


Add to the Queue (7, 4),(8, 4) for AC- check


Add to the Queue (6, 5),(8, 4) for AC- check


Add to the Queue (8, 2),(8, 4) for AC- check


Add to the Queue (8, 5),(8, 4) for AC- check


Add to the Queue (8, 8),(8, 4) for AC- check


Add to the Queue (2, 4),(8, 4) for AC- check


Add to the Queue (6, 4),(8, 4) for AC- check


Add to the Queue (7, 3),(8, 4) for AC- check


Add to the Queue (4, 4),(8, 4) for AC- check


Add to the Queue (8, 1),(8, 4) for AC- check


Add to the Queue (8, 7),(8, 4) for AC- check


Add to the Queue (1, 4),(8, 4) for AC- check


Add to the Queue (7, 5),(8, 4) for AC- check


Add to the Queue (6, 3),(8, 4) for AC- check


Processing (0, 4) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 4) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (0, 3), Now the domain is {2, 4, 6, 7, 9}.


Processing (0, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 4) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (0, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (0, 4) <---- (2, 3) ,Domain of node (2, 3) is {2, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (2, 3), Now the domain is {2, 6, 7, 9}.


Processing (8, 4) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (8, 4) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (8, 4) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 3) ,Domain of node (8, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 6), Now the domain is {1, 2, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 4) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 8), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (8, 4) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 4) <---- (7, 3) ,Domain of node (7, 3) is {3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (7, 3), Now the domain is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (8, 4) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 4, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (8, 1), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 4) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Processing (8, 4) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (8, 4) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


Processing (8, 4) <---- (6, 3) ,Domain of node (6, 3) is {3, 4, 5, 6, 7, 8, 9}.


Revised: The value 4 is removed from the domain of node (6, 3), Now the domain is {3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (0,4).


After make inferences we see that the domain of cell (8, 4) is {4}


Adding to board in cell :(8, 4),value :4


Go deep in the search tree parent cell (0,4) with value 5 ,current depth:6


MRV cell is (3, 3)


Attempting to fill cell (3, 3) with domain values: [2, 8, 3]


Trying value 2 for cell (3, 3), current depth :7


Applying uniaray constraint.


Orginal domain of cell (3, 3) before reduction {8, 2, 3}.


The domain of cell (3, 3) is reduced to 2.


Applying Binary constraint.


Processing (3, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 3) <---- (4, 3) ,Domain of node (4, 3) is {8, 2, 3, 5}.


Revised: The value 2 is removed from the domain of node (4, 3), Now the domain is {8, 3, 5}.


Processing (3, 3) <---- (3, 1) ,Domain of node (3, 1) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 3) <---- (3, 7) ,Domain of node (3, 7) is {1, 2, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 7), Now the domain is {1, 7, 8, 9}.


Processing (3, 3) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (3, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 7, 8, 9}.


Processing (3, 3) <---- (1, 3) ,Domain of node (1, 3) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (1, 3), Now the domain is {9, 6, 7}.


Processing (3, 3) <---- (3, 0) ,Domain of node (3, 0) is {1, 2, 3, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 7, 8, 9}.


Processing (3, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 3) <---- (3, 6) ,Domain of node (3, 6) is {1, 2, 4, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 6), Now the domain is {1, 4, 7, 8, 9}.


Processing (3, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8, 9}.


Processing (3, 3) <---- (3, 2) ,Domain of node (3, 2) is {1, 2, 3, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (3, 2), Now the domain is {1, 3, 7, 8, 9}.


Processing (3, 3) <---- (3, 5) ,Domain of node (3, 5) is {8, 2, 3}.


Revised: The value 2 is removed from the domain of node (3, 5), Now the domain is {8, 3}.


Processing (3, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 3) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 3) <---- (5, 5) ,Domain of node (5, 5) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (5, 5), Now the domain is {8, 5}.


Processing (3, 3) <---- (0, 3) ,Domain of node (0, 3) is {2, 4, 6, 7, 9}.


Revised: The value 2 is removed from the domain of node (0, 3), Now the domain is {4, 6, 7, 9}.


Processing (3, 3) <---- (2, 3) ,Domain of node (2, 3) is {9, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (2, 3), Now the domain is {9, 6, 7}.


Processing (3, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,3).


Go deep in the search tree parent cell (3,3) with value 2 ,current depth:7


MRV cell is (3, 5)


Attempting to fill cell (3, 5) with domain values: [8, 3]


Trying value 8 for cell (3, 5), current depth :8


Applying uniaray constraint.


Orginal domain of cell (3, 5) before reduction {8, 3}.


The domain of cell (3, 5) is reduced to 8.


Applying Binary constraint.


Processing (3, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 5) <---- (4, 3) ,Domain of node (4, 3) is {8, 3, 5}.


Revised: The value 8 is removed from the domain of node (4, 3), Now the domain is {3, 5}.


Processing (3, 5) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 1), Now the domain is {1, 3, 4, 7, 9}.


Processing (3, 5) <---- (3, 7) ,Domain of node (3, 7) is {8, 1, 9, 7}.


Revised: The value 8 is removed from the domain of node (3, 7), Now the domain is {1, 9, 7}.


Processing (3, 5) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (3, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 6, 7, 9}.


Processing (3, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 6, 7, 9}.


Processing (3, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (3, 5) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 7, 9}.


Processing (3, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (3, 5) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 5) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 6), Now the domain is {1, 4, 7, 9}.


Processing (3, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (3, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 5), Now the domain is {3, 5, 6, 7, 9}.


Processing (3, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Processing (3, 5) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (3, 2), Now the domain is {1, 3, 7, 9}.


Processing (3, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (3, 5) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 5) <---- (5, 5) ,Domain of node (5, 5) is {8, 5}.


Revised: The value 8 is removed from the domain of node (5, 5), Now the domain is {5}.


Domain of (5, 5) is one value ,we need to add AC constraint.


Add to the Queue (3, 4),(5, 5) for AC- check


Add to the Queue (4, 3),(5, 5) for AC- check


Add to the Queue (5, 4),(5, 5) for AC- check


Add to the Queue (5, 1),(5, 5) for AC- check


Add to the Queue (5, 7),(5, 5) for AC- check


Add to the Queue (0, 5),(5, 5) for AC- check


Add to the Queue (2, 5),(5, 5) for AC- check


Add to the Queue (6, 5),(5, 5) for AC- check


Add to the Queue (4, 5),(5, 5) for AC- check


Add to the Queue (3, 3),(5, 5) for AC- check


Add to the Queue (5, 0),(5, 5) for AC- check


Add to the Queue (5, 6),(5, 5) for AC- check


Add to the Queue (5, 3),(5, 5) for AC- check


Add to the Queue (8, 5),(5, 5) for AC- check


Add to the Queue (1, 5),(5, 5) for AC- check


Add to the Queue (5, 2),(5, 5) for AC- check


Add to the Queue (4, 4),(5, 5) for AC- check


Add to the Queue (5, 8),(5, 5) for AC- check


Add to the Queue (7, 5),(5, 5) for AC- check


Processing (3, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7, 9}.


Processing (5, 5) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (5, 5) <---- (4, 3) ,Domain of node (4, 3) is {3, 5}.


Revised: The value 5 is removed from the domain of node (4, 3), Now the domain is {3}.


Domain of (4, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 3) for AC- check


Add to the Queue (3, 4),(4, 3) for AC- check


Add to the Queue (5, 4),(4, 3) for AC- check


Add to the Queue (4, 6),(4, 3) for AC- check


Add to the Queue (8, 3),(4, 3) for AC- check


Add to the Queue (1, 3),(4, 3) for AC- check


Add to the Queue (4, 2),(4, 3) for AC- check


Add to the Queue (4, 5),(4, 3) for AC- check


Add to the Queue (3, 3),(4, 3) for AC- check


Add to the Queue (4, 8),(4, 3) for AC- check


Add to the Queue (5, 3),(4, 3) for AC- check


Add to the Queue (7, 3),(4, 3) for AC- check


Add to the Queue (4, 1),(4, 3) for AC- check


Add to the Queue (4, 7),(4, 3) for AC- check


Add to the Queue (3, 5),(4, 3) for AC- check


Add to the Queue (4, 4),(4, 3) for AC- check


Add to the Queue (0, 3),(4, 3) for AC- check


Add to the Queue (2, 3),(4, 3) for AC- check


Add to the Queue (6, 3),(4, 3) for AC- check


Processing (5, 5) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 5) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 8, 9}.


Processing (5, 5) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 2, 6}.


Processing (5, 5) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 6, 7, 9}.


Processing (5, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 6, 7, 9}.


Processing (5, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 5), Now the domain is {3, 6, 7, 9}.


Processing (5, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (5, 5) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (5, 5) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 8, 9}.


Processing (5, 5) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 5) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (8, 5), Now the domain is {3, 6, 7, 9}.


Processing (5, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Processing (5, 5) <---- (5, 2) ,Domain of node (5, 2) is {2, 5, 6, 8, 9}.


Revised: The value 5 is removed from the domain of node (5, 2), Now the domain is {2, 6, 8, 9}.


Processing (5, 5) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (5, 5) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 8, 9}.


Processing (5, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7, 9}.


Processing (4, 3) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 0), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (4, 3) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (4, 3) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (8, 3) ,Domain of node (8, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 3), Now the domain is {5, 6, 7, 8, 9}.


Processing (4, 3) <---- (1, 3) ,Domain of node (1, 3) is {9, 6, 7}.


Processing (4, 3) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 3, 5, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 2), Now the domain is {1, 2, 5, 6, 7, 8}.


Processing (4, 3) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (4, 3) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (4, 3) <---- (7, 3) ,Domain of node (7, 3) is {3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (7, 3), Now the domain is {6, 7, 8, 9}.


Processing (4, 3) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (4, 1), Now the domain is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Processing (4, 3) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (4, 3) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 4, 6, 7}.


Processing (4, 3) <---- (2, 3) ,Domain of node (2, 3) is {9, 6, 7}.


Processing (4, 3) <---- (6, 3) ,Domain of node (6, 3) is {3, 5, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (6, 3), Now the domain is {5, 6, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (3,5).


After make inferences we see that the domain of cell (4, 3) is {3}


After make inferences we see that the domain of cell (5, 5) is {5}


Adding to board in cell :(4, 3),value :3


Adding to board in cell :(5, 5),value :5


Go deep in the search tree parent cell (3,5) with value 8 ,current depth:8


MRV cell is (1, 3)


Attempting to fill cell (1, 3) with domain values: [6, 7, 9]


Trying value 6 for cell (1, 3), current depth :9


Applying uniaray constraint.


Orginal domain of cell (1, 3) before reduction {9, 6, 7}.


The domain of cell (1, 3) is reduced to 6.


Applying Binary constraint.


Processing (1, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (1, 3) <---- (8, 3) ,Domain of node (8, 3) is {5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 3), Now the domain is {5, 7, 8, 9}.


Processing (1, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (0, 5), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 3) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 6), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (2, 5), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (1, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (1, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 3) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 2), Now the domain is {1, 2, 3, 7, 9}.


Processing (1, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 5), Now the domain is {1, 2, 7, 9}.


Processing (1, 3) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 8), Now the domain is {1, 2, 3, 7, 9}.


Processing (1, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (7, 3), Now the domain is {8, 9, 7}.


Processing (1, 3) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (1, 1), Now the domain is {1, 2, 3, 7, 9}.


Processing (1, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 4, 6, 7}.


Revised: The value 6 is removed from the domain of node (0, 3), Now the domain is {9, 4, 7}.


Processing (1, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 3) <---- (2, 3) ,Domain of node (2, 3) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (2, 3), Now the domain is {9, 7}.


Processing (1, 3) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 3) <---- (6, 3) ,Domain of node (6, 3) is {5, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (6, 3), Now the domain is {5, 7, 8, 9}.


End of Binary Constraints, Checks done for cell: (1,3).


Go deep in the search tree parent cell (1,3) with value 6 ,current depth:9


MRV cell is (2, 3)


Attempting to fill cell (2, 3) with domain values: [7, 9]


Trying value 7 for cell (2, 3), current depth :10


Applying uniaray constraint.


Orginal domain of cell (2, 3) before reduction {9, 7}.


The domain of cell (2, 3) is reduced to 7.


Applying Binary constraint.


Processing (2, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (2, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5, 7}.


Revised: The value 7 is removed from the domain of node (8, 3), Now the domain is {8, 9, 5}.


Processing (2, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 9, 7}.


Revised: The value 7 is removed from the domain of node (0, 5), Now the domain is {1, 2, 9}.


Processing (2, 3) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9, 7}.


Revised: The value 7 is removed from the domain of node (2, 5), Now the domain is {1, 2, 9}.


Processing (2, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (2, 3) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 8), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (2, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (2, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 3) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 3) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 5), Now the domain is {1, 2, 9}.


Processing (2, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9, 7}.


Revised: The value 7 is removed from the domain of node (7, 3), Now the domain is {8, 9}.


Processing (2, 3) <---- (0, 3) ,Domain of node (0, 3) is {9, 4, 7}.


Revised: The value 7 is removed from the domain of node (0, 3), Now the domain is {9, 4}.


Processing (2, 3) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 8, 9}.


Processing (2, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 3) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 8, 9}.


Processing (2, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5, 7}.


Revised: The value 7 is removed from the domain of node (6, 3), Now the domain is {8, 9, 5}.


End of Binary Constraints, Checks done for cell: (2,3).


Go deep in the search tree parent cell (2,3) with value 7 ,current depth:10


MRV cell is (0, 3)


Attempting to fill cell (0, 3) with domain values: [9, 4]


Trying value 9 for cell (0, 3), current depth :11


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {9, 4}.


The domain of cell (0, 3) is reduced to 9.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {8, 5}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 9}.


Revised: The value 9 is removed from the domain of node (0, 5), Now the domain is {1, 2}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 8), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9}.


Revised: The value 9 is removed from the domain of node (2, 5), Now the domain is {1, 2}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 7), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9}.


Revised: The value 9 is removed from the domain of node (1, 5), Now the domain is {1, 2}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9}.


Revised: The value 9 is removed from the domain of node (7, 3), Now the domain is {8}.


Domain of (7, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(7, 3) for AC- check


Add to the Queue (8, 3),(7, 3) for AC- check


Add to the Queue (1, 3),(7, 3) for AC- check


Add to the Queue (7, 4),(7, 3) for AC- check


Add to the Queue (7, 1),(7, 3) for AC- check


Add to the Queue (7, 7),(7, 3) for AC- check


Add to the Queue (6, 5),(7, 3) for AC- check


Add to the Queue (3, 3),(7, 3) for AC- check


Add to the Queue (5, 3),(7, 3) for AC- check


Add to the Queue (8, 5),(7, 3) for AC- check


Add to the Queue (7, 0),(7, 3) for AC- check


Add to the Queue (6, 4),(7, 3) for AC- check


Add to the Queue (7, 6),(7, 3) for AC- check


Add to the Queue (8, 4),(7, 3) for AC- check


Add to the Queue (2, 3),(7, 3) for AC- check


Add to the Queue (7, 2),(7, 3) for AC- check


Add to the Queue (7, 5),(7, 3) for AC- check


Add to the Queue (6, 3),(7, 3) for AC- check


Add to the Queue (7, 8),(7, 3) for AC- check


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {1, 2, 6, 7, 8}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {8, 5}.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {5}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Add to the Queue (6, 3),(8, 3) for AC- check


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 7, 9}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {9, 3, 6, 7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {9, 3, 6, 7}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 9}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 2), Now the domain is {2, 3, 6, 7, 9}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {9, 3, 6, 7}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 5}.


Revised: The value 8 is removed from the domain of node (6, 3), Now the domain is {5}.


Domain of (6, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(6, 3) for AC- check


Add to the Queue (8, 3),(6, 3) for AC- check


Add to the Queue (1, 3),(6, 3) for AC- check


Add to the Queue (7, 4),(6, 3) for AC- check


Add to the Queue (6, 2),(6, 3) for AC- check


Add to the Queue (6, 5),(6, 3) for AC- check


Add to the Queue (6, 8),(6, 3) for AC- check


Add to the Queue (3, 3),(6, 3) for AC- check


Add to the Queue (5, 3),(6, 3) for AC- check


Add to the Queue (8, 5),(6, 3) for AC- check


Add to the Queue (6, 1),(6, 3) for AC- check


Add to the Queue (6, 4),(6, 3) for AC- check


Add to the Queue (6, 7),(6, 3) for AC- check


Add to the Queue (8, 4),(6, 3) for AC- check


Add to the Queue (0, 3),(6, 3) for AC- check


Add to the Queue (2, 3),(6, 3) for AC- check


Add to the Queue (6, 0),(6, 3) for AC- check


Add to the Queue (6, 6),(6, 3) for AC- check


Add to the Queue (7, 5),(6, 3) for AC- check


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 6, 7, 9}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {9, 3, 6, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {9, 3, 6, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {9}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {9, 3, 6, 7}.


Processing (8, 3) <---- (6, 3) ,Domain of node (6, 3) is {5}.


Revised: The value 5 is removed from the domain of node (6, 3), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (0,3).


Undo operation ,current depth : 11.


Remove the assigment from the board ,(0,3)=0.


No inferences made from cell (0,3) to remove it.


Trying value 4 for cell (0, 3), current depth :11


Applying uniaray constraint.


Orginal domain of cell (0, 3) before reduction {9, 4}.


The domain of cell (0, 3) is reduced to 4.


Applying Binary constraint.


Processing (0, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (0, 3) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5}.


Processing (0, 3) <---- (0, 5) ,Domain of node (0, 5) is {1, 2, 9}.


Processing (0, 3) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9}.


Processing (0, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (0, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (0, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (0, 3) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 3) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 3) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9}.


Processing (0, 3) <---- (7, 3) ,Domain of node (7, 3) is {8, 9}.


Processing (0, 3) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (0, 3) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 3) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Processing (0, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (0, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5}.


End of Binary Constraints, Checks done for cell: (0,3).


Go deep in the search tree parent cell (0,3) with value 4 ,current depth:11


MRV cell is (7, 3)


Attempting to fill cell (7, 3) with domain values: [9, 8]


Trying value 9 for cell (7, 3), current depth :12


Applying uniaray constraint.


Orginal domain of cell (7, 3) before reduction {8, 9}.


The domain of cell (7, 3) is reduced to 9.


Applying Binary constraint.


Processing (7, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (7, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (8, 3), Now the domain is {8, 5}.


Processing (7, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (7, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 3) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 3) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 7), Now the domain is {2, 3, 6, 7, 8}.


Processing (7, 3) <---- (6, 5) ,Domain of node (6, 5) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (6, 5), Now the domain is {3, 6, 7}.


Processing (7, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (7, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (7, 3) <---- (8, 5) ,Domain of node (8, 5) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (8, 5), Now the domain is {3, 6, 7}.


Processing (7, 3) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 6, 7, 8}.


Processing (7, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 3) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 7, 8}.


Processing (7, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (7, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (7, 3) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 2), Now the domain is {2, 3, 6, 7, 8}.


Processing (7, 3) <---- (7, 5) ,Domain of node (7, 5) is {9, 3, 6, 7}.


Revised: The value 9 is removed from the domain of node (7, 5), Now the domain is {3, 6, 7}.


Processing (7, 3) <---- (6, 3) ,Domain of node (6, 3) is {8, 9, 5}.


Revised: The value 9 is removed from the domain of node (6, 3), Now the domain is {8, 5}.


Processing (7, 3) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (7, 8), Now the domain is {2, 3, 4, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (7,3).


Go deep in the search tree parent cell (7,3) with value 9 ,current depth:12


MRV cell is (6, 3)


Attempting to fill cell (6, 3) with domain values: [8, 5]


Trying value 8 for cell (6, 3), current depth :13


Applying uniaray constraint.


Orginal domain of cell (6, 3) before reduction {8, 5}.


The domain of cell (6, 3) is reduced to 8.


Applying Binary constraint.


Processing (6, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (6, 3) <---- (8, 3) ,Domain of node (8, 3) is {8, 5}.


Revised: The value 8 is removed from the domain of node (8, 3), Now the domain is {5}.


Domain of (8, 3) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(8, 3) for AC- check


Add to the Queue (8, 0),(8, 3) for AC- check


Add to the Queue (8, 6),(8, 3) for AC- check


Add to the Queue (1, 3),(8, 3) for AC- check


Add to the Queue (7, 4),(8, 3) for AC- check


Add to the Queue (6, 5),(8, 3) for AC- check


Add to the Queue (3, 3),(8, 3) for AC- check


Add to the Queue (5, 3),(8, 3) for AC- check


Add to the Queue (8, 2),(8, 3) for AC- check


Add to the Queue (8, 5),(8, 3) for AC- check


Add to the Queue (8, 8),(8, 3) for AC- check


Add to the Queue (6, 4),(8, 3) for AC- check


Add to the Queue (7, 3),(8, 3) for AC- check


Add to the Queue (8, 4),(8, 3) for AC- check


Add to the Queue (8, 1),(8, 3) for AC- check


Add to the Queue (8, 7),(8, 3) for AC- check


Add to the Queue (0, 3),(8, 3) for AC- check


Add to the Queue (2, 3),(8, 3) for AC- check


Add to the Queue (7, 5),(8, 3) for AC- check


Processing (6, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (6, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 3) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7, 9}.


Processing (6, 3) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (6, 3) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 8), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (6, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (6, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (6, 3) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (6, 3) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 1), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (6, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 3) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (6, 3) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 7), Now the domain is {1, 3, 5, 6, 7, 9}.


Processing (6, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (6, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (6, 3) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 6, 7, 9}.


Processing (6, 3) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 7, 9}.


Processing (6, 3) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Processing (8, 3) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (8, 3) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (8, 3) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (8, 3) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 3) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (8, 3) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (8, 3) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (8, 3) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (8, 3) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 3) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (8, 3) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 3) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 5, 6, 7, 8, 9}.


Revised: The value 5 is removed from the domain of node (8, 7), Now the domain is {1, 2, 3, 6, 7, 8, 9}.


Processing (8, 3) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (8, 3) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (8, 3) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


End of Binary Constraints, Checks done for cell: (6,3).


After make inferences we see that the domain of cell (8, 3) is {5}


Adding to board in cell :(8, 3),value :5


Go deep in the search tree parent cell (6,3) with value 8 ,current depth:13


MRV cell is (0, 5)


Attempting to fill cell (0, 5) with domain values: [1, 2, 9]


Trying value 1 for cell (0, 5), current depth :14


Applying uniaray constraint.


Orginal domain of cell (0, 5) before reduction {1, 2, 9}.


The domain of cell (0, 5) is reduced to 1.


Applying Binary constraint.


Processing (0, 5) <---- (0, 2) ,Domain of node (0, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 8) ,Domain of node (0, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 8), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 5) ,Domain of node (2, 5) is {1, 2, 9}.


Revised: The value 1 is removed from the domain of node (2, 5), Now the domain is {2, 9}.


Processing (0, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (0, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (0, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (0, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (0, 5) <---- (0, 1) ,Domain of node (0, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 7) ,Domain of node (0, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 7), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (0, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 5) <---- (1, 5) ,Domain of node (1, 5) is {1, 2, 9}.


Revised: The value 1 is removed from the domain of node (1, 5), Now the domain is {2, 9}.


Processing (0, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (0, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (0, 5) <---- (0, 0) ,Domain of node (0, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (0, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (0, 5) <---- (0, 6) ,Domain of node (0, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (0, 6), Now the domain is {2, 6, 7, 8, 9}.


Processing (0, 5) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (0, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,5).


Go deep in the search tree parent cell (0,5) with value 1 ,current depth:14


MRV cell is (1, 5)


Attempting to fill cell (1, 5) with domain values: [2, 9]


Trying value 2 for cell (1, 5), current depth :15


Applying uniaray constraint.


Orginal domain of cell (1, 5) before reduction {9, 2}.


The domain of cell (1, 5) is reduced to 2.


Applying Binary constraint.


Processing (1, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (1, 5) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 5) <---- (1, 6) ,Domain of node (1, 6) is {1, 2, 9, 7}.


Revised: The value 2 is removed from the domain of node (1, 6), Now the domain is {1, 9, 7}.


Processing (1, 5) <---- (2, 5) ,Domain of node (2, 5) is {9, 2}.


Revised: The value 2 is removed from the domain of node (2, 5), Now the domain is {9}.


Domain of (2, 5) is one value ,we need to add AC constraint.


Add to the Queue (0, 5),(2, 5) for AC- check


Add to the Queue (2, 2),(2, 5) for AC- check


Add to the Queue (1, 3),(2, 5) for AC- check


Add to the Queue (2, 8),(2, 5) for AC- check


Add to the Queue (6, 5),(2, 5) for AC- check


Add to the Queue (4, 5),(2, 5) for AC- check


Add to the Queue (8, 5),(2, 5) for AC- check


Add to the Queue (2, 4),(2, 5) for AC- check


Add to the Queue (0, 4),(2, 5) for AC- check


Add to the Queue (2, 1),(2, 5) for AC- check


Add to the Queue (2, 7),(2, 5) for AC- check


Add to the Queue (3, 5),(2, 5) for AC- check


Add to the Queue (5, 5),(2, 5) for AC- check


Add to the Queue (0, 3),(2, 5) for AC- check


Add to the Queue (2, 0),(2, 5) for AC- check


Add to the Queue (1, 4),(2, 5) for AC- check


Add to the Queue (2, 3),(2, 5) for AC- check


Add to the Queue (2, 6),(2, 5) for AC- check


Add to the Queue (7, 5),(2, 5) for AC- check


Processing (1, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (1, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (1, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (1, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (1, 5) <---- (1, 2) ,Domain of node (1, 2) is {1, 2, 3, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 2), Now the domain is {1, 3, 7, 9}.


Processing (1, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (1, 5) <---- (1, 8) ,Domain of node (1, 8) is {1, 2, 3, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 8), Now the domain is {1, 3, 7, 9}.


Processing (1, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (1, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (1, 5) <---- (1, 1) ,Domain of node (1, 1) is {1, 2, 3, 7, 9}.


Revised: The value 2 is removed from the domain of node (1, 1), Now the domain is {1, 3, 7, 9}.


Processing (1, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (1, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 5) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (1, 5) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Processing (2, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (2, 5) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 5) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (2, 5) <---- (2, 8) ,Domain of node (2, 8) is {1, 2, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 8), Now the domain is {1, 2, 6, 8}.


Processing (2, 5) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (2, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (2, 5) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (2, 5) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 5) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (2, 5) <---- (2, 1) ,Domain of node (2, 1) is {1, 2, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 1), Now the domain is {1, 2, 6, 8}.


Processing (2, 5) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 6, 8}.


Processing (2, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (2, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (2, 5) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (2, 5) <---- (2, 0) ,Domain of node (2, 0) is {1, 2, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 0), Now the domain is {1, 2, 6, 8}.


Processing (2, 5) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (2, 5) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 5) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8, 9}.


Revised: The value 9 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 6, 8}.


Processing (2, 5) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


End of Binary Constraints, Checks done for cell: (1,5).


After make inferences we see that the domain of cell (2, 5) is {9}


Adding to board in cell :(2, 5),value :9


Go deep in the search tree parent cell (1,5) with value 2 ,current depth:15


MRV cell is (1, 6)


Attempting to fill cell (1, 6) with domain values: [7, 1, 9]


Trying value 7 for cell (1, 6), current depth :16


Applying uniaray constraint.


Orginal domain of cell (1, 6) before reduction {1, 9, 7}.


The domain of cell (1, 6) is reduced to 7.


Applying Binary constraint.


Processing (1, 6) <---- (4, 6) ,Domain of node (4, 6) is {1, 2, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 6), Now the domain is {1, 2, 6, 8}.


Processing (1, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 6), Now the domain is {1, 2, 6, 8, 9}.


Processing (1, 6) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 6) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 8), Now the domain is {2, 3, 6, 8, 9}.


Processing (1, 6) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 6) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2, 6}.


Processing (1, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (1, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 9, 7}.


Revised: The value 7 is removed from the domain of node (3, 6), Now the domain is {1, 4, 9}.


Processing (1, 6) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 7), Now the domain is {2, 3, 6, 8, 9}.


Processing (1, 6) <---- (1, 2) ,Domain of node (1, 2) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 2), Now the domain is {1, 3, 9}.


Processing (1, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8}.


Processing (1, 6) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 6) <---- (1, 8) ,Domain of node (1, 8) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 8), Now the domain is {1, 3, 9}.


Processing (1, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (7, 6), Now the domain is {2, 4, 6, 8}.


Processing (1, 6) <---- (1, 1) ,Domain of node (1, 1) is {1, 3, 9, 7}.


Revised: The value 7 is removed from the domain of node (1, 1), Now the domain is {1, 3, 9}.


Processing (1, 6) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 6) <---- (0, 6) ,Domain of node (0, 6) is {2, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (0, 6), Now the domain is {2, 6, 8, 9}.


Processing (1, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 6) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8}.


Processing (1, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 6), Now the domain is {1, 4, 5, 6, 9}.


End of Binary Constraints, Checks done for cell: (1,6).


Go deep in the search tree parent cell (1,6) with value 7 ,current depth:16


MRV cell is (1, 1)


Attempting to fill cell (1, 1) with domain values: [1, 9, 3]


Trying value 1 for cell (1, 1), current depth :17


Applying uniaray constraint.


Orginal domain of cell (1, 1) before reduction {1, 3, 9}.


The domain of cell (1, 1) is reduced to 1.


Applying Binary constraint.


Processing (1, 1) <---- (3, 1) ,Domain of node (3, 1) is {1, 3, 4, 7, 9}.


Revised: The value 1 is removed from the domain of node (3, 1), Now the domain is {3, 4, 7, 9}.


Processing (1, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 8, 9}.


Processing (1, 1) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 1) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (1, 1) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (1, 1) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (1, 2) ,Domain of node (1, 2) is {1, 3, 9}.


Revised: The value 1 is removed from the domain of node (1, 2), Now the domain is {3, 9}.


Processing (1, 1) <---- (2, 1) ,Domain of node (2, 1) is {8, 1, 2, 6}.


Revised: The value 1 is removed from the domain of node (2, 1), Now the domain is {8, 2, 6}.


Processing (1, 1) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 1) <---- (6, 1) ,Domain of node (6, 1) is {1, 3, 4, 6, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 1), Now the domain is {3, 4, 6, 7, 9}.


Processing (1, 1) <---- (1, 8) ,Domain of node (1, 8) is {1, 3, 9}.


Revised: The value 1 is removed from the domain of node (1, 8), Now the domain is {3, 9}.


Processing (1, 1) <---- (4, 1) ,Domain of node (4, 1) is {1, 2, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 1), Now the domain is {2, 6, 7, 8}.


Processing (1, 1) <---- (8, 1) ,Domain of node (8, 1) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 1), Now the domain is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8, 9}.


Processing (1, 1) <---- (2, 0) ,Domain of node (2, 0) is {8, 1, 2, 6}.


Revised: The value 1 is removed from the domain of node (2, 0), Now the domain is {8, 2, 6}.


Processing (1, 1) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 1) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (1,1).


Go deep in the search tree parent cell (1,1) with value 1 ,current depth:17


MRV cell is (1, 2)


Attempting to fill cell (1, 2) with domain values: [9, 3]


Trying value 9 for cell (1, 2), current depth :18


Applying uniaray constraint.


Orginal domain of cell (1, 2) before reduction {9, 3}.


The domain of cell (1, 2) is reduced to 9.


Applying Binary constraint.


Processing (1, 2) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 2), Now the domain is {2, 3, 6, 7, 8}.


Processing (1, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (1, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 2) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (1, 2) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 2), Now the domain is {1, 3, 6, 7}.


Processing (1, 2) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Processing (1, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (8, 2), Now the domain is {1, 2, 3, 6, 7, 8}.


Processing (1, 2) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 1), Now the domain is {2, 3, 6, 7, 8}.


Processing (1, 2) <---- (2, 1) ,Domain of node (2, 1) is {8, 2, 6}.


Processing (1, 2) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 2) <---- (1, 8) ,Domain of node (1, 8) is {9, 3}.


Revised: The value 9 is removed from the domain of node (1, 8), Now the domain is {3}.


Domain of (1, 8) is one value ,we need to add AC constraint.


Add to the Queue (1, 0),(1, 8) for AC- check


Add to the Queue (1, 6),(1, 8) for AC- check


Add to the Queue (0, 8),(1, 8) for AC- check


Add to the Queue (1, 3),(1, 8) for AC- check


Add to the Queue (2, 8),(1, 8) for AC- check


Add to the Queue (6, 8),(1, 8) for AC- check


Add to the Queue (4, 8),(1, 8) for AC- check


Add to the Queue (8, 8),(1, 8) for AC- check


Add to the Queue (0, 7),(1, 8) for AC- check


Add to the Queue (2, 7),(1, 8) for AC- check


Add to the Queue (1, 5),(1, 8) for AC- check


Add to the Queue (3, 8),(1, 8) for AC- check


Add to the Queue (5, 8),(1, 8) for AC- check


Add to the Queue (1, 1),(1, 8) for AC- check


Add to the Queue (1, 4),(1, 8) for AC- check


Add to the Queue (0, 6),(1, 8) for AC- check


Add to the Queue (1, 7),(1, 8) for AC- check


Add to the Queue (2, 6),(1, 8) for AC- check


Add to the Queue (7, 8),(1, 8) for AC- check


Processing (1, 2) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 9, 7}.


Revised: The value 9 is removed from the domain of node (3, 2), Now the domain is {1, 3, 7}.


Processing (1, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 9, 2, 6}.


Revised: The value 9 is removed from the domain of node (5, 2), Now the domain is {8, 2, 6}.


Processing (1, 2) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8, 9}.


Revised: The value 9 is removed from the domain of node (0, 0), Now the domain is {2, 3, 6, 7, 8}.


Processing (1, 2) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (1, 2) <---- (2, 0) ,Domain of node (2, 0) is {8, 2, 6}.


Processing (1, 2) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 2) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8}.


Processing (1, 8) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (1, 8) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (1, 8) <---- (0, 8) ,Domain of node (0, 8) is {2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 8), Now the domain is {2, 6, 8, 9}.


Processing (1, 8) <---- (1, 3) ,Domain of node (1, 3) is {6}.


Processing (1, 8) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2, 6}.


Processing (1, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 3, 4, 6, 7, 9}.


Revised: The value 3 is removed from the domain of node (6, 8), Now the domain is {1, 4, 6, 7, 9}.


Processing (1, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Processing (1, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7, 8, 9}.


Processing (1, 8) <---- (0, 7) ,Domain of node (0, 7) is {2, 3, 6, 8, 9}.


Revised: The value 3 is removed from the domain of node (0, 7), Now the domain is {2, 6, 8, 9}.


Processing (1, 8) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8}.


Processing (1, 8) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (1, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (1, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 8, 9}.


Processing (1, 8) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (1, 8) <---- (1, 4) ,Domain of node (1, 4) is {8}.


Processing (1, 8) <---- (0, 6) ,Domain of node (0, 6) is {8, 9, 2, 6}.


Processing (1, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (1, 8) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8}.


Processing (1, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 3, 4, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 8), Now the domain is {2, 4, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (1,2).


After make inferences we see that the domain of cell (1, 8) is {3}


Adding to board in cell :(1, 8),value :3


Go deep in the search tree parent cell (1,2) with value 9 ,current depth:18


MRV cell is (2, 0)


Attempting to fill cell (2, 0) with domain values: [6, 2, 8]


Trying value 6 for cell (2, 0), current depth :19


Applying uniaray constraint.


Orginal domain of cell (2, 0) before reduction {8, 2, 6}.


The domain of cell (2, 0) is reduced to 6.


Applying Binary constraint.


Processing (2, 0) <---- (4, 0) ,Domain of node (4, 0) is {1, 2, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (4, 0), Now the domain is {1, 2, 7, 8}.


Processing (2, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 0), Now the domain is {1, 2, 3, 7, 8, 9}.


Processing (2, 0) <---- (0, 2) ,Domain of node (0, 2) is {2, 3, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (0, 2), Now the domain is {2, 3, 7, 8}.


Processing (2, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 0) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 0) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2, 6}.


Revised: The value 6 is removed from the domain of node (2, 8), Now the domain is {8, 1, 2}.


Processing (2, 0) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7, 9}.


Processing (2, 0) <---- (5, 0) ,Domain of node (5, 0) is {2, 4, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (5, 0), Now the domain is {2, 4, 8, 9}.


Processing (2, 0) <---- (0, 1) ,Domain of node (0, 1) is {2, 3, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (0, 1), Now the domain is {2, 3, 7, 8}.


Processing (2, 0) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 0) <---- (2, 1) ,Domain of node (2, 1) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (2, 1), Now the domain is {8, 2}.


Processing (2, 0) <---- (2, 7) ,Domain of node (2, 7) is {1, 2, 5, 6, 8}.


Revised: The value 6 is removed from the domain of node (2, 7), Now the domain is {1, 2, 5, 8}.


Processing (2, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 7, 8}.


Processing (2, 0) <---- (0, 0) ,Domain of node (0, 0) is {2, 3, 6, 7, 8}.


Revised: The value 6 is removed from the domain of node (0, 0), Now the domain is {2, 3, 7, 8}.


Processing (2, 0) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (2, 0) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 0) <---- (2, 6) ,Domain of node (2, 6) is {1, 2, 5, 6, 8}.


Revised: The value 6 is removed from the domain of node (2, 6), Now the domain is {1, 2, 5, 8}.


Processing (2, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 6, 7, 9}.


Revised: The value 6 is removed from the domain of node (6, 0), Now the domain is {1, 3, 4, 7, 9}.


End of Binary Constraints, Checks done for cell: (2,0).


Go deep in the search tree parent cell (2,0) with value 6 ,current depth:19


MRV cell is (2, 1)


Attempting to fill cell (2, 1) with domain values: [2, 8]


Trying value 2 for cell (2, 1), current depth :20


Applying uniaray constraint.


Orginal domain of cell (2, 1) before reduction {8, 2}.


The domain of cell (2, 1) is reduced to 2.


Applying Binary constraint.


Processing (2, 1) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4, 7}.


Processing (2, 1) <---- (5, 1) ,Domain of node (5, 1) is {2, 4, 6, 8, 9}.


Revised: The value 2 is removed from the domain of node (5, 1), Now the domain is {4, 6, 8, 9}.


Processing (2, 1) <---- (0, 2) ,Domain of node (0, 2) is {8, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (0, 2), Now the domain is {8, 3, 7}.


Processing (2, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (2, 1) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 1) <---- (2, 8) ,Domain of node (2, 8) is {8, 1, 2}.


Revised: The value 2 is removed from the domain of node (2, 8), Now the domain is {8, 1}.


Processing (2, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (2, 1) <---- (0, 1) ,Domain of node (0, 1) is {8, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (0, 1), Now the domain is {8, 3, 7}.


Processing (2, 1) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (2, 1) <---- (2, 7) ,Domain of node (2, 7) is {8, 1, 2, 5}.


Revised: The value 2 is removed from the domain of node (2, 7), Now the domain is {8, 1, 5}.


Processing (2, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 7, 9}.


Processing (2, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (4, 1), Now the domain is {8, 6, 7}.


Processing (2, 1) <---- (8, 1) ,Domain of node (8, 1) is {2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 1), Now the domain is {3, 6, 7, 8, 9}.


Processing (2, 1) <---- (0, 0) ,Domain of node (0, 0) is {8, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (0, 0), Now the domain is {8, 3, 7}.


Processing (2, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (2, 1) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 1) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 1) <---- (2, 6) ,Domain of node (2, 6) is {8, 1, 2, 5}.


Revised: The value 2 is removed from the domain of node (2, 6), Now the domain is {8, 1, 5}.


End of Binary Constraints, Checks done for cell: (2,1).


Go deep in the search tree parent cell (2,1) with value 2 ,current depth:20


MRV cell is (2, 8)


Attempting to fill cell (2, 8) with domain values: [8, 1]


Trying value 8 for cell (2, 8), current depth :21


Applying uniaray constraint.


Orginal domain of cell (2, 8) before reduction {8, 1}.


The domain of cell (2, 8) is reduced to 8.


Applying Binary constraint.


Processing (2, 8) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 8) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (2, 8) <---- (0, 8) ,Domain of node (0, 8) is {8, 9, 2, 6}.


Revised: The value 8 is removed from the domain of node (0, 8), Now the domain is {9, 2, 6}.


Processing (2, 8) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7, 9}.


Processing (2, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6, 7}.


Processing (2, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7, 9}.


Processing (2, 8) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 8) <---- (0, 7) ,Domain of node (0, 7) is {8, 9, 2, 6}.


Revised: The value 8 is removed from the domain of node (0, 7), Now the domain is {9, 2, 6}.


Processing (2, 8) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (2, 8) <---- (2, 7) ,Domain of node (2, 7) is {8, 1, 5}.


Revised: The value 8 is removed from the domain of node (2, 7), Now the domain is {1, 5}.


Processing (2, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (2, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6, 9}.


Processing (2, 8) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 8) <---- (0, 6) ,Domain of node (0, 6) is {8, 9, 2, 6}.


Revised: The value 8 is removed from the domain of node (0, 6), Now the domain is {9, 2, 6}.


Processing (2, 8) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 8) <---- (2, 6) ,Domain of node (2, 6) is {8, 1, 5}.


Revised: The value 8 is removed from the domain of node (2, 6), Now the domain is {1, 5}.


Processing (2, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7, 8}.


Revised: The value 8 is removed from the domain of node (7, 8), Now the domain is {2, 4, 6, 7}.


End of Binary Constraints, Checks done for cell: (2,8).


Go deep in the search tree parent cell (2,8) with value 8 ,current depth:21


MRV cell is (2, 6)


Attempting to fill cell (2, 6) with domain values: [1, 5]


Trying value 1 for cell (2, 6), current depth :22


Applying uniaray constraint.


Orginal domain of cell (2, 6) before reduction {1, 5}.


The domain of cell (2, 6) is reduced to 1.


Applying Binary constraint.


Processing (2, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 1, 2, 6}.


Revised: The value 1 is removed from the domain of node (4, 6), Now the domain is {8, 2, 6}.


Processing (2, 6) <---- (8, 6) ,Domain of node (8, 6) is {1, 2, 6, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 6), Now the domain is {2, 6, 8, 9}.


Processing (2, 6) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (2, 6) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Processing (2, 6) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 6) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (2, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (2, 6) <---- (3, 6) ,Domain of node (3, 6) is {1, 4, 9}.


Revised: The value 1 is removed from the domain of node (3, 6), Now the domain is {4, 9}.


Processing (2, 6) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Processing (2, 6) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 6) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (2, 6) <---- (2, 7) ,Domain of node (2, 7) is {1, 5}.


Revised: The value 1 is removed from the domain of node (2, 7), Now the domain is {5}.


Domain of (2, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(2, 7) for AC- check


Add to the Queue (5, 7),(2, 7) for AC- check


Add to the Queue (2, 2),(2, 7) for AC- check


Add to the Queue (1, 6),(2, 7) for AC- check


Add to the Queue (0, 8),(2, 7) for AC- check


Add to the Queue (2, 5),(2, 7) for AC- check


Add to the Queue (2, 8),(2, 7) for AC- check


Add to the Queue (7, 7),(2, 7) for AC- check


Add to the Queue (0, 7),(2, 7) for AC- check


Add to the Queue (2, 4),(2, 7) for AC- check


Add to the Queue (2, 1),(2, 7) for AC- check


Add to the Queue (1, 8),(2, 7) for AC- check


Add to the Queue (6, 7),(2, 7) for AC- check


Add to the Queue (4, 7),(2, 7) for AC- check


Add to the Queue (8, 7),(2, 7) for AC- check


Add to the Queue (2, 0),(2, 7) for AC- check


Add to the Queue (0, 6),(2, 7) for AC- check


Add to the Queue (2, 3),(2, 7) for AC- check


Add to the Queue (1, 7),(2, 7) for AC- check


Processing (2, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4, 6}.


Processing (2, 6) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 6) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


Processing (2, 6) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (2, 6) <---- (6, 6) ,Domain of node (6, 6) is {1, 4, 5, 6, 9}.


Revised: The value 1 is removed from the domain of node (6, 6), Now the domain is {4, 5, 6, 9}.


Processing (2, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 9, 7}.


Processing (2, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 2, 6}.


Processing (2, 7) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (2, 7) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (2, 7) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Processing (2, 7) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (2, 7) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (2, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8}.


Processing (2, 7) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Processing (2, 7) <---- (2, 4) ,Domain of node (2, 4) is {3}.


Processing (2, 7) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (2, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (2, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 5, 6, 7, 9}.


Revised: The value 5 is removed from the domain of node (6, 7), Now the domain is {1, 3, 6, 7, 9}.


Processing (2, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Processing (2, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 6, 7, 8, 9}.


Processing (2, 7) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (2, 7) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


Processing (2, 7) <---- (2, 3) ,Domain of node (2, 3) is {7}.


Processing (2, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (2,6).


After make inferences we see that the domain of cell (2, 7) is {5}


Adding to board in cell :(2, 7),value :5


Go deep in the search tree parent cell (2,6) with value 1 ,current depth:22


MRV cell is (3, 6)


Attempting to fill cell (3, 6) with domain values: [9, 4]


Trying value 9 for cell (3, 6), current depth :23


Applying uniaray constraint.


Orginal domain of cell (3, 6) before reduction {9, 4}.


The domain of cell (3, 6) is reduced to 9.


Applying Binary constraint.


Processing (3, 6) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 6) <---- (3, 1) ,Domain of node (3, 1) is {9, 3, 4, 7}.


Revised: The value 9 is removed from the domain of node (3, 1), Now the domain is {3, 4, 7}.


Processing (3, 6) <---- (3, 7) ,Domain of node (3, 7) is {1, 9, 7}.


Revised: The value 9 is removed from the domain of node (3, 7), Now the domain is {1, 7}.


Processing (3, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 2, 6}.


Processing (3, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 9, 2, 6}.


Revised: The value 9 is removed from the domain of node (5, 7), Now the domain is {8, 2, 6}.


Processing (3, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 9, 2, 6}.


Revised: The value 9 is removed from the domain of node (8, 6), Now the domain is {8, 2, 6}.


Processing (3, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (3, 6) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7, 9}.


Revised: The value 9 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4, 7}.


Processing (3, 6) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Processing (3, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4, 6}.


Processing (3, 6) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 7}.


Processing (3, 6) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Processing (3, 6) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 6) <---- (5, 8) ,Domain of node (5, 8) is {9, 2, 4, 6}.


Revised: The value 9 is removed from the domain of node (5, 8), Now the domain is {2, 4, 6}.


Processing (3, 6) <---- (0, 6) ,Domain of node (0, 6) is {9, 2, 6}.


Revised: The value 9 is removed from the domain of node (0, 6), Now the domain is {2, 6}.


Processing (3, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (3, 6) <---- (6, 6) ,Domain of node (6, 6) is {9, 4, 5, 6}.


Revised: The value 9 is removed from the domain of node (6, 6), Now the domain is {4, 5, 6}.


End of Binary Constraints, Checks done for cell: (3,6).


Go deep in the search tree parent cell (3,6) with value 9 ,current depth:23


MRV cell is (0, 6)


Attempting to fill cell (0, 6) with domain values: [6, 2]


Trying value 6 for cell (0, 6), current depth :24


Applying uniaray constraint.


Orginal domain of cell (0, 6) before reduction {2, 6}.


The domain of cell (0, 6) is reduced to 6.


Applying Binary constraint.


Processing (0, 6) <---- (4, 6) ,Domain of node (4, 6) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (4, 6), Now the domain is {8, 2}.


Processing (0, 6) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Processing (0, 6) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (8, 6), Now the domain is {8, 2}.


Processing (0, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (0, 6) <---- (0, 8) ,Domain of node (0, 8) is {9, 2, 6}.


Revised: The value 6 is removed from the domain of node (0, 8), Now the domain is {9, 2}.


Processing (0, 6) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (0, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (0, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (0, 6) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (0, 6) <---- (0, 7) ,Domain of node (0, 7) is {9, 2, 6}.


Revised: The value 6 is removed from the domain of node (0, 7), Now the domain is {9, 2}.


Processing (0, 6) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 6) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (0, 6) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4, 6}.


Revised: The value 6 is removed from the domain of node (7, 6), Now the domain is {8, 2, 4}.


Processing (0, 6) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (0, 6) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 6) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (0, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5, 6}.


Revised: The value 6 is removed from the domain of node (6, 6), Now the domain is {4, 5}.


End of Binary Constraints, Checks done for cell: (0,6).


Go deep in the search tree parent cell (0,6) with value 6 ,current depth:24


MRV cell is (0, 7)


Attempting to fill cell (0, 7) with domain values: [2, 9]


Trying value 2 for cell (0, 7), current depth :25


Applying uniaray constraint.


Orginal domain of cell (0, 7) before reduction {9, 2}.


The domain of cell (0, 7) is reduced to 2.


Applying Binary constraint.


Processing (0, 7) <---- (3, 7) ,Domain of node (3, 7) is {1, 7}.


Processing (0, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (5, 7), Now the domain is {8, 6}.


Processing (0, 7) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Processing (0, 7) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 7) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (0, 7) <---- (0, 8) ,Domain of node (0, 8) is {9, 2}.


Revised: The value 2 is removed from the domain of node (0, 8), Now the domain is {9}.


Domain of (0, 8) is one value ,we need to add AC constraint.


Add to the Queue (0, 2),(0, 8) for AC- check


Add to the Queue (0, 5),(0, 8) for AC- check


Add to the Queue (1, 6),(0, 8) for AC- check


Add to the Queue (2, 8),(0, 8) for AC- check


Add to the Queue (6, 8),(0, 8) for AC- check


Add to the Queue (4, 8),(0, 8) for AC- check


Add to the Queue (0, 1),(0, 8) for AC- check


Add to the Queue (8, 8),(0, 8) for AC- check


Add to the Queue (0, 4),(0, 8) for AC- check


Add to the Queue (2, 7),(0, 8) for AC- check


Add to the Queue (1, 8),(0, 8) for AC- check


Add to the Queue (3, 8),(0, 8) for AC- check


Add to the Queue (0, 0),(0, 8) for AC- check


Add to the Queue (5, 8),(0, 8) for AC- check


Add to the Queue (0, 3),(0, 8) for AC- check


Add to the Queue (0, 6),(0, 8) for AC- check


Add to the Queue (1, 7),(0, 8) for AC- check


Add to the Queue (2, 6),(0, 8) for AC- check


Add to the Queue (7, 8),(0, 8) for AC- check


Processing (0, 7) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (0, 7) <---- (7, 7) ,Domain of node (7, 7) is {2, 3, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (7, 7), Now the domain is {3, 6, 7, 8}.


Processing (0, 7) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (0, 7) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (0, 7) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 7, 9}.


Processing (0, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 2, 6, 7, 8}.


Revised: The value 2 is removed from the domain of node (4, 7), Now the domain is {1, 6, 7, 8}.


Processing (0, 7) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (0, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 2, 3, 6, 7, 8, 9}.


Revised: The value 2 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 7, 8, 9}.


Processing (0, 7) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 7) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 7) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (0, 8) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Processing (0, 8) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 8) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (0, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (0, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (6, 8), Now the domain is {1, 4, 6, 7}.


Processing (0, 8) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Processing (0, 8) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (0, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7, 9}.


Revised: The value 9 is removed from the domain of node (8, 8), Now the domain is {1, 2, 6, 7}.


Processing (0, 8) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 8) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (0, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (0, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (0, 8) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (0, 8) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (0, 8) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 8) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 8) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (0, 8) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (0, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


End of Binary Constraints, Checks done for cell: (0,7).


After make inferences we see that the domain of cell (0, 8) is {9}


Adding to board in cell :(0, 8),value :9


Go deep in the search tree parent cell (0,7) with value 2 ,current depth:25


MRV cell is (3, 7)


Attempting to fill cell (3, 7) with domain values: [7, 1]


Trying value 7 for cell (3, 7), current depth :26


Applying uniaray constraint.


Orginal domain of cell (3, 7) before reduction {1, 7}.


The domain of cell (3, 7) is reduced to 7.


Applying Binary constraint.


Processing (3, 7) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 7) <---- (3, 1) ,Domain of node (3, 1) is {3, 4, 7}.


Revised: The value 7 is removed from the domain of node (3, 1), Now the domain is {3, 4}.


Processing (3, 7) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Processing (3, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Processing (3, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 7), Now the domain is {8, 3, 6}.


Processing (3, 7) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4, 7}.


Revised: The value 7 is removed from the domain of node (3, 0), Now the domain is {1, 3, 4}.


Processing (3, 7) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (3, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 8), Now the domain is {1, 2, 6}.


Processing (3, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (3, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (3, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 7, 9}.


Revised: The value 7 is removed from the domain of node (6, 7), Now the domain is {1, 3, 6, 9}.


Processing (3, 7) <---- (3, 2) ,Domain of node (3, 2) is {1, 3, 7}.


Revised: The value 7 is removed from the domain of node (3, 2), Now the domain is {1, 3}.


Processing (3, 7) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 7), Now the domain is {8, 1, 6}.


Processing (3, 7) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (3, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 7, 8, 9}.


Revised: The value 7 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 8, 9}.


Processing (3, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


End of Binary Constraints, Checks done for cell: (3,7).


Go deep in the search tree parent cell (3,7) with value 7 ,current depth:26


MRV cell is (3, 1)


Attempting to fill cell (3, 1) with domain values: [4, 3]


Trying value 4 for cell (3, 1), current depth :27


Applying uniaray constraint.


Orginal domain of cell (3, 1) before reduction {3, 4}.


The domain of cell (3, 1) is reduced to 4.


Applying Binary constraint.


Processing (3, 1) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 7}.


Processing (3, 1) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 1) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 4, 6}.


Revised: The value 4 is removed from the domain of node (5, 1), Now the domain is {8, 9, 6}.


Processing (3, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (3, 1) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Processing (3, 1) <---- (3, 0) ,Domain of node (3, 0) is {1, 3, 4}.


Revised: The value 4 is removed from the domain of node (3, 0), Now the domain is {1, 3}.


Processing (3, 1) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 1) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2, 4}.


Revised: The value 4 is removed from the domain of node (5, 0), Now the domain is {8, 9, 2}.


Processing (3, 1) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 1) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Processing (3, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (3, 1) <---- (6, 1) ,Domain of node (6, 1) is {3, 4, 6, 7, 9}.


Revised: The value 4 is removed from the domain of node (6, 1), Now the domain is {3, 6, 7, 9}.


Processing (3, 1) <---- (3, 2) ,Domain of node (3, 2) is {1, 3}.


Processing (3, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (3, 1) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (3, 1) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 1) <---- (8, 1) ,Domain of node (8, 1) is {3, 6, 7, 8, 9}.


Processing (3, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


End of Binary Constraints, Checks done for cell: (3,1).


Go deep in the search tree parent cell (3,1) with value 4 ,current depth:27


MRV cell is (3, 0)


Attempting to fill cell (3, 0) with domain values: [1, 3]


Trying value 1 for cell (3, 0), current depth :28


Applying uniaray constraint.


Orginal domain of cell (3, 0) before reduction {1, 3}.


The domain of cell (3, 0) is reduced to 1.


Applying Binary constraint.


Processing (3, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 1, 2, 7}.


Revised: The value 1 is removed from the domain of node (4, 0), Now the domain is {8, 2, 7}.


Processing (3, 0) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 0) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (3, 0) <---- (8, 0) ,Domain of node (8, 0) is {1, 2, 3, 7, 8, 9}.


Revised: The value 1 is removed from the domain of node (8, 0), Now the domain is {2, 3, 7, 8, 9}.


Processing (3, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (3, 0) <---- (4, 2) ,Domain of node (4, 2) is {1, 2, 5, 6, 7, 8}.


Revised: The value 1 is removed from the domain of node (4, 2), Now the domain is {2, 5, 6, 7, 8}.


Processing (3, 0) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 0) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2}.


Processing (3, 0) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7, 8}.


Processing (3, 0) <---- (3, 2) ,Domain of node (3, 2) is {1, 3}.


Revised: The value 1 is removed from the domain of node (3, 2), Now the domain is {3}.


Domain of (3, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(3, 2) for AC- check


Add to the Queue (3, 4),(3, 2) for AC- check


Add to the Queue (3, 1),(3, 2) for AC- check


Add to the Queue (3, 7),(3, 2) for AC- check


Add to the Queue (5, 1),(3, 2) for AC- check


Add to the Queue (0, 2),(3, 2) for AC- check


Add to the Queue (2, 2),(3, 2) for AC- check


Add to the Queue (6, 2),(3, 2) for AC- check


Add to the Queue (4, 2),(3, 2) for AC- check


Add to the Queue (3, 3),(3, 2) for AC- check


Add to the Queue (5, 0),(3, 2) for AC- check


Add to the Queue (3, 6),(3, 2) for AC- check


Add to the Queue (8, 2),(3, 2) for AC- check


Add to the Queue (1, 2),(3, 2) for AC- check


Add to the Queue (4, 1),(3, 2) for AC- check


Add to the Queue (3, 5),(3, 2) for AC- check


Add to the Queue (5, 2),(3, 2) for AC- check


Add to the Queue (3, 8),(3, 2) for AC- check


Add to the Queue (7, 2),(3, 2) for AC- check


Processing (3, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (3, 0) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (3, 0) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 0) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Processing (3, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (3, 0) <---- (6, 0) ,Domain of node (6, 0) is {1, 3, 4, 7, 9}.


Revised: The value 1 is removed from the domain of node (6, 0), Now the domain is {3, 4, 7, 9}.


Processing (3, 2) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 7}.


Processing (3, 2) <---- (3, 4) ,Domain of node (3, 4) is {6}.


Processing (3, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (3, 2) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (3, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (3, 2) <---- (0, 2) ,Domain of node (0, 2) is {8, 3, 7}.


Revised: The value 3 is removed from the domain of node (0, 2), Now the domain is {8, 7}.


Processing (3, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (3, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 2), Now the domain is {1, 6, 7}.


Processing (3, 2) <---- (4, 2) ,Domain of node (4, 2) is {2, 5, 6, 7, 8}.


Processing (3, 2) <---- (3, 3) ,Domain of node (3, 3) is {2}.


Processing (3, 2) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2}.


Processing (3, 2) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (3, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6, 7, 8}.


Processing (3, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (3, 2) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (3, 2) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (3, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (3, 2) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (3, 2) <---- (7, 2) ,Domain of node (7, 2) is {2, 3, 6, 7, 8}.


Revised: The value 3 is removed from the domain of node (7, 2), Now the domain is {2, 6, 7, 8}.


End of Binary Constraints, Checks done for cell: (3,0).


After make inferences we see that the domain of cell (3, 2) is {3}


Adding to board in cell :(3, 2),value :3


Go deep in the search tree parent cell (3,0) with value 1 ,current depth:28


MRV cell is (0, 2)


Attempting to fill cell (0, 2) with domain values: [7, 8]


Trying value 7 for cell (0, 2), current depth :29


Applying uniaray constraint.


Orginal domain of cell (0, 2) before reduction {8, 7}.


The domain of cell (0, 2) is reduced to 7.


Applying Binary constraint.


Processing (0, 2) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 2) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 2) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (0, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 2), Now the domain is {1, 6}.


Processing (0, 2) <---- (4, 2) ,Domain of node (4, 2) is {2, 5, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (4, 2), Now the domain is {2, 5, 6, 8}.


Processing (0, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6, 7, 8}.


Revised: The value 7 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6, 8}.


Processing (0, 2) <---- (0, 1) ,Domain of node (0, 1) is {8, 3, 7}.


Revised: The value 7 is removed from the domain of node (0, 1), Now the domain is {8, 3}.


Processing (0, 2) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (0, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 2) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 2) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (0, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (0, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (0, 2) <---- (0, 0) ,Domain of node (0, 0) is {8, 3, 7}.


Revised: The value 7 is removed from the domain of node (0, 0), Now the domain is {8, 3}.


Processing (0, 2) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (0, 2) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 2) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (0, 2) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6, 7}.


Revised: The value 7 is removed from the domain of node (7, 2), Now the domain is {8, 2, 6}.


End of Binary Constraints, Checks done for cell: (0,2).


Go deep in the search tree parent cell (0,2) with value 7 ,current depth:29


MRV cell is (0, 0)


Attempting to fill cell (0, 0) with domain values: [8, 3]


Trying value 8 for cell (0, 0), current depth :30


Applying uniaray constraint.


Orginal domain of cell (0, 0) before reduction {8, 3}.


The domain of cell (0, 0) is reduced to 8.


Applying Binary constraint.


Processing (0, 0) <---- (4, 0) ,Domain of node (4, 0) is {8, 2, 7}.


Revised: The value 8 is removed from the domain of node (4, 0), Now the domain is {2, 7}.


Processing (0, 0) <---- (8, 0) ,Domain of node (8, 0) is {2, 3, 7, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 0), Now the domain is {2, 3, 7, 9}.


Processing (0, 0) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (0, 0) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 0) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 0) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (0, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (0, 0) <---- (5, 0) ,Domain of node (5, 0) is {8, 9, 2}.


Revised: The value 8 is removed from the domain of node (5, 0), Now the domain is {9, 2}.


Processing (0, 0) <---- (0, 1) ,Domain of node (0, 1) is {8, 3}.


Revised: The value 8 is removed from the domain of node (0, 1), Now the domain is {3}.


Domain of (0, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(0, 1) for AC- check


Add to the Queue (5, 1),(0, 1) for AC- check


Add to the Queue (0, 2),(0, 1) for AC- check


Add to the Queue (0, 5),(0, 1) for AC- check


Add to the Queue (2, 2),(0, 1) for AC- check


Add to the Queue (1, 0),(0, 1) for AC- check


Add to the Queue (0, 8),(0, 1) for AC- check


Add to the Queue (7, 1),(0, 1) for AC- check


Add to the Queue (0, 7),(0, 1) for AC- check


Add to the Queue (1, 2),(0, 1) for AC- check


Add to the Queue (0, 4),(0, 1) for AC- check


Add to the Queue (2, 1),(0, 1) for AC- check


Add to the Queue (6, 1),(0, 1) for AC- check


Add to the Queue (4, 1),(0, 1) for AC- check


Add to the Queue (8, 1),(0, 1) for AC- check


Add to the Queue (1, 1),(0, 1) for AC- check


Add to the Queue (0, 3),(0, 1) for AC- check


Add to the Queue (2, 0),(0, 1) for AC- check


Add to the Queue (0, 6),(0, 1) for AC- check


Processing (0, 0) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (0, 0) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 0) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 0) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (0, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7, 8}.


Revised: The value 8 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4, 7}.


Processing (0, 0) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (0, 0) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (0, 0) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (0, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Processing (0, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (0, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (0, 1) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (0, 1) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (0, 1) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (0, 1) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (0, 1) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (0, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (0, 1) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (0, 1) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (0, 1) <---- (0, 4) ,Domain of node (0, 4) is {5}.


Processing (0, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (0, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 3, 6, 7}.


Revised: The value 3 is removed from the domain of node (6, 1), Now the domain is {9, 6, 7}.


Processing (0, 1) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (0, 1) <---- (8, 1) ,Domain of node (8, 1) is {3, 6, 7, 8, 9}.


Revised: The value 3 is removed from the domain of node (8, 1), Now the domain is {6, 7, 8, 9}.


Processing (0, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (0, 1) <---- (0, 3) ,Domain of node (0, 3) is {4}.


Processing (0, 1) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (0, 1) <---- (0, 6) ,Domain of node (0, 6) is {6}.


End of Binary Constraints, Checks done for cell: (0,0).


After make inferences we see that the domain of cell (0, 1) is {3}


Adding to board in cell :(0, 1),value :3


Go deep in the search tree parent cell (0,0) with value 8 ,current depth:30


MRV cell is (4, 0)


Attempting to fill cell (4, 0) with domain values: [2, 7]


Trying value 2 for cell (4, 0), current depth :31


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {2, 7}.


The domain of cell (4, 0) is reduced to 2.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Revised: The value 2 is removed from the domain of node (4, 6), Now the domain is {8}.


Domain of (4, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 3),(4, 6) for AC- check


Add to the Queue (3, 7),(4, 6) for AC- check


Add to the Queue (5, 7),(4, 6) for AC- check


Add to the Queue (8, 6),(4, 6) for AC- check


Add to the Queue (1, 6),(4, 6) for AC- check


Add to the Queue (4, 2),(4, 6) for AC- check


Add to the Queue (4, 5),(4, 6) for AC- check


Add to the Queue (5, 6),(4, 6) for AC- check


Add to the Queue (4, 8),(4, 6) for AC- check


Add to the Queue (3, 6),(4, 6) for AC- check


Add to the Queue (7, 6),(4, 6) for AC- check


Add to the Queue (4, 1),(4, 6) for AC- check


Add to the Queue (4, 7),(4, 6) for AC- check


Add to the Queue (4, 4),(4, 6) for AC- check


Add to the Queue (3, 8),(4, 6) for AC- check


Add to the Queue (5, 8),(4, 6) for AC- check


Add to the Queue (0, 6),(4, 6) for AC- check


Add to the Queue (2, 6),(4, 6) for AC- check


Add to the Queue (6, 6),(4, 6) for AC- check


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3, 7}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {9, 3, 7}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5, 6}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {8, 5, 6}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (7, 0),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {1, 6}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7}.


Revised: The value 2 is removed from the domain of node (7, 0), Now the domain is {3, 4, 7}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (5, 2), Now the domain is {8, 6}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {6}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (5, 6),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (2, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (4, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 2}.


Revised: The value 8 is removed from the domain of node (8, 6), Now the domain is {2}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {8, 5, 6}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {5, 6}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {2, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Revised: The value 8 is removed from the domain of node (4, 1), Now the domain is {6, 7}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Revised: The value 8 is removed from the domain of node (4, 7), Now the domain is {1, 6}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {8, 6}.


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3, 7}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {3, 7}.


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {5, 6}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (7, 0) ,Domain of node (7, 0) is {3, 4, 7}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {6, 7}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 6}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {3, 4, 7}.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {8, 6}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {8}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 6}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {8, 3}.


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {1, 6}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (4, 6),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {1, 3, 9}.


Processing (5, 7) <---- (4, 7) ,Domain of node (4, 7) is {1, 6}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {1}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (4, 8),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {8, 6}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {8}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 1),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {2, 4}.


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 8, 9}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 3, 8, 9}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {3, 7}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 3}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {8, 1, 2, 6}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {8, 1, 6}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Revised: The value 2 is removed from the domain of node (8, 8), Now the domain is {1, 6, 7}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 9}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {2, 4}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {4}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {8, 9, 6, 7}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 8, 9}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {4, 6, 7}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {2}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5, 6}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 1) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 6, 7}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {6, 7}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {8}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is set().


From AC-3 We infrom that this path will lead to some CELL with no possible domain to fill it ,wrong path (Try another value (lw lesa for loop mkmla) ,Backtrack(forloop 5lst el values) )


End of Binary Constraints, Checks done for cell: (4,0).


Undo operation ,current depth : 31.


Remove the assigment from the board ,(4,0)=0.


No inferences made from cell (4,0) to remove it.


Trying value 7 for cell (4, 0), current depth :31


Applying uniaray constraint.


Orginal domain of cell (4, 0) before reduction {2, 7}.


The domain of cell (4, 0) is reduced to 7.


Applying Binary constraint.


Processing (4, 0) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 0) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Processing (4, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Processing (4, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3, 7}.


Revised: The value 7 is removed from the domain of node (8, 0), Now the domain is {9, 2, 3}.


Processing (4, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (4, 0) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5, 6}.


Processing (4, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 0) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (4, 0) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Processing (4, 0) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4, 7}.


Revised: The value 7 is removed from the domain of node (7, 0), Now the domain is {2, 3, 4}.


Processing (4, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 0) <---- (4, 1) ,Domain of node (4, 1) is {8, 6, 7}.


Revised: The value 7 is removed from the domain of node (4, 1), Now the domain is {8, 6}.


Processing (4, 0) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Processing (4, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Processing (4, 0) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (4, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (4, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4, 7}.


Revised: The value 7 is removed from the domain of node (6, 0), Now the domain is {9, 3, 4}.


End of Binary Constraints, Checks done for cell: (4,0).


Go deep in the search tree parent cell (4,0) with value 7 ,current depth:31


MRV cell is (4, 1)


Attempting to fill cell (4, 1) with domain values: [6, 8]


Trying value 6 for cell (4, 1), current depth :32


Applying uniaray constraint.


Orginal domain of cell (4, 1) before reduction {8, 6}.


The domain of cell (4, 1) is reduced to 6.


Applying Binary constraint.


Processing (4, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 1) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 1) <---- (4, 6) ,Domain of node (4, 6) is {8, 2}.


Processing (4, 1) <---- (5, 1) ,Domain of node (5, 1) is {8, 9, 6}.


Revised: The value 6 is removed from the domain of node (5, 1), Now the domain is {8, 9}.


Processing (4, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (4, 1) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5, 6}.


Revised: The value 6 is removed from the domain of node (4, 2), Now the domain is {8, 2, 5}.


Processing (4, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 1) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 1) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (4, 1) <---- (4, 8) ,Domain of node (4, 8) is {1, 2, 6}.


Revised: The value 6 is removed from the domain of node (4, 8), Now the domain is {1, 2}.


Processing (4, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (4, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (4, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 6, 7}.


Revised: The value 6 is removed from the domain of node (6, 1), Now the domain is {9, 7}.


Processing (4, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 1) <---- (4, 7) ,Domain of node (4, 7) is {8, 1, 6}.


Revised: The value 6 is removed from the domain of node (4, 7), Now the domain is {8, 1}.


Processing (4, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 2, 6}.


Revised: The value 6 is removed from the domain of node (5, 2), Now the domain is {8, 2}.


Processing (4, 1) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 1) <---- (8, 1) ,Domain of node (8, 1) is {8, 9, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 1), Now the domain is {8, 9, 7}.


Processing (4, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


End of Binary Constraints, Checks done for cell: (4,1).


Go deep in the search tree parent cell (4,1) with value 6 ,current depth:32


MRV cell is (4, 6)


Attempting to fill cell (4, 6) with domain values: [2, 8]


Trying value 2 for cell (4, 6), current depth :33


Applying uniaray constraint.


Orginal domain of cell (4, 6) before reduction {8, 2}.


The domain of cell (4, 6) is reduced to 2.


Applying Binary constraint.


Processing (4, 6) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 6) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 6) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 6) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Processing (4, 6) <---- (8, 6) ,Domain of node (8, 6) is {8, 2}.


Revised: The value 2 is removed from the domain of node (8, 6), Now the domain is {8}.


Domain of (8, 6) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 6) for AC- check


Add to the Queue (8, 3),(8, 6) for AC- check


Add to the Queue (1, 6),(8, 6) for AC- check


Add to the Queue (7, 7),(8, 6) for AC- check


Add to the Queue (6, 8),(8, 6) for AC- check


Add to the Queue (5, 6),(8, 6) for AC- check


Add to the Queue (3, 6),(8, 6) for AC- check


Add to the Queue (8, 2),(8, 6) for AC- check


Add to the Queue (8, 5),(8, 6) for AC- check


Add to the Queue (8, 8),(8, 6) for AC- check


Add to the Queue (6, 7),(8, 6) for AC- check


Add to the Queue (7, 6),(8, 6) for AC- check


Add to the Queue (8, 4),(8, 6) for AC- check


Add to the Queue (8, 1),(8, 6) for AC- check


Add to the Queue (8, 7),(8, 6) for AC- check


Add to the Queue (0, 6),(8, 6) for AC- check


Add to the Queue (2, 6),(8, 6) for AC- check


Add to the Queue (6, 6),(8, 6) for AC- check


Add to the Queue (7, 8),(8, 6) for AC- check


Processing (4, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (4, 6) <---- (4, 2) ,Domain of node (4, 2) is {8, 2, 5}.


Revised: The value 2 is removed from the domain of node (4, 2), Now the domain is {8, 5}.


Processing (4, 6) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 6) <---- (4, 8) ,Domain of node (4, 8) is {1, 2}.


Revised: The value 2 is removed from the domain of node (4, 8), Now the domain is {1}.


Domain of (4, 8) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 8) for AC- check


Add to the Queue (4, 3),(4, 8) for AC- check


Add to the Queue (3, 7),(4, 8) for AC- check


Add to the Queue (5, 7),(4, 8) for AC- check


Add to the Queue (0, 8),(4, 8) for AC- check


Add to the Queue (2, 8),(4, 8) for AC- check


Add to the Queue (6, 8),(4, 8) for AC- check


Add to the Queue (4, 2),(4, 8) for AC- check


Add to the Queue (4, 5),(4, 8) for AC- check


Add to the Queue (5, 6),(4, 8) for AC- check


Add to the Queue (3, 6),(4, 8) for AC- check


Add to the Queue (8, 8),(4, 8) for AC- check


Add to the Queue (1, 8),(4, 8) for AC- check


Add to the Queue (4, 1),(4, 8) for AC- check


Add to the Queue (4, 7),(4, 8) for AC- check


Add to the Queue (4, 4),(4, 8) for AC- check


Add to the Queue (3, 8),(4, 8) for AC- check


Add to the Queue (5, 8),(4, 8) for AC- check


Add to the Queue (7, 8),(4, 8) for AC- check


Processing (4, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 2, 4}.


Revised: The value 2 is removed from the domain of node (7, 6), Now the domain is {8, 4}.


Processing (4, 6) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 6) <---- (4, 7) ,Domain of node (4, 7) is {8, 1}.


Processing (4, 6) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 6) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 6) <---- (5, 8) ,Domain of node (5, 8) is {2, 4, 6}.


Revised: The value 2 is removed from the domain of node (5, 8), Now the domain is {4, 6}.


Processing (4, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (4, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (4, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (8, 6) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3}.


Processing (8, 6) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (8, 6) <---- (7, 7) ,Domain of node (7, 7) is {8, 3, 6}.


Revised: The value 8 is removed from the domain of node (7, 7), Now the domain is {3, 6}.


Processing (8, 6) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7}.


Processing (8, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (8, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (8, 6) <---- (8, 2) ,Domain of node (8, 2) is {8, 1, 2, 6}.


Revised: The value 8 is removed from the domain of node (8, 2), Now the domain is {1, 2, 6}.


Processing (8, 6) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Processing (8, 6) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Processing (8, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (8, 6) <---- (7, 6) ,Domain of node (7, 6) is {8, 4}.


Revised: The value 8 is removed from the domain of node (7, 6), Now the domain is {4}.


Domain of (7, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(7, 6) for AC- check


Add to the Queue (1, 6),(7, 6) for AC- check


Add to the Queue (7, 4),(7, 6) for AC- check


Add to the Queue (7, 1),(7, 6) for AC- check


Add to the Queue (7, 7),(7, 6) for AC- check


Add to the Queue (6, 8),(7, 6) for AC- check


Add to the Queue (5, 6),(7, 6) for AC- check


Add to the Queue (3, 6),(7, 6) for AC- check


Add to the Queue (8, 8),(7, 6) for AC- check


Add to the Queue (7, 0),(7, 6) for AC- check


Add to the Queue (7, 3),(7, 6) for AC- check


Add to the Queue (6, 7),(7, 6) for AC- check


Add to the Queue (8, 7),(7, 6) for AC- check


Add to the Queue (0, 6),(7, 6) for AC- check


Add to the Queue (2, 6),(7, 6) for AC- check


Add to the Queue (7, 2),(7, 6) for AC- check


Add to the Queue (6, 6),(7, 6) for AC- check


Add to the Queue (7, 5),(7, 6) for AC- check


Add to the Queue (7, 8),(7, 6) for AC- check


Processing (8, 6) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 6) <---- (8, 1) ,Domain of node (8, 1) is {8, 9, 7}.


Revised: The value 8 is removed from the domain of node (8, 1), Now the domain is {9, 7}.


Processing (8, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 8, 9}.


Revised: The value 8 is removed from the domain of node (8, 7), Now the domain is {1, 3, 6, 9}.


Processing (8, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (8, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (8, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Processing (8, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Processing (4, 8) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 8) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 8) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Processing (4, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (4, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (4, 8) <---- (6, 8) ,Domain of node (6, 8) is {1, 4, 6, 7}.


Revised: The value 1 is removed from the domain of node (6, 8), Now the domain is {4, 6, 7}.


Processing (4, 8) <---- (4, 2) ,Domain of node (4, 2) is {8, 5}.


Processing (4, 8) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 8) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 8) <---- (8, 8) ,Domain of node (8, 8) is {1, 2, 6, 7}.


Revised: The value 1 is removed from the domain of node (8, 8), Now the domain is {2, 6, 7}.


Processing (4, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (4, 8) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 8) <---- (4, 7) ,Domain of node (4, 7) is {8, 1}.


Revised: The value 1 is removed from the domain of node (4, 7), Now the domain is {8}.


Domain of (4, 7) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 7) for AC- check


Add to the Queue (4, 3),(4, 7) for AC- check


Add to the Queue (3, 7),(4, 7) for AC- check


Add to the Queue (4, 6),(4, 7) for AC- check


Add to the Queue (5, 7),(4, 7) for AC- check


Add to the Queue (7, 7),(4, 7) for AC- check


Add to the Queue (4, 2),(4, 7) for AC- check


Add to the Queue (4, 5),(4, 7) for AC- check


Add to the Queue (5, 6),(4, 7) for AC- check


Add to the Queue (3, 6),(4, 7) for AC- check


Add to the Queue (0, 7),(4, 7) for AC- check


Add to the Queue (2, 7),(4, 7) for AC- check


Add to the Queue (6, 7),(4, 7) for AC- check


Add to the Queue (4, 1),(4, 7) for AC- check


Add to the Queue (4, 4),(4, 7) for AC- check


Add to the Queue (3, 8),(4, 7) for AC- check


Add to the Queue (5, 8),(4, 7) for AC- check


Add to the Queue (8, 7),(4, 7) for AC- check


Add to the Queue (1, 7),(4, 7) for AC- check


Processing (4, 8) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 8) <---- (5, 8) ,Domain of node (5, 8) is {4, 6}.


Processing (4, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Processing (7, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (7, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (7, 6) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 6) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 6) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Processing (7, 6) <---- (6, 8) ,Domain of node (6, 8) is {4, 6, 7}.


Revised: The value 4 is removed from the domain of node (6, 8), Now the domain is {6, 7}.


Processing (7, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (7, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (7, 6) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (7, 6) <---- (7, 0) ,Domain of node (7, 0) is {2, 3, 4}.


Revised: The value 4 is removed from the domain of node (7, 0), Now the domain is {2, 3}.


Processing (7, 6) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (7, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Processing (7, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (7, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (7, 6) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Processing (7, 6) <---- (6, 6) ,Domain of node (6, 6) is {4, 5}.


Revised: The value 4 is removed from the domain of node (6, 6), Now the domain is {5}.


Domain of (6, 6) is one value ,we need to add AC constraint.


Add to the Queue (4, 6),(6, 6) for AC- check


Add to the Queue (8, 6),(6, 6) for AC- check


Add to the Queue (1, 6),(6, 6) for AC- check


Add to the Queue (6, 2),(6, 6) for AC- check


Add to the Queue (7, 7),(6, 6) for AC- check


Add to the Queue (6, 5),(6, 6) for AC- check


Add to the Queue (6, 8),(6, 6) for AC- check


Add to the Queue (5, 6),(6, 6) for AC- check


Add to the Queue (3, 6),(6, 6) for AC- check


Add to the Queue (8, 8),(6, 6) for AC- check


Add to the Queue (6, 1),(6, 6) for AC- check


Add to the Queue (6, 4),(6, 6) for AC- check


Add to the Queue (6, 7),(6, 6) for AC- check


Add to the Queue (8, 7),(6, 6) for AC- check


Add to the Queue (0, 6),(6, 6) for AC- check


Add to the Queue (2, 6),(6, 6) for AC- check


Add to the Queue (6, 0),(6, 6) for AC- check


Add to the Queue (6, 3),(6, 6) for AC- check


Add to the Queue (7, 8),(6, 6) for AC- check


Processing (7, 6) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Processing (7, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 4, 6, 7}.


Revised: The value 4 is removed from the domain of node (7, 8), Now the domain is {2, 6, 7}.


Processing (4, 7) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 7) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (4, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (4, 7) <---- (5, 7) ,Domain of node (5, 7) is {8, 6}.


Revised: The value 8 is removed from the domain of node (5, 7), Now the domain is {6}.


Domain of (5, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 7) for AC- check


Add to the Queue (5, 4),(5, 7) for AC- check


Add to the Queue (4, 6),(5, 7) for AC- check


Add to the Queue (5, 1),(5, 7) for AC- check


Add to the Queue (7, 7),(5, 7) for AC- check


Add to the Queue (5, 0),(5, 7) for AC- check


Add to the Queue (5, 6),(5, 7) for AC- check


Add to the Queue (4, 8),(5, 7) for AC- check


Add to the Queue (3, 6),(5, 7) for AC- check


Add to the Queue (5, 3),(5, 7) for AC- check


Add to the Queue (0, 7),(5, 7) for AC- check


Add to the Queue (2, 7),(5, 7) for AC- check


Add to the Queue (6, 7),(5, 7) for AC- check


Add to the Queue (5, 2),(5, 7) for AC- check


Add to the Queue (3, 8),(5, 7) for AC- check


Add to the Queue (5, 5),(5, 7) for AC- check


Add to the Queue (5, 8),(5, 7) for AC- check


Add to the Queue (8, 7),(5, 7) for AC- check


Add to the Queue (1, 7),(5, 7) for AC- check


Processing (4, 7) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Processing (4, 7) <---- (4, 2) ,Domain of node (4, 2) is {8, 5}.


Revised: The value 8 is removed from the domain of node (4, 2), Now the domain is {5}.


Domain of (4, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(4, 2) for AC- check


Add to the Queue (4, 3),(4, 2) for AC- check


Add to the Queue (3, 1),(4, 2) for AC- check


Add to the Queue (4, 6),(4, 2) for AC- check


Add to the Queue (5, 1),(4, 2) for AC- check


Add to the Queue (0, 2),(4, 2) for AC- check


Add to the Queue (2, 2),(4, 2) for AC- check


Add to the Queue (6, 2),(4, 2) for AC- check


Add to the Queue (3, 0),(4, 2) for AC- check


Add to the Queue (4, 5),(4, 2) for AC- check


Add to the Queue (5, 0),(4, 2) for AC- check


Add to the Queue (4, 8),(4, 2) for AC- check


Add to the Queue (8, 2),(4, 2) for AC- check


Add to the Queue (1, 2),(4, 2) for AC- check


Add to the Queue (3, 2),(4, 2) for AC- check


Add to the Queue (4, 1),(4, 2) for AC- check


Add to the Queue (5, 2),(4, 2) for AC- check


Add to the Queue (4, 4),(4, 2) for AC- check


Add to the Queue (7, 2),(4, 2) for AC- check


Processing (4, 7) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (4, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (4, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (4, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (4, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (4, 7) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 7) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (4, 7) <---- (5, 8) ,Domain of node (5, 8) is {4, 6}.


Processing (4, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Processing (4, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 6) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (6, 6) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (6, 6) <---- (1, 6) ,Domain of node (1, 6) is {7}.


Processing (6, 6) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (6, 6) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Processing (6, 6) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (6, 6) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (6, 6) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (6, 6) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (6, 6) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (6, 6) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (6, 6) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 6) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Processing (6, 6) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Processing (6, 6) <---- (0, 6) ,Domain of node (0, 6) is {6}.


Processing (6, 6) <---- (2, 6) ,Domain of node (2, 6) is {1}.


Processing (6, 6) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Processing (6, 6) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 6) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Processing (5, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 7) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 7) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (5, 7) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Processing (5, 7) <---- (7, 7) ,Domain of node (7, 7) is {3, 6}.


Revised: The value 6 is removed from the domain of node (7, 7), Now the domain is {3}.


Domain of (7, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(7, 7) for AC- check


Add to the Queue (8, 6),(7, 7) for AC- check


Add to the Queue (7, 4),(7, 7) for AC- check


Add to the Queue (7, 1),(7, 7) for AC- check


Add to the Queue (6, 8),(7, 7) for AC- check


Add to the Queue (0, 7),(7, 7) for AC- check


Add to the Queue (8, 8),(7, 7) for AC- check


Add to the Queue (2, 7),(7, 7) for AC- check


Add to the Queue (7, 0),(7, 7) for AC- check


Add to the Queue (7, 3),(7, 7) for AC- check


Add to the Queue (6, 7),(7, 7) for AC- check


Add to the Queue (7, 6),(7, 7) for AC- check


Add to the Queue (4, 7),(7, 7) for AC- check


Add to the Queue (8, 7),(7, 7) for AC- check


Add to the Queue (1, 7),(7, 7) for AC- check


Add to the Queue (7, 2),(7, 7) for AC- check


Add to the Queue (6, 6),(7, 7) for AC- check


Add to the Queue (7, 5),(7, 7) for AC- check


Add to the Queue (7, 8),(7, 7) for AC- check


Processing (5, 7) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (5, 7) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 7) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (5, 7) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 7) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (5, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (5, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (6, 7), Now the domain is {1, 3, 9}.


Processing (5, 7) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (5, 7) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 7) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 7) <---- (5, 8) ,Domain of node (5, 8) is {4, 6}.


Revised: The value 6 is removed from the domain of node (5, 8), Now the domain is {4}.


Domain of (5, 8) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(5, 8) for AC- check


Add to the Queue (5, 4),(5, 8) for AC- check


Add to the Queue (4, 6),(5, 8) for AC- check


Add to the Queue (5, 1),(5, 8) for AC- check


Add to the Queue (0, 8),(5, 8) for AC- check


Add to the Queue (2, 8),(5, 8) for AC- check


Add to the Queue (6, 8),(5, 8) for AC- check


Add to the Queue (5, 0),(5, 8) for AC- check


Add to the Queue (5, 6),(5, 8) for AC- check


Add to the Queue (4, 8),(5, 8) for AC- check


Add to the Queue (3, 6),(5, 8) for AC- check


Add to the Queue (5, 3),(5, 8) for AC- check


Add to the Queue (8, 8),(5, 8) for AC- check


Add to the Queue (1, 8),(5, 8) for AC- check


Add to the Queue (4, 7),(5, 8) for AC- check


Add to the Queue (5, 2),(5, 8) for AC- check


Add to the Queue (3, 8),(5, 8) for AC- check


Add to the Queue (5, 5),(5, 8) for AC- check


Add to the Queue (7, 8),(5, 8) for AC- check


Processing (5, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 6, 9}.


Revised: The value 6 is removed from the domain of node (8, 7), Now the domain is {1, 3, 9}.


Processing (5, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (4, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (4, 2) <---- (4, 3) ,Domain of node (4, 3) is {3}.


Processing (4, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (4, 2) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (4, 2) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Processing (4, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (4, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (4, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (4, 2) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (4, 2) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (4, 2) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (4, 2) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (4, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6}.


Processing (4, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (4, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (4, 2) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (4, 2) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (4, 2) <---- (4, 4) ,Domain of node (4, 4) is {9}.


Processing (4, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Processing (7, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (7, 7) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (7, 7) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 7) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 7) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (7, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (7, 7) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (7, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (7, 7) <---- (7, 0) ,Domain of node (7, 0) is {2, 3}.


Revised: The value 3 is removed from the domain of node (7, 0), Now the domain is {2}.


Domain of (7, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(7, 0) for AC- check


Add to the Queue (8, 0),(7, 0) for AC- check


Add to the Queue (1, 0),(7, 0) for AC- check


Add to the Queue (7, 4),(7, 0) for AC- check


Add to the Queue (6, 2),(7, 0) for AC- check


Add to the Queue (7, 1),(7, 0) for AC- check


Add to the Queue (3, 0),(7, 0) for AC- check


Add to the Queue (5, 0),(7, 0) for AC- check


Add to the Queue (8, 2),(7, 0) for AC- check


Add to the Queue (6, 1),(7, 0) for AC- check


Add to the Queue (7, 3),(7, 0) for AC- check


Add to the Queue (7, 6),(7, 0) for AC- check


Add to the Queue (0, 0),(7, 0) for AC- check


Add to the Queue (8, 1),(7, 0) for AC- check


Add to the Queue (2, 0),(7, 0) for AC- check


Add to the Queue (7, 2),(7, 0) for AC- check


Add to the Queue (6, 0),(7, 0) for AC- check


Add to the Queue (7, 5),(7, 0) for AC- check


Add to the Queue (7, 8),(7, 0) for AC- check


Processing (7, 7) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 7) <---- (6, 7) ,Domain of node (6, 7) is {1, 3, 9}.


Revised: The value 3 is removed from the domain of node (6, 7), Now the domain is {1, 9}.


Processing (7, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 7) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (7, 7) <---- (8, 7) ,Domain of node (8, 7) is {1, 3, 9}.


Revised: The value 3 is removed from the domain of node (8, 7), Now the domain is {1, 9}.


Processing (7, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (7, 7) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Processing (7, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 7) <---- (7, 5) ,Domain of node (7, 5) is {3, 6, 7}.


Revised: The value 3 is removed from the domain of node (7, 5), Now the domain is {6, 7}.


Processing (7, 7) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Processing (5, 8) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (5, 8) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 8) <---- (4, 6) ,Domain of node (4, 6) is {2}.


Processing (5, 8) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Processing (5, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (5, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (5, 8) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (5, 8) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Processing (5, 8) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (5, 8) <---- (3, 6) ,Domain of node (3, 6) is {9}.


Processing (5, 8) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (5, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (5, 8) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (5, 8) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (5, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (5, 8) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 8) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Processing (7, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (7, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 2, 3}.


Revised: The value 2 is removed from the domain of node (8, 0), Now the domain is {9, 3}.


Processing (7, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (7, 0) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (7, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (7, 0) <---- (5, 0) ,Domain of node (5, 0) is {9, 2}.


Revised: The value 2 is removed from the domain of node (5, 0), Now the domain is {9}.


Domain of (5, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 0) for AC- check


Add to the Queue (3, 1),(5, 0) for AC- check


Add to the Queue (5, 4),(5, 0) for AC- check


Add to the Queue (5, 1),(5, 0) for AC- check


Add to the Queue (5, 7),(5, 0) for AC- check


Add to the Queue (8, 0),(5, 0) for AC- check


Add to the Queue (1, 0),(5, 0) for AC- check


Add to the Queue (4, 2),(5, 0) for AC- check


Add to the Queue (3, 0),(5, 0) for AC- check


Add to the Queue (5, 6),(5, 0) for AC- check


Add to the Queue (5, 3),(5, 0) for AC- check


Add to the Queue (3, 2),(5, 0) for AC- check


Add to the Queue (4, 1),(5, 0) for AC- check


Add to the Queue (5, 2),(5, 0) for AC- check


Add to the Queue (5, 5),(5, 0) for AC- check


Add to the Queue (5, 8),(5, 0) for AC- check


Add to the Queue (0, 0),(5, 0) for AC- check


Add to the Queue (2, 0),(5, 0) for AC- check


Add to the Queue (6, 0),(5, 0) for AC- check


Processing (7, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 2, 6}.


Revised: The value 2 is removed from the domain of node (8, 2), Now the domain is {1, 6}.


Processing (7, 0) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (7, 0) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 0) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (7, 0) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (7, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (7, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 2, 6}.


Revised: The value 2 is removed from the domain of node (7, 2), Now the domain is {8, 6}.


Processing (7, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Processing (7, 0) <---- (7, 5) ,Domain of node (7, 5) is {6, 7}.


Processing (7, 0) <---- (7, 8) ,Domain of node (7, 8) is {2, 6, 7}.


Revised: The value 2 is removed from the domain of node (7, 8), Now the domain is {6, 7}.


Processing (5, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 0) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 0) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 0) <---- (5, 1) ,Domain of node (5, 1) is {8, 9}.


Revised: The value 9 is removed from the domain of node (5, 1), Now the domain is {8}.


Domain of (5, 1) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 1) for AC- check


Add to the Queue (3, 1),(5, 1) for AC- check


Add to the Queue (5, 4),(5, 1) for AC- check


Add to the Queue (5, 7),(5, 1) for AC- check


Add to the Queue (7, 1),(5, 1) for AC- check


Add to the Queue (4, 2),(5, 1) for AC- check


Add to the Queue (3, 0),(5, 1) for AC- check


Add to the Queue (5, 6),(5, 1) for AC- check


Add to the Queue (5, 3),(5, 1) for AC- check


Add to the Queue (0, 1),(5, 1) for AC- check


Add to the Queue (2, 1),(5, 1) for AC- check


Add to the Queue (6, 1),(5, 1) for AC- check


Add to the Queue (3, 2),(5, 1) for AC- check


Add to the Queue (4, 1),(5, 1) for AC- check


Add to the Queue (5, 2),(5, 1) for AC- check


Add to the Queue (5, 5),(5, 1) for AC- check


Add to the Queue (5, 8),(5, 1) for AC- check


Add to the Queue (8, 1),(5, 1) for AC- check


Add to the Queue (1, 1),(5, 1) for AC- check


Processing (5, 0) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 0) <---- (8, 0) ,Domain of node (8, 0) is {9, 3}.


Revised: The value 9 is removed from the domain of node (8, 0), Now the domain is {3}.


Domain of (8, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(8, 0) for AC- check


Add to the Queue (8, 3),(8, 0) for AC- check


Add to the Queue (8, 6),(8, 0) for AC- check


Add to the Queue (1, 0),(8, 0) for AC- check


Add to the Queue (6, 2),(8, 0) for AC- check


Add to the Queue (7, 1),(8, 0) for AC- check


Add to the Queue (3, 0),(8, 0) for AC- check


Add to the Queue (8, 2),(8, 0) for AC- check


Add to the Queue (8, 5),(8, 0) for AC- check


Add to the Queue (8, 8),(8, 0) for AC- check


Add to the Queue (6, 1),(8, 0) for AC- check


Add to the Queue (7, 0),(8, 0) for AC- check


Add to the Queue (8, 4),(8, 0) for AC- check


Add to the Queue (8, 1),(8, 0) for AC- check


Add to the Queue (8, 7),(8, 0) for AC- check


Add to the Queue (0, 0),(8, 0) for AC- check


Add to the Queue (2, 0),(8, 0) for AC- check


Add to the Queue (7, 2),(8, 0) for AC- check


Add to the Queue (6, 0),(8, 0) for AC- check


Processing (5, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (5, 0) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 0) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 0) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 0) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 0) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 0) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Processing (5, 0) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 0) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (5, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (5, 0) <---- (6, 0) ,Domain of node (6, 0) is {9, 3, 4}.


Revised: The value 9 is removed from the domain of node (6, 0), Now the domain is {3, 4}.


Processing (5, 1) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 1) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 1) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (5, 1) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 1) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 1) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 1) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (5, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (5, 1) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (5, 1) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 1) <---- (5, 2) ,Domain of node (5, 2) is {8, 2}.


Revised: The value 8 is removed from the domain of node (5, 2), Now the domain is {2}.


Domain of (5, 2) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(5, 2) for AC- check


Add to the Queue (3, 1),(5, 2) for AC- check


Add to the Queue (5, 4),(5, 2) for AC- check


Add to the Queue (5, 7),(5, 2) for AC- check


Add to the Queue (0, 2),(5, 2) for AC- check


Add to the Queue (2, 2),(5, 2) for AC- check


Add to the Queue (6, 2),(5, 2) for AC- check


Add to the Queue (4, 2),(5, 2) for AC- check


Add to the Queue (3, 0),(5, 2) for AC- check


Add to the Queue (5, 0),(5, 2) for AC- check


Add to the Queue (5, 6),(5, 2) for AC- check


Add to the Queue (5, 3),(5, 2) for AC- check


Add to the Queue (8, 2),(5, 2) for AC- check


Add to the Queue (1, 2),(5, 2) for AC- check


Add to the Queue (3, 2),(5, 2) for AC- check


Add to the Queue (4, 1),(5, 2) for AC- check


Add to the Queue (5, 5),(5, 2) for AC- check


Add to the Queue (5, 8),(5, 2) for AC- check


Add to the Queue (7, 2),(5, 2) for AC- check


Processing (5, 1) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 1) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 1) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (5, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (8, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (8, 0) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 0) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (8, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (8, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (8, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (8, 0) <---- (8, 5) ,Domain of node (8, 5) is {3, 6, 7}.


Revised: The value 3 is removed from the domain of node (8, 5), Now the domain is {6, 7}.


Processing (8, 0) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Processing (8, 0) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (8, 0) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (8, 0) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 0) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (8, 0) <---- (8, 7) ,Domain of node (8, 7) is {1, 9}.


Processing (8, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (8, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (8, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (8, 0) <---- (6, 0) ,Domain of node (6, 0) is {3, 4}.


Revised: The value 3 is removed from the domain of node (6, 0), Now the domain is {4}.


Domain of (6, 0) is one value ,we need to add AC constraint.


Add to the Queue (4, 0),(6, 0) for AC- check


Add to the Queue (1, 0),(6, 0) for AC- check


Add to the Queue (6, 2),(6, 0) for AC- check


Add to the Queue (7, 1),(6, 0) for AC- check


Add to the Queue (6, 5),(6, 0) for AC- check


Add to the Queue (6, 8),(6, 0) for AC- check


Add to the Queue (3, 0),(6, 0) for AC- check


Add to the Queue (5, 0),(6, 0) for AC- check


Add to the Queue (8, 2),(6, 0) for AC- check


Add to the Queue (6, 1),(6, 0) for AC- check


Add to the Queue (7, 0),(6, 0) for AC- check


Add to the Queue (6, 4),(6, 0) for AC- check


Add to the Queue (6, 7),(6, 0) for AC- check


Add to the Queue (0, 0),(6, 0) for AC- check


Add to the Queue (8, 1),(6, 0) for AC- check


Add to the Queue (2, 0),(6, 0) for AC- check


Add to the Queue (7, 2),(6, 0) for AC- check


Add to the Queue (6, 6),(6, 0) for AC- check


Add to the Queue (6, 3),(6, 0) for AC- check


Processing (5, 2) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (5, 2) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (5, 2) <---- (5, 4) ,Domain of node (5, 4) is {7}.


Processing (5, 2) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (5, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (5, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (5, 2) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (5, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (5, 2) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (5, 2) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (5, 2) <---- (5, 6) ,Domain of node (5, 6) is {3}.


Processing (5, 2) <---- (5, 3) ,Domain of node (5, 3) is {1}.


Processing (5, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (5, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (5, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (5, 2) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (5, 2) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (5, 2) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (5, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 0) <---- (4, 0) ,Domain of node (4, 0) is {7}.


Processing (6, 0) <---- (1, 0) ,Domain of node (1, 0) is {5}.


Processing (6, 0) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (6, 0) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 0) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Processing (6, 0) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Processing (6, 0) <---- (3, 0) ,Domain of node (3, 0) is {1}.


Processing (6, 0) <---- (5, 0) ,Domain of node (5, 0) is {9}.


Processing (6, 0) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (6, 0) <---- (6, 1) ,Domain of node (6, 1) is {9, 7}.


Processing (6, 0) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (6, 0) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 0) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Processing (6, 0) <---- (0, 0) ,Domain of node (0, 0) is {8}.


Processing (6, 0) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Processing (6, 0) <---- (2, 0) ,Domain of node (2, 0) is {6}.


Processing (6, 0) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 0) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 0) <---- (6, 3) ,Domain of node (6, 3) is {8}.


End of Binary Constraints, Checks done for cell: (4,6).


After make inferences we see that the domain of cell (4, 2) is {5}


After make inferences we see that the domain of cell (4, 7) is {8}


After make inferences we see that the domain of cell (4, 8) is {1}


After make inferences we see that the domain of cell (5, 0) is {9}


After make inferences we see that the domain of cell (5, 1) is {8}


After make inferences we see that the domain of cell (5, 2) is {2}


After make inferences we see that the domain of cell (5, 7) is {6}


After make inferences we see that the domain of cell (5, 8) is {4}


After make inferences we see that the domain of cell (6, 0) is {4}


After make inferences we see that the domain of cell (6, 6) is {5}


After make inferences we see that the domain of cell (7, 0) is {2}


After make inferences we see that the domain of cell (7, 6) is {4}


After make inferences we see that the domain of cell (7, 7) is {3}


After make inferences we see that the domain of cell (8, 0) is {3}


After make inferences we see that the domain of cell (8, 6) is {8}


Adding to board in cell :(4, 2),value :5


Adding to board in cell :(4, 7),value :8


Adding to board in cell :(4, 8),value :1


Adding to board in cell :(5, 0),value :9


Adding to board in cell :(5, 1),value :8


Adding to board in cell :(5, 2),value :2


Adding to board in cell :(5, 7),value :6


Adding to board in cell :(5, 8),value :4


Adding to board in cell :(6, 0),value :4


Adding to board in cell :(6, 6),value :5


Adding to board in cell :(7, 0),value :2


Adding to board in cell :(7, 6),value :4


Adding to board in cell :(7, 7),value :3


Adding to board in cell :(8, 0),value :3


Adding to board in cell :(8, 6),value :8


Go deep in the search tree parent cell (4,6) with value 2 ,current depth:33


MRV cell is (6, 1)


Attempting to fill cell (6, 1) with domain values: [7, 9]


Trying value 7 for cell (6, 1), current depth :34


Applying uniaray constraint.


Orginal domain of cell (6, 1) before reduction {9, 7}.


The domain of cell (6, 1) is reduced to 7.


Applying Binary constraint.


Processing (6, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (6, 1) <---- (5, 1) ,Domain of node (5, 1) is {8}.


Processing (6, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 1) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Processing (6, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 1) <---- (6, 5) ,Domain of node (6, 5) is {3, 6, 7}.


Revised: The value 7 is removed from the domain of node (6, 5), Now the domain is {3, 6}.


Processing (6, 1) <---- (6, 8) ,Domain of node (6, 8) is {6, 7}.


Revised: The value 7 is removed from the domain of node (6, 8), Now the domain is {6}.


Domain of (6, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(6, 8) for AC- check


Add to the Queue (0, 8),(6, 8) for AC- check


Add to the Queue (2, 8),(6, 8) for AC- check


Add to the Queue (6, 2),(6, 8) for AC- check


Add to the Queue (7, 7),(6, 8) for AC- check


Add to the Queue (6, 5),(6, 8) for AC- check


Add to the Queue (4, 8),(6, 8) for AC- check


Add to the Queue (8, 8),(6, 8) for AC- check


Add to the Queue (1, 8),(6, 8) for AC- check


Add to the Queue (6, 4),(6, 8) for AC- check


Add to the Queue (6, 7),(6, 8) for AC- check


Add to the Queue (7, 6),(6, 8) for AC- check


Add to the Queue (3, 8),(6, 8) for AC- check


Add to the Queue (5, 8),(6, 8) for AC- check


Add to the Queue (8, 7),(6, 8) for AC- check


Add to the Queue (6, 0),(6, 8) for AC- check


Add to the Queue (6, 6),(6, 8) for AC- check


Add to the Queue (6, 3),(6, 8) for AC- check


Add to the Queue (7, 8),(6, 8) for AC- check


Processing (6, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (6, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (6, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (6, 1) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (6, 1) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 1) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Processing (6, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (6, 1) <---- (8, 1) ,Domain of node (8, 1) is {9, 7}.


Revised: The value 7 is removed from the domain of node (8, 1), Now the domain is {9}.


Domain of (8, 1) is one value ,we need to add AC constraint.


Add to the Queue (3, 1),(8, 1) for AC- check


Add to the Queue (5, 1),(8, 1) for AC- check


Add to the Queue (8, 0),(8, 1) for AC- check


Add to the Queue (8, 3),(8, 1) for AC- check


Add to the Queue (8, 6),(8, 1) for AC- check


Add to the Queue (6, 2),(8, 1) for AC- check


Add to the Queue (7, 1),(8, 1) for AC- check


Add to the Queue (8, 2),(8, 1) for AC- check


Add to the Queue (8, 5),(8, 1) for AC- check


Add to the Queue (0, 1),(8, 1) for AC- check


Add to the Queue (8, 8),(8, 1) for AC- check


Add to the Queue (2, 1),(8, 1) for AC- check


Add to the Queue (7, 0),(8, 1) for AC- check


Add to the Queue (4, 1),(8, 1) for AC- check


Add to the Queue (8, 4),(8, 1) for AC- check


Add to the Queue (8, 7),(8, 1) for AC- check


Add to the Queue (1, 1),(8, 1) for AC- check


Add to the Queue (7, 2),(8, 1) for AC- check


Add to the Queue (6, 0),(8, 1) for AC- check


Processing (6, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (6, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 1) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 1) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 1) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 8) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (6, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (6, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (6, 8) <---- (6, 2) ,Domain of node (6, 2) is {1, 6}.


Revised: The value 6 is removed from the domain of node (6, 2), Now the domain is {1}.


Domain of (6, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(6, 2) for AC- check


Add to the Queue (0, 2),(6, 2) for AC- check


Add to the Queue (2, 2),(6, 2) for AC- check


Add to the Queue (7, 1),(6, 2) for AC- check


Add to the Queue (6, 5),(6, 2) for AC- check


Add to the Queue (4, 2),(6, 2) for AC- check


Add to the Queue (8, 2),(6, 2) for AC- check


Add to the Queue (1, 2),(6, 2) for AC- check


Add to the Queue (6, 1),(6, 2) for AC- check


Add to the Queue (7, 0),(6, 2) for AC- check


Add to the Queue (6, 4),(6, 2) for AC- check


Add to the Queue (6, 7),(6, 2) for AC- check


Add to the Queue (3, 2),(6, 2) for AC- check


Add to the Queue (5, 2),(6, 2) for AC- check


Add to the Queue (8, 1),(6, 2) for AC- check


Add to the Queue (7, 2),(6, 2) for AC- check


Add to the Queue (6, 0),(6, 2) for AC- check


Add to the Queue (6, 6),(6, 2) for AC- check


Add to the Queue (6, 3),(6, 2) for AC- check


Processing (6, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (6, 8) <---- (6, 5) ,Domain of node (6, 5) is {3, 6}.


Revised: The value 6 is removed from the domain of node (6, 5), Now the domain is {3}.


Domain of (6, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(6, 5) for AC- check


Add to the Queue (0, 5),(6, 5) for AC- check


Add to the Queue (2, 5),(6, 5) for AC- check


Add to the Queue (7, 4),(6, 5) for AC- check


Add to the Queue (6, 2),(6, 5) for AC- check


Add to the Queue (4, 5),(6, 5) for AC- check


Add to the Queue (8, 5),(6, 5) for AC- check


Add to the Queue (1, 5),(6, 5) for AC- check


Add to the Queue (6, 1),(6, 5) for AC- check


Add to the Queue (6, 4),(6, 5) for AC- check


Add to the Queue (7, 3),(6, 5) for AC- check


Add to the Queue (6, 7),(6, 5) for AC- check


Add to the Queue (3, 5),(6, 5) for AC- check


Add to the Queue (5, 5),(6, 5) for AC- check


Add to the Queue (8, 4),(6, 5) for AC- check


Add to the Queue (6, 0),(6, 5) for AC- check


Add to the Queue (6, 6),(6, 5) for AC- check


Add to the Queue (7, 5),(6, 5) for AC- check


Add to the Queue (6, 3),(6, 5) for AC- check


Processing (6, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (6, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 6, 7}.


Revised: The value 6 is removed from the domain of node (8, 8), Now the domain is {2, 7}.


Processing (6, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (6, 8) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 8) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Processing (6, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (6, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (6, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (6, 8) <---- (8, 7) ,Domain of node (8, 7) is {1, 9}.


Processing (6, 8) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 8) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 8) <---- (7, 8) ,Domain of node (7, 8) is {6, 7}.


Revised: The value 6 is removed from the domain of node (7, 8), Now the domain is {7}.


Domain of (7, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 6),(7, 8) for AC- check


Add to the Queue (0, 8),(7, 8) for AC- check


Add to the Queue (2, 8),(7, 8) for AC- check


Add to the Queue (7, 4),(7, 8) for AC- check


Add to the Queue (7, 1),(7, 8) for AC- check


Add to the Queue (7, 7),(7, 8) for AC- check


Add to the Queue (4, 8),(7, 8) for AC- check


Add to the Queue (8, 8),(7, 8) for AC- check


Add to the Queue (7, 0),(7, 8) for AC- check


Add to the Queue (1, 8),(7, 8) for AC- check


Add to the Queue (7, 3),(7, 8) for AC- check


Add to the Queue (6, 7),(7, 8) for AC- check


Add to the Queue (7, 6),(7, 8) for AC- check


Add to the Queue (3, 8),(7, 8) for AC- check


Add to the Queue (5, 8),(7, 8) for AC- check


Add to the Queue (8, 7),(7, 8) for AC- check


Add to the Queue (7, 2),(7, 8) for AC- check


Add to the Queue (6, 6),(7, 8) for AC- check


Add to the Queue (7, 5),(7, 8) for AC- check


Processing (8, 1) <---- (3, 1) ,Domain of node (3, 1) is {4}.


Processing (8, 1) <---- (5, 1) ,Domain of node (5, 1) is {8}.


Processing (8, 1) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 1) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 1) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 1) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (8, 1) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 1) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Processing (8, 1) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Processing (8, 1) <---- (0, 1) ,Domain of node (0, 1) is {3}.


Processing (8, 1) <---- (8, 8) ,Domain of node (8, 8) is {2, 7}.


Processing (8, 1) <---- (2, 1) ,Domain of node (2, 1) is {2}.


Processing (8, 1) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (8, 1) <---- (4, 1) ,Domain of node (4, 1) is {6}.


Processing (8, 1) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 1) <---- (8, 7) ,Domain of node (8, 7) is {1, 9}.


Revised: The value 9 is removed from the domain of node (8, 7), Now the domain is {1}.


Domain of (8, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(8, 7) for AC- check


Add to the Queue (8, 0),(8, 7) for AC- check


Add to the Queue (5, 7),(8, 7) for AC- check


Add to the Queue (8, 3),(8, 7) for AC- check


Add to the Queue (8, 6),(8, 7) for AC- check


Add to the Queue (7, 7),(8, 7) for AC- check


Add to the Queue (6, 8),(8, 7) for AC- check


Add to the Queue (8, 2),(8, 7) for AC- check


Add to the Queue (8, 5),(8, 7) for AC- check


Add to the Queue (8, 8),(8, 7) for AC- check


Add to the Queue (0, 7),(8, 7) for AC- check


Add to the Queue (2, 7),(8, 7) for AC- check


Add to the Queue (6, 7),(8, 7) for AC- check


Add to the Queue (7, 6),(8, 7) for AC- check


Add to the Queue (4, 7),(8, 7) for AC- check


Add to the Queue (8, 4),(8, 7) for AC- check


Add to the Queue (1, 7),(8, 7) for AC- check


Add to the Queue (6, 6),(8, 7) for AC- check


Add to the Queue (7, 8),(8, 7) for AC- check


Processing (8, 1) <---- (1, 1) ,Domain of node (1, 1) is {1}.


Processing (8, 1) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (8, 1) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (6, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (6, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (6, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (6, 2) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (6, 2) <---- (8, 2) ,Domain of node (8, 2) is {1, 6}.


Revised: The value 1 is removed from the domain of node (8, 2), Now the domain is {6}.


Domain of (8, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 2) for AC- check


Add to the Queue (8, 3),(8, 2) for AC- check


Add to the Queue (0, 2),(8, 2) for AC- check


Add to the Queue (8, 6),(8, 2) for AC- check


Add to the Queue (2, 2),(8, 2) for AC- check


Add to the Queue (7, 1),(8, 2) for AC- check


Add to the Queue (4, 2),(8, 2) for AC- check


Add to the Queue (8, 5),(8, 2) for AC- check


Add to the Queue (8, 8),(8, 2) for AC- check


Add to the Queue (1, 2),(8, 2) for AC- check


Add to the Queue (6, 1),(8, 2) for AC- check


Add to the Queue (7, 0),(8, 2) for AC- check


Add to the Queue (3, 2),(8, 2) for AC- check


Add to the Queue (5, 2),(8, 2) for AC- check


Add to the Queue (8, 4),(8, 2) for AC- check


Add to the Queue (8, 1),(8, 2) for AC- check


Add to the Queue (8, 7),(8, 2) for AC- check


Add to the Queue (7, 2),(8, 2) for AC- check


Add to the Queue (6, 0),(8, 2) for AC- check


Processing (6, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (6, 2) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (6, 2) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (6, 2) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 2) <---- (6, 7) ,Domain of node (6, 7) is {1, 9}.


Revised: The value 1 is removed from the domain of node (6, 7), Now the domain is {9}.


Domain of (6, 7) is one value ,we need to add AC constraint.


Add to the Queue (3, 7),(6, 7) for AC- check


Add to the Queue (5, 7),(6, 7) for AC- check


Add to the Queue (8, 6),(6, 7) for AC- check


Add to the Queue (7, 7),(6, 7) for AC- check


Add to the Queue (6, 5),(6, 7) for AC- check


Add to the Queue (6, 8),(6, 7) for AC- check


Add to the Queue (0, 7),(6, 7) for AC- check


Add to the Queue (8, 8),(6, 7) for AC- check


Add to the Queue (2, 7),(6, 7) for AC- check


Add to the Queue (6, 1),(6, 7) for AC- check


Add to the Queue (6, 4),(6, 7) for AC- check


Add to the Queue (7, 6),(6, 7) for AC- check


Add to the Queue (4, 7),(6, 7) for AC- check


Add to the Queue (8, 7),(6, 7) for AC- check


Add to the Queue (1, 7),(6, 7) for AC- check


Add to the Queue (6, 0),(6, 7) for AC- check


Add to the Queue (6, 6),(6, 7) for AC- check


Add to the Queue (6, 3),(6, 7) for AC- check


Add to the Queue (7, 8),(6, 7) for AC- check


Processing (6, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (6, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (6, 2) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (6, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (6, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 2) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 2) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (6, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (6, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (6, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (6, 5) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (6, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (6, 5) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Processing (6, 5) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (6, 5) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (6, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (6, 5) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (6, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (6, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (6, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (6, 5) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 5) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 5) <---- (7, 5) ,Domain of node (7, 5) is {6, 7}.


Processing (6, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 8) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (7, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (7, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (7, 8) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 8) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (7, 8) <---- (8, 8) ,Domain of node (8, 8) is {2, 7}.


Revised: The value 7 is removed from the domain of node (8, 8), Now the domain is {2}.


Domain of (8, 8) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 8) for AC- check


Add to the Queue (8, 3),(8, 8) for AC- check


Add to the Queue (8, 6),(8, 8) for AC- check


Add to the Queue (0, 8),(8, 8) for AC- check


Add to the Queue (2, 8),(8, 8) for AC- check


Add to the Queue (7, 7),(8, 8) for AC- check


Add to the Queue (6, 8),(8, 8) for AC- check


Add to the Queue (4, 8),(8, 8) for AC- check


Add to the Queue (8, 2),(8, 8) for AC- check


Add to the Queue (8, 5),(8, 8) for AC- check


Add to the Queue (1, 8),(8, 8) for AC- check


Add to the Queue (6, 7),(8, 8) for AC- check


Add to the Queue (7, 6),(8, 8) for AC- check


Add to the Queue (3, 8),(8, 8) for AC- check


Add to the Queue (8, 4),(8, 8) for AC- check


Add to the Queue (8, 1),(8, 8) for AC- check


Add to the Queue (8, 7),(8, 8) for AC- check


Add to the Queue (5, 8),(8, 8) for AC- check


Add to the Queue (6, 6),(8, 8) for AC- check


Processing (7, 8) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (7, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (7, 8) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 8) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (7, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (7, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (7, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (7, 8) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Processing (7, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 8) <---- (7, 5) ,Domain of node (7, 5) is {6, 7}.


Revised: The value 7 is removed from the domain of node (7, 5), Now the domain is {6}.


Domain of (7, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 3),(7, 5) for AC- check


Add to the Queue (0, 5),(7, 5) for AC- check


Add to the Queue (2, 5),(7, 5) for AC- check


Add to the Queue (7, 4),(7, 5) for AC- check


Add to the Queue (7, 1),(7, 5) for AC- check


Add to the Queue (7, 7),(7, 5) for AC- check


Add to the Queue (6, 5),(7, 5) for AC- check


Add to the Queue (4, 5),(7, 5) for AC- check


Add to the Queue (8, 5),(7, 5) for AC- check


Add to the Queue (1, 5),(7, 5) for AC- check


Add to the Queue (7, 0),(7, 5) for AC- check


Add to the Queue (6, 4),(7, 5) for AC- check


Add to the Queue (7, 3),(7, 5) for AC- check


Add to the Queue (7, 6),(7, 5) for AC- check


Add to the Queue (3, 5),(7, 5) for AC- check


Add to the Queue (5, 5),(7, 5) for AC- check


Add to the Queue (8, 4),(7, 5) for AC- check


Add to the Queue (7, 2),(7, 5) for AC- check


Add to the Queue (6, 3),(7, 5) for AC- check


Processing (8, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (8, 7) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 7) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (8, 7) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 7) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 7) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (8, 7) <---- (6, 8) ,Domain of node (6, 8) is {6}.


Processing (8, 7) <---- (8, 2) ,Domain of node (8, 2) is {6}.


Processing (8, 7) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Processing (8, 7) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (8, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (8, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (8, 7) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (8, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (8, 7) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (8, 7) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (8, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (8, 7) <---- (7, 8) ,Domain of node (7, 8) is {7}.


Processing (8, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 2) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (8, 2) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (8, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (8, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (8, 2) <---- (8, 5) ,Domain of node (8, 5) is {6, 7}.


Revised: The value 6 is removed from the domain of node (8, 5), Now the domain is {7}.


Domain of (8, 5) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(8, 5) for AC- check


Add to the Queue (8, 3),(8, 5) for AC- check


Add to the Queue (8, 6),(8, 5) for AC- check


Add to the Queue (0, 5),(8, 5) for AC- check


Add to the Queue (2, 5),(8, 5) for AC- check


Add to the Queue (7, 4),(8, 5) for AC- check


Add to the Queue (6, 5),(8, 5) for AC- check


Add to the Queue (4, 5),(8, 5) for AC- check


Add to the Queue (8, 8),(8, 5) for AC- check


Add to the Queue (1, 5),(8, 5) for AC- check


Add to the Queue (6, 4),(8, 5) for AC- check


Add to the Queue (7, 3),(8, 5) for AC- check


Add to the Queue (3, 5),(8, 5) for AC- check


Add to the Queue (5, 5),(8, 5) for AC- check


Add to the Queue (8, 4),(8, 5) for AC- check


Add to the Queue (8, 1),(8, 5) for AC- check


Add to the Queue (8, 7),(8, 5) for AC- check


Add to the Queue (7, 5),(8, 5) for AC- check


Add to the Queue (6, 3),(8, 5) for AC- check


Processing (8, 2) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (8, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (8, 2) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (8, 2) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (8, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (8, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (8, 2) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 2) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (8, 2) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 2) <---- (7, 2) ,Domain of node (7, 2) is {8, 6}.


Revised: The value 6 is removed from the domain of node (7, 2), Now the domain is {8}.


Domain of (7, 2) is one value ,we need to add AC constraint.


Add to the Queue (8, 0),(7, 2) for AC- check


Add to the Queue (0, 2),(7, 2) for AC- check


Add to the Queue (2, 2),(7, 2) for AC- check


Add to the Queue (7, 4),(7, 2) for AC- check


Add to the Queue (6, 2),(7, 2) for AC- check


Add to the Queue (7, 1),(7, 2) for AC- check


Add to the Queue (7, 7),(7, 2) for AC- check


Add to the Queue (4, 2),(7, 2) for AC- check


Add to the Queue (1, 2),(7, 2) for AC- check


Add to the Queue (6, 1),(7, 2) for AC- check


Add to the Queue (7, 0),(7, 2) for AC- check


Add to the Queue (7, 3),(7, 2) for AC- check


Add to the Queue (7, 6),(7, 2) for AC- check


Add to the Queue (3, 2),(7, 2) for AC- check


Add to the Queue (5, 2),(7, 2) for AC- check


Add to the Queue (8, 1),(7, 2) for AC- check


Add to the Queue (6, 0),(7, 2) for AC- check


Add to the Queue (7, 5),(7, 2) for AC- check


Add to the Queue (7, 8),(7, 2) for AC- check


Processing (8, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 7) <---- (3, 7) ,Domain of node (3, 7) is {7}.


Processing (6, 7) <---- (5, 7) ,Domain of node (5, 7) is {6}.


Processing (6, 7) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (6, 7) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (6, 7) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (6, 7) <---- (6, 8) ,Domain of node (6, 8) is {6}.


Processing (6, 7) <---- (0, 7) ,Domain of node (0, 7) is {2}.


Processing (6, 7) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (6, 7) <---- (2, 7) ,Domain of node (2, 7) is {5}.


Processing (6, 7) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (6, 7) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (6, 7) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (6, 7) <---- (4, 7) ,Domain of node (4, 7) is {8}.


Processing (6, 7) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (6, 7) <---- (1, 7) ,Domain of node (1, 7) is {4}.


Processing (6, 7) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (6, 7) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (6, 7) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (6, 7) <---- (7, 8) ,Domain of node (7, 8) is {7}.


Processing (8, 8) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 8) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 8) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 8) <---- (0, 8) ,Domain of node (0, 8) is {9}.


Processing (8, 8) <---- (2, 8) ,Domain of node (2, 8) is {8}.


Processing (8, 8) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (8, 8) <---- (6, 8) ,Domain of node (6, 8) is {6}.


Processing (8, 8) <---- (4, 8) ,Domain of node (4, 8) is {1}.


Processing (8, 8) <---- (8, 2) ,Domain of node (8, 2) is {6}.


Processing (8, 8) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (8, 8) <---- (1, 8) ,Domain of node (1, 8) is {3}.


Processing (8, 8) <---- (6, 7) ,Domain of node (6, 7) is {9}.


Processing (8, 8) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (8, 8) <---- (3, 8) ,Domain of node (3, 8) is {5}.


Processing (8, 8) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 8) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (8, 8) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 8) <---- (5, 8) ,Domain of node (5, 8) is {4}.


Processing (8, 8) <---- (6, 6) ,Domain of node (6, 6) is {5}.


Processing (7, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (7, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (7, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (7, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 5) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 5) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 5) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (7, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (7, 5) <---- (8, 5) ,Domain of node (8, 5) is {7}.


Processing (7, 5) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (7, 5) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (7, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (7, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 5) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (7, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (7, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (7, 5) <---- (7, 2) ,Domain of node (7, 2) is {8}.


Processing (7, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (8, 5) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (8, 5) <---- (8, 3) ,Domain of node (8, 3) is {5}.


Processing (8, 5) <---- (8, 6) ,Domain of node (8, 6) is {8}.


Processing (8, 5) <---- (0, 5) ,Domain of node (0, 5) is {1}.


Processing (8, 5) <---- (2, 5) ,Domain of node (2, 5) is {9}.


Processing (8, 5) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (8, 5) <---- (6, 5) ,Domain of node (6, 5) is {3}.


Processing (8, 5) <---- (4, 5) ,Domain of node (4, 5) is {4}.


Processing (8, 5) <---- (8, 8) ,Domain of node (8, 8) is {2}.


Processing (8, 5) <---- (1, 5) ,Domain of node (1, 5) is {2}.


Processing (8, 5) <---- (6, 4) ,Domain of node (6, 4) is {2}.


Processing (8, 5) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (8, 5) <---- (3, 5) ,Domain of node (3, 5) is {8}.


Processing (8, 5) <---- (5, 5) ,Domain of node (5, 5) is {5}.


Processing (8, 5) <---- (8, 4) ,Domain of node (8, 4) is {4}.


Processing (8, 5) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (8, 5) <---- (8, 7) ,Domain of node (8, 7) is {1}.


Processing (8, 5) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (8, 5) <---- (6, 3) ,Domain of node (6, 3) is {8}.


Processing (7, 2) <---- (8, 0) ,Domain of node (8, 0) is {3}.


Processing (7, 2) <---- (0, 2) ,Domain of node (0, 2) is {7}.


Processing (7, 2) <---- (2, 2) ,Domain of node (2, 2) is {4}.


Processing (7, 2) <---- (7, 4) ,Domain of node (7, 4) is {1}.


Processing (7, 2) <---- (6, 2) ,Domain of node (6, 2) is {1}.


Processing (7, 2) <---- (7, 1) ,Domain of node (7, 1) is {5}.


Processing (7, 2) <---- (7, 7) ,Domain of node (7, 7) is {3}.


Processing (7, 2) <---- (4, 2) ,Domain of node (4, 2) is {5}.


Processing (7, 2) <---- (1, 2) ,Domain of node (1, 2) is {9}.


Processing (7, 2) <---- (6, 1) ,Domain of node (6, 1) is {7}.


Processing (7, 2) <---- (7, 0) ,Domain of node (7, 0) is {2}.


Processing (7, 2) <---- (7, 3) ,Domain of node (7, 3) is {9}.


Processing (7, 2) <---- (7, 6) ,Domain of node (7, 6) is {4}.


Processing (7, 2) <---- (3, 2) ,Domain of node (3, 2) is {3}.


Processing (7, 2) <---- (5, 2) ,Domain of node (5, 2) is {2}.


Processing (7, 2) <---- (8, 1) ,Domain of node (8, 1) is {9}.


Processing (7, 2) <---- (6, 0) ,Domain of node (6, 0) is {4}.


Processing (7, 2) <---- (7, 5) ,Domain of node (7, 5) is {6}.


Processing (7, 2) <---- (7, 8) ,Domain of node (7, 8) is {7}.


End of Binary Constraints, Checks done for cell: (6,1).


After make inferences we see that the domain of cell (6, 2) is {1}


After make inferences we see that the domain of cell (6, 5) is {3}


After make inferences we see that the domain of cell (6, 7) is {9}


After make inferences we see that the domain of cell (6, 8) is {6}


After make inferences we see that the domain of cell (7, 2) is {8}


After make inferences we see that the domain of cell (7, 5) is {6}


After make inferences we see that the domain of cell (7, 8) is {7}


After make inferences we see that the domain of cell (8, 1) is {9}


After make inferences we see that the domain of cell (8, 2) is {6}


After make inferences we see that the domain of cell (8, 5) is {7}


After make inferences we see that the domain of cell (8, 7) is {1}


After make inferences we see that the domain of cell (8, 8) is {2}


Adding to board in cell :(6, 2),value :1


Adding to board in cell :(6, 5),value :3


Adding to board in cell :(6, 7),value :9


Adding to board in cell :(6, 8),value :6


Adding to board in cell :(7, 2),value :8


Adding to board in cell :(7, 5),value :6


Adding to board in cell :(7, 8),value :7


Adding to board in cell :(8, 1),value :9


Adding to board in cell :(8, 2),value :6


Adding to board in cell :(8, 5),value :7


Adding to board in cell :(8, 7),value :1


Adding to board in cell :(8, 8),value :2


Go deep in the search tree parent cell (6,1) with value 7 ,current depth:34


MRV cell is None


AI Finish Solving